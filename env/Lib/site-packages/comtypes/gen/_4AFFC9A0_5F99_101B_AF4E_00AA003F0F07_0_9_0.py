# -*- coding: mbcs -*-

from ctypes import *
import comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8
from comtypes import (
    _check_version, BSTR, CoClass, COMMETHOD, dispid, DISPMETHOD,
    GUID, IUnknown
)
import comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0
from ctypes import HRESULT
from comtypes.automation import _midlSAFEARRAY, IDispatch, VARIANT
from ctypes.wintypes import VARIANT_BOOL
import comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3
import comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0
import comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8
from typing import TYPE_CHECKING

if TYPE_CHECKING:
    from comtypes import hints


_lcid = 0  # change this if required
typelib_path = 'C:\\Program Files\\Microsoft Office\\Root\\Office16\\MSACC.OLB'

# values for enumeration 'AcPrintPaperSize'
acPRPSLetter = 1
acPRPSLetterSmall = 2
acPRPSTabloid = 3
acPRPSLedger = 4
acPRPSLegal = 5
acPRPSStatement = 6
acPRPSExecutive = 7
acPRPSA3 = 8
acPRPSA4 = 9
acPRPSA4Small = 10
acPRPSA5 = 11
acPRPSB4 = 12
acPRPSB5 = 13
acPRPSFolio = 14
acPRPSQuarto = 15
acPRPS10x14 = 16
acPRPS11x17 = 17
acPRPSNote = 18
acPRPSEnv9 = 19
acPRPSEnv10 = 20
acPRPSEnv11 = 21
acPRPSEnv12 = 22
acPRPSEnv14 = 23
acPRPSCSheet = 24
acPRPSDSheet = 25
acPRPSESheet = 26
acPRPSEnvDL = 27
acPRPSEnvC3 = 29
acPRPSEnvC4 = 30
acPRPSEnvC5 = 28
acPRPSEnvC6 = 31
acPRPSEnvC65 = 32
acPRPSEnvB4 = 33
acPRPSEnvB5 = 34
acPRPSEnvB6 = 35
acPRPSEnvItaly = 36
acPRPSEnvMonarch = 37
acPRPSEnvPersonal = 38
acPRPSFanfoldUS = 39
acPRPSFanfoldStdGerman = 40
acPRPSFanfoldLglGerman = 41
acPRPSUser = 256
AcPrintPaperSize = c_int  # enum

# values for enumeration 'AcImeMode'
acImeModeNoControl = 0
acImeModeOn = 1
acImeModeOff = 2
acImeModeDisable = 3
acImeModeHiragana = 4
acImeModeKatakana = 5
acImeModeKatakanaHalf = 6
acImeModeAlphaFull = 7
acImeModeAlpha = 8
acImeModeHangulFull = 9
acImeModeHangul = 10
AcImeMode = c_int  # enum

# values for enumeration 'AcImeSentenceMode'
acImeSentenceModePhrasePredict = 0
acImeSentenceModePluralClause = 1
acImeSentenceModeConversation = 2
acImeSentenceModeNone = 3
AcImeSentenceMode = c_int  # enum

# values for enumeration 'AcLayoutType'
acLayoutNone = 0
acLayoutTabular = 1
acLayoutStacked = 2
AcLayoutType = c_int  # enum

# values for enumeration 'AcHorizontalAnchor'
acHorizontalAnchorLeft = 0
acHorizontalAnchorRight = 1
acHorizontalAnchorBoth = 2
AcHorizontalAnchor = c_int  # enum

# values for enumeration 'AcVerticalAnchor'
acVerticalAnchorTop = 0
acVerticalAnchorBottom = 1
acVerticalAnchorBoth = 2
AcVerticalAnchor = c_int  # enum

# values for enumeration 'AcCurrentView'
acCurViewDesign = 0
acCurViewFormBrowse = 1
acCurViewDatasheet = 2
acCurViewPivotTable = 3
acCurViewPivotChart = 4
acCurViewPreview = 5
acCurViewReportBrowse = 6
acCurViewLayout = 7
AcCurrentView = c_int  # enum

# values for enumeration 'AcWebBrowserScrollBars'
acScrollAuto = 0
acScrollYes = 1
acScrollNo = 2
AcWebBrowserScrollBars = c_int  # enum

# values for enumeration 'AcWebBrowserState'
acUnintialized = 0
acLoading = 1
acLoaded = 2
acInteractive = 3
acComplete = 4
AcWebBrowserState = c_int  # enum

# values for enumeration 'AcDefReportView'
acDefViewPreview = 0
acDefViewReportBrowse = 1
AcDefReportView = c_int  # enum

# values for enumeration 'AcImportXMLOption'
acStructureOnly = 0
acStructureAndData = 1
acAppendData = 2
AcImportXMLOption = c_int  # enum

# values for enumeration 'AcExportXMLObjectType'
acExportTable = 0
acExportQuery = 1
acExportForm = 2
acExportReport = 3
acExportServerView = 7
acExportStoredProcedure = 9
acExportFunction = 10
AcExportXMLObjectType = c_int  # enum

# values for enumeration 'AcSplitFormOrientation'
acDatasheetOnTop = 0
acDatasheetOnBottom = 1
acDatasheetOnLeft = 2
acDatasheetOnRight = 3
AcSplitFormOrientation = c_int  # enum

# values for enumeration 'AcExportXMLEncoding'
acUTF8 = 0
acUTF16 = 1
AcExportXMLEncoding = c_int  # enum

# values for enumeration 'AcSplitFormDatasheet'
acDatasheetAllowEdits = 0
acDatasheetReadOnly = 1
AcSplitFormDatasheet = c_int  # enum

# values for enumeration 'AcCursorOnHover'
acCursorOnHoverDefault = 0
acCursorOnHoverHyperlinkHand = 1
AcCursorOnHover = c_int  # enum

# values for enumeration 'AcPictureCaptionArrangement'
acNoPictureCaption = 0
acGeneral = 1
acTop = 2
acBottom = 3
acLeft = 4
acRight = 5
AcPictureCaptionArrangement = c_int  # enum

# values for enumeration 'AcResourceType'
acResourceTheme = 0
acResourceImage = 1
AcResourceType = c_int  # enum

# values for enumeration 'AcSplitFormPrinting'
acFormOnly = 0
acGridOnly = 1
AcSplitFormPrinting = c_int  # enum

# values for enumeration 'AcTransformXMLScriptOption'
acEnableScript = 0
acPromptScript = 1
acDisableScript = 2
AcTransformXMLScriptOption = c_int  # enum

# values for enumeration 'AcNavigationSpan'
acHorizontal = 0
acVertical = 1
AcNavigationSpan = c_int  # enum

# values for enumeration 'AcPrintObjQuality'
acPRPQDraft = -1
acPRPQLow = -2
acPRPQMedium = -3
acPRPQHigh = -4
AcPrintObjQuality = c_int  # enum

# values for enumeration 'AcColorIndex'
acColorIndexBlack = 0
acColorIndexMaroon = 1
acColorIndexGreen = 2
acColorIndexOlive = 3
acColorIndexDarkBlue = 4
acColorIndexViolet = 5
acColorIndexTeal = 6
acColorIndexGray = 7
acColorIndexSilver = 8
acColorIndexRed = 9
acColorIndexBrightGreen = 10
acColorIndexYellow = 11
acColorIndexBlue = 12
acColorIndexFuschia = 13
acColorIndexAqua = 14
acColorIndexWhite = 15
AcColorIndex = c_int  # enum

# values for enumeration 'AcExportXMLSchemaFormat'
acSchemaNone = 0
acSchemaXSD = 1
AcExportXMLSchemaFormat = c_int  # enum

# values for enumeration 'RefKind'
TypeLib = 0
Project = 1
RefKind = c_int  # enum

# values for enumeration 'ProcKind'
Proc = 0
Let = 1
Set = 2
Get = 3
ProcKind = c_int  # enum

# values for enumeration 'AcExportXMLOtherFlags'
acEmbedSchema = 1
acExcludePrimaryKeyAndIndexes = 2
acRunFromServer = 4
acLiveReportSource = 8
acPersistReportML = 16
acExportAllTableAndFieldProperties = 32
AcExportXMLOtherFlags = c_int  # enum

# values for enumeration 'AcTextFormat'
acTextFormatPlain = 0
acTextFormatHTMLRichText = 1
AcTextFormat = c_int  # enum

# values for enumeration 'AcDisplayAsHyperlink'
acDisplayAsHyperlinkIfHyperlink = 0
acDisplayAsHyperlinkAlways = 1
acDisplayAsHyperlinkOnScreenOnly = 2
AcDisplayAsHyperlink = c_int  # enum

# values for enumeration 'AcCloseSave'
acSavePrompt = 0
acSaveYes = 1
acSaveNo = 2
AcCloseSave = c_int  # enum

# values for enumeration 'AcModuleType'
acStandardModule = 0
acClassModule = 1
AcModuleType = c_int  # enum

# values for enumeration 'AcDisplayAs'
acDisplayAsImageIcon = 0
acDisplayAsIcon = 1
acDisplayAsPaperclip = 2
AcDisplayAs = c_int  # enum

# values for enumeration 'AcPrintItemLayout'
acPRHorizontalColumnLayout = 1953
acPRVerticalColumnLayout = 1954
AcPrintItemLayout = c_int  # enum

# values for enumeration 'AcQuitOption'
acQuitPrompt = 0
acQuitSaveAll = 1
acQuitSaveNone = 2
AcQuitOption = c_int  # enum

# values for enumeration 'AcSection'
acDetail = 0
acHeader = 1
acFooter = 2
acPageHeader = 3
acPageFooter = 4
acGroupLevel1Header = 5
acGroupLevel1Footer = 6
acGroupLevel2Header = 7
acGroupLevel2Footer = 8
AcSection = c_int  # enum

# values for enumeration 'AcProjectType'
acNull = 0
acADP = 1
acMDB = 2
AcProjectType = c_int  # enum

# values for enumeration 'AcFileFormat'
acFileFormatAccess2 = 2
acFileFormatAccess95 = 7
acFileFormatAccess97 = 8
acFileFormatAccess2000 = 9
acFileFormatAccess2002 = 10
acFileFormatAccess2007 = 12
AcFileFormat = c_int  # enum

# values for enumeration 'AcNewDatabaseFormat'
acNewDatabaseFormatUserDefault = 0
acNewDatabaseFormatAccess2000 = 9
acNewDatabaseFormatAccess2002 = 10
acNewDatabaseFormatAccess2007 = 12
AcNewDatabaseFormat = c_int  # enum

# values for enumeration 'AcControlType'
acLabel = 100
acRectangle = 101
acLine = 102
acImage = 103
acCommandButton = 104
acOptionButton = 105
acCheckBox = 106
acOptionGroup = 107
acBoundObjectFrame = 108
acTextBox = 109
acListBox = 110
acComboBox = 111
acSubform = 112
acObjectFrame = 114
acPageBreak = 118
acCustomControl = 119
acToggleButton = 122
acTabCtl = 123
acPage = 124
acAttachment = 126
acEmptyCell = 127
acWebBrowser = 128
acNavigationControl = 129
acNavigationButton = 130
acChart = 133
acEdgeBrowser = 134
AcControlType = c_int  # enum

# values for enumeration 'AcChartType'
acChartColumnClustered = 0
acChartColumnStacked = 1
acChartColumnStacked100 = 2
acChartBarClustered = 3
acChartBarStacked = 4
acChartBarStacked100 = 5
acChartLine = 6
acChartLineStacked = 7
acChartLineStacked100 = 8
acChartPie = 9
acChartCombo = 10
acChartArea = 11
acChartAreaStacked = 12
acChartAreaStacked100 = 13
acChartRadar = 14
acChartRadarFilled = 15
acChartBoxWhisker = 16
acChartBubble = 17
acChartDoughnut = 18
acChartFunnel = 19
acChartScatter = 20
acChartWaterfall = 21
acChartWordCloud = 22
acChartArc = 23
acChartPareto = 24
AcChartType = c_int  # enum

# values for enumeration 'AcObjectType'
acDefault = -1
acTable = 0
acQuery = 1
acForm = 2
acReport = 3
acMacro = 4
acModule = 5
acDataAccessPage = 6
acServerView = 7
acDiagram = 8
acStoredProcedure = 9
acFunction = 10
acDatabaseProperties = 11
acTableDataMacro = 12
AcObjectType = c_int  # enum

# values for enumeration 'AcDataObjectType'
acActiveDataObject = -1
acDataTable = 0
acDataQuery = 1
acDataForm = 2
acDataReport = 3
acDataServerView = 7
acDataStoredProcedure = 9
acDataFunction = 10
AcDataObjectType = c_int  # enum

# values for enumeration 'AcPrintColor'
acPRCMMonochrome = 1
acPRCMColor = 2
AcPrintColor = c_int  # enum

# values for enumeration 'AcPrintDuplex'
acPRDPSimplex = 1
acPRDPHorizontal = 2
acPRDPVertical = 3
AcPrintDuplex = c_int  # enum

# values for enumeration 'AcPrintOrientation'
acPRORPortrait = 1
acPRORLandscape = 2
AcPrintOrientation = c_int  # enum

# values for enumeration 'AcPrintPaperBin'
acPRBNUpper = 1
acPRBNLower = 2
acPRBNMiddle = 3
acPRBNManual = 4
acPRBNEnvelope = 5
acPRBNEnvManual = 6
acPRBNAuto = 7
acPRBNTractor = 8
acPRBNSmallFmt = 9
acPRBNLargeFmt = 10
acPRBNLargeCapacity = 11
acPRBNCassette = 14
acPRBNFormSource = 15
AcPrintPaperBin = c_int  # enum

# values for enumeration 'AcDataTransferType'
acImport = 0
acExport = 1
acLink = 2
AcDataTransferType = c_int  # enum

# values for enumeration 'AcSendObjectType'
acSendNoObject = -1
acSendTable = 0
acSendQuery = 1
acSendForm = 2
acSendReport = 3
acSendModule = 5
acSendDataAccessPage = 6
AcSendObjectType = c_int  # enum

# values for enumeration 'AcDefView'
acDefViewSingle = 0
acDefViewContinuous = 1
acDefViewDatasheet = 2
acDefViewPivotTable = 3
acDefViewPivotChart = 4
acDefViewSplitForm = 5
AcDefView = c_int  # enum

# values for enumeration 'AcLegendPosition'
acLegendPositionLeft = 0
acLegendPositionTop = 1
acLegendPositionRight = 2
acLegendPositionBottom = 3
AcLegendPosition = c_int  # enum

# values for enumeration 'AcAxisUnits'
acAxisUnitsNone = 0
acAxisUnitsPercentage = 1
acAxisUnitsHundreds = 2
acAxisUnitsThousands = 3
acAxisUnitsTenThousands = 4
acAxisUnitsHundredThousands = 5
acAxisUnitsMillions = 6
acAxisUnitsTenMillions = 7
acAxisUnitsHundredMillions = 8
acAxisUnitsBillions = 9
acAxisUnitsTenBillions = 10
acAxisUnitsHundredBillions = 11
acAxisUnitsTrillions = 12
AcAxisUnits = c_int  # enum

# values for enumeration 'AcFindField'
acCurrent = -1
acAll = 0
AcFindField = c_int  # enum

# values for enumeration 'AcFindMatch'
acAnywhere = 0
acEntire = 1
acStart = 2
AcFindMatch = c_int  # enum

# values for enumeration 'AcFormView'
acNormal = 0
acDesign = 1
acPreview = 2
acFormDS = 3
acFormPivotTable = 4
acFormPivotChart = 5
acLayout = 6
AcFormView = c_int  # enum

# values for enumeration 'AcAxisRange'
acAxisRangeAuto = 0
acAxisRangeFixed = 1
AcAxisRange = c_int  # enum

# values for enumeration 'AcValueAxis'
acPrimaryAxis = 0
acSecondaryAxis = 1
AcValueAxis = c_int  # enum

# values for enumeration 'AcTrendlineOptions'
acTrendlineNone = 0
acTrendlineLinear = 1
acTrendlineExponential = 2
acTrendlineLogarithmic = 3
acTrendlinePolynomial = 4
acTrendlinePower = 5
acTrendlineMovingAverage = 6
AcTrendlineOptions = c_int  # enum

# values for enumeration 'AcDataAccessPageView'
acDataAccessPageBrowse = 0
acDataAccessPageDesign = 1
AcDataAccessPageView = c_int  # enum

# values for enumeration 'AcOpenDataMode'
acAdd = 0
acEdit = 1
acReadOnly = 2
AcOpenDataMode = c_int  # enum

# values for enumeration 'AcFormOpenDataMode'
acFormPropertySettings = -1
acFormAdd = 0
acFormEdit = 1
acFormReadOnly = 2
AcFormOpenDataMode = c_int  # enum

# values for enumeration 'AcDashType'
acDashTypeSolid = 0
acDashTypeDash = 1
acDashTypeDot = 2
acDashTypeDashDot = 3
acDashTypeDashDotDot = 4
AcDashType = c_int  # enum

# values for enumeration 'AcOutputObjectType'
acOutputTable = 0
acOutputQuery = 1
acOutputForm = 2
acOutputReport = 3
acOutputModule = 5
acOutputDataAccessPage = 6
acOutputServerView = 7
acOutputStoredProcedure = 9
acOutputFunction = 10
AcOutputObjectType = c_int  # enum

# values for enumeration 'AcSeparatorCharacters'
acSeparatorCharactersSystemSeparator = 0
acSeparatorCharactersNewLine = 1
acSeparatorCharactersSemiColon = 2
acSeparatorCharactersComma = 3
AcSeparatorCharacters = c_int  # enum

# values for enumeration 'AcMissingDataPolicy'
acPlotAsZero = 0
acDoNotPlot = 1
acPlotAsInterpolated = 2
AcMissingDataPolicy = c_int  # enum

# values for enumeration 'AcMarkerType'
acMarkerNone = 0
acMarkerSquare = 1
acMarkerDiamond = 2
acMarkerTriangle = 3
acMarkerX = 4
acMarkerAsterisk = 5
acMarkerShortDash = 6
acMarkerLongDash = 7
acMarkerCircle = 8
acMarkerPlus = 9
AcMarkerType = c_int  # enum

# values for enumeration 'AcPrintQuality'
acHigh = 0
acMedium = 1
acLow = 2
acDraft = 3
AcPrintQuality = c_int  # enum

# values for enumeration 'AcSearchDirection'
acUp = 0
acDown = 1
acSearchAll = 2
AcSearchDirection = c_int  # enum

# values for enumeration 'AcRecord'
acPrevious = 0
acNext = 1
acFirst = 2
acLast = 3
acGoTo = 4
acNewRec = 5
AcRecord = c_int  # enum

# values for enumeration 'AcWindowMode'
acWindowNormal = 0
acHidden = 1
acIcon = 2
acDialog = 3
AcWindowMode = c_int  # enum

# values for enumeration 'AcView'
acViewNormal = 0
acViewDesign = 1
acViewPreview = 2
acViewPivotTable = 3
acViewPivotChart = 4
acViewReport = 5
acViewLayout = 6
acViewSql = 7
AcView = c_int  # enum

# values for enumeration 'AcPrintRange'
acPrintAll = 0
acSelection = 1
acPages = 2
AcPrintRange = c_int  # enum

# values for enumeration 'AcSpreadSheetType'
acSpreadsheetTypeExcel3 = 0
acSpreadsheetTypeLotusWK1 = 2
acSpreadsheetTypeLotusWK3 = 3
acSpreadsheetTypeLotusWJ2 = 4
acSpreadsheetTypeExcel5 = 5
acSpreadsheetTypeExcel7 = 5
acSpreadsheetTypeExcel4 = 6
acSpreadsheetTypeLotusWK4 = 7
acSpreadsheetTypeExcel97 = 8
acSpreadsheetTypeExcel8 = 8
acSpreadsheetTypeExcel9 = 8
acSpreadsheetTypeExcel12 = 9
acSpreadsheetTypeExcel12Xml = 10
AcSpreadSheetType = c_int  # enum

# values for enumeration 'AcTextTransferType'
acImportDelim = 0
acImportFixed = 1
acExportDelim = 2
acExportFixed = 3
acExportMerge = 4
acLinkDelim = 5
acLinkFixed = 6
acImportHTML = 7
acExportHTML = 8
acLinkHTML = 9
AcTextTransferType = c_int  # enum

# values for enumeration 'AcShowToolbar'
acToolbarYes = 0
acToolbarWhereApprop = 1
acToolbarNo = 2
AcShowToolbar = c_int  # enum

# values for enumeration 'AcCommand'
acCmdWindowUnhide = 1
acCmdWindowHide = 2
acCmdExit = 3
acCmdCompactDatabase = 4
acCmdEncryptDecryptDatabase = 5
acCmdRepairDatabase = 6
acCmdMakeMDEFile = 7
acCmdMoreWindows = 8
acCmdAppRestore = 9
acCmdAppMaximize = 10
acCmdAppMinimize = 11
acCmdAppMove = 12
acCmdAppSize = 13
acCmdDocRestore = 14
acCmdDocMaximize = 15
acCmdDocMove = 16
acCmdDocSize = 17
acCmdRefresh = 18
acCmdFont = 19
acCmdSave = 20
acCmdSaveAs = 21
acCmdWindowCascade = 22
acCmdTileVertically = 23
acCmdWindowArrangeIcons = 24
acCmdOpenDatabase = 25
acCmdNewDatabase = 26
acCmdOLEDDELinks = 27
acCmdRecordsGoToNew = 28
acCmdReplace = 29
acCmdFind = 30
acCmdRunMacro = 31
acCmdPageSetup = 32
acCmdInsertObject = 33
acCmdDuplicate = 34
acCmdAboutMicrosoftAccess = 35
acCmdFormHdrFtr = 36
acCmdReportHdrFtr = 37
acCmdPasteAppend = 38
acCmdInsertFile = 39
acCmdSelectForm = 40
acCmdTabOrder = 41
acCmdFieldList = 42
acCmdAlignLeft = 43
acCmdAlignRight = 44
acCmdAlignTop = 45
acCmdAlignBottom = 46
acCmdAlignToGrid = 47
acCmdSizeToGrid = 48
acCmdOptions = 49
acCmdSelectRecord = 50
acCmdSortingAndGrouping = 51
acCmdBringToFront = 52
acCmdSendToBack = 53
acCmdPrintPreview = 54
acCmdApplyDefault = 55
acCmdSetControlDefaults = 56
acCmdOLEObjectDefaultVerb = 57
acCmdClose = 58
acCmdSizeToFit = 59
acCmdDocMinimize = 60
acCmdViewRuler = 61
acCmdSnapToGrid = 62
acCmdViewGrid = 63
acCmdPasteSpecial = 64
acCmdRecordsGoToNext = 65
acCmdRecordsGoToPrevious = 66
acCmdRecordsGoToFirst = 67
acCmdRecordsGoToLast = 68
acCmdSizeToFitForm = 69
acCmdEditingAllowed = 70
acCmdClearGrid = 71
acCmdJoinProperties = 72
acCmdQueryTotals = 73
acCmdQueryTypeCrosstab = 74
acCmdTableNames = 75
acCmdQueryParameters = 76
acCmdFormatCells = 77
acCmdDataEntry = 78
acCmdHideColumns = 79
acCmdUnhideColumns = 80
acCmdDeleteQueryColumn = 81
acCmdInsertQueryColumn = 82
acCmdRemoveTable = 84
acCmdViewToolbox = 85
acCmdMacroNames = 86
acCmdMacroConditions = 87
acCmdSingleStep = 88
acCmdQueryTypeSelect = 89
acCmdQueryTypeUpdate = 90
acCmdQueryTypeAppend = 91
acCmdQueryTypeDelete = 92
acCmdApplyFilterSort = 93
acCmdQueryTypeMakeTable = 94
acCmdLoadFromQuery = 95
acCmdSaveAsQuery = 96
acCmdSaveRecord = 97
acCmdAdvancedFilterSort = 99
acCmdMicrosoftAccessHelpTopics = 100
acCmdLinkTables = 102
acCmdUserAndGroupPermissions = 103
acCmdUserAndGroupAccounts = 104
acCmdFreezeColumn = 105
acCmdUnfreezeAllColumns = 106
acCmdPrimaryKey = 107
acCmdSubformDatasheet = 108
acCmdSelectAllRecords = 109
acCmdViewTables = 110
acCmdViewQueries = 111
acCmdViewForms = 112
acCmdViewReports = 113
acCmdViewMacros = 114
acCmdViewModules = 115
acCmdRowHeight = 116
acCmdColumnWidth = 117
acCmdInsertFileIntoModule = 118
acCmdSaveModuleAsText = 119
acCmdFindPrevious = 120
acCmdWindowSplit = 121
acCmdProcedureDefinition = 122
acCmdDebugWindow = 123
acCmdReset = 124
acCmdCompileAllModules = 125
acCmdCompileAndSaveAllModules = 126
acCmdGoContinue = 127
acCmdStepOver = 128
acCmdSetNextStatement = 129
acCmdShowNextStatement = 130
acCmdToggleBreakpoint = 131
acCmdClearAllBreakpoints = 132
acCmdRelationships = 133
acCmdNewObjectTable = 134
acCmdNewObjectQuery = 135
acCmdNewObjectForm = 136
acCmdNewObjectReport = 137
acCmdNewObjectMacro = 138
acCmdNewObjectModule = 139
acCmdNewObjectClassModule = 140
acCmdLayoutPreview = 141
acCmdSaveAsReport = 142
acCmdRename = 143
acCmdRemoveFilterSort = 144
acCmdSaveLayout = 145
acCmdClearAll = 146
acCmdHideTable = 147
acCmdShowDirectRelationships = 148
acCmdShowAllRelationships = 149
acCmdCreateRelationship = 150
acCmdEditRelationship = 151
acCmdIndexes = 152
acCmdAlignToShortest = 153
acCmdAlignToTallest = 154
acCmdSizeToNarrowest = 155
acCmdSizeToWidest = 156
acCmdHorizontalSpacingMakeEqual = 157
acCmdHorizontalSpacingDecrease = 158
acCmdHorizontalSpacingIncrease = 159
acCmdVerticalSpacingMakeEqual = 160
acCmdVerticalSpacingDecrease = 161
acCmdVerticalSpacingIncrease = 162
acCmdSortAscending = 163
acCmdSortDescending = 164
acCmdToolbarsCustomize = 165
acCmdOLEObjectConvert = 167
acCmdQueryTypeSQLDataDefinition = 168
acCmdQueryTypeSQLPassThrough = 169
acCmdViewCode = 170
acCmdConvertDatabase = 171
acCmdCallStack = 172
acCmdSend = 173
acCmdOutputToExcel = 175
acCmdOutputToRTF = 176
acCmdOutputToText = 177
acCmdInvokeBuilder = 178
acCmdZoomBox = 179
acCmdQueryTypeSQLUnion = 180
acCmdRun = 181
acCmdPageHdrFtr = 182
acCmdDesignView = 183
acCmdSQLView = 184
acCmdShowTable = 185
acCmdCloseWindow = 186
acCmdInsertRows = 187
acCmdDeleteRows = 188
acCmdCut = 189
acCmdCopy = 190
acCmdPaste = 191
acCmdAutoDial = 192
acCmdNewObjectAutoForm = 193
acCmdNewObjectAutoReport = 194
acCmdWordMailMerge = 195
acCmdTestValidationRules = 196
acCmdControlWizardsToggle = 197
acCmdEnd = 198
acCmdRedo = 199
acCmdObjectBrowser = 200
acCmdAddWatch = 201
acCmdEditWatch = 202
acCmdQuickWatch = 203
acCmdStepToCursor = 204
acCmdIndent = 205
acCmdOutdent = 206
acCmdFilterByForm = 207
acCmdFilterBySelection = 208
acCmdViewLargeIcons = 209
acCmdViewDetails = 210
acCmdViewSmallIcons = 211
acCmdViewList = 212
acCmdLineUpIcons = 213
acCmdArrangeIconsByName = 214
acCmdArrangeIconsByType = 215
acCmdArrangeIconsByCreated = 216
acCmdArrangeIconsByModified = 217
acCmdArrangeIconsAuto = 218
acCmdCreateShortcut = 219
acCmdToggleFilter = 220
acCmdOpenTable = 221
acCmdInsertPicture = 222
acCmdDeleteRecord = 223
acCmdStartupProperties = 224
acCmdPageNumber = 225
acCmdDateAndTime = 226
acCmdChangeToTextBox = 227
acCmdChangeToLabel = 228
acCmdChangeToListBox = 229
acCmdChangeToComboBox = 230
acCmdChangeToCheckBox = 231
acCmdChangeToToggleButton = 232
acCmdChangeToOptionButton = 233
acCmdChangeToImage = 234
acCmdAnswerWizard = 235
acCmdMicrosoftOnTheWeb = 236
acCmdClearItemDefaults = 237
acCmdZoom200 = 238
acCmdZoom150 = 239
acCmdZoom100 = 240
acCmdZoom75 = 241
acCmdZoom50 = 242
acCmdZoom25 = 243
acCmdZoom10 = 244
acCmdFitToWindow = 245
acCmdPreviewOnePage = 246
acCmdPreviewTwoPages = 247
acCmdPreviewFourPages = 248
acCmdPreviewEightPages = 249
acCmdPreviewTwelvePages = 250
acCmdOpenURL = 251
acCmdOpenStartPage = 252
acCmdOpenSearchPage = 253
acCmdRegisterActiveXControls = 254
acCmdDeleteTab = 255
acCmdDatabaseProperties = 256
acCmdImport = 257
acCmdInsertActiveXControl = 258
acCmdInsertHyperlink = 259
acCmdReferences = 260
acCmdAutoCorrect = 261
acCmdInsertProcedure = 262
acCmdCreateReplica = 263
acCmdSynchronizeNow = 264
acCmdRecoverDesignMaster = 265
acCmdResolveConflicts = 266
acCmdDeleteWatch = 267
acCmdSpelling = 269
acCmdAutoFormat = 270
acCmdDeleteTableColumn = 271
acCmdInsertTableColumn = 272
acCmdInsertLookupColumn = 273
acCmdRenameColumn = 274
acCmdSetDatabasePassword = 275
acCmdUserLevelSecurityWizard = 276
acCmdFilterExcludingSelection = 277
acCmdQuickPrint = 278
acCmdConvertMacrosToVisualBasic = 279
acCmdSaveAllModules = 280
acCmdFormView = 281
acCmdDatasheetView = 282
acCmdAnalyzePerformance = 283
acCmdAnalyzeTable = 284
acCmdDocumenter = 285
acCmdTileHorizontally = 286
acCmdProperties = 287
acCmdTransparentBackground = 288
acCmdTransparentBorder = 289
acCmdCompileLoadedModules = 290
acCmdInsertLookupField = 291
acCmdUndo = 292
acCmdInsertChart = 293
acCmdGoBack = 294
acCmdGoForward = 295
acCmdStopLoadingPage = 296
acCmdRefreshPage = 297
acCmdFavoritesOpen = 298
acCmdFavoritesAddTo = 299
acCmdShowOnlyWebToolbar = 300
acCmdToolbarControlProperties = 301
acCmdShowMembers = 302
acCmdListConstants = 303
acCmdQuickInfo = 304
acCmdParameterInfo = 305
acCmdCompleteWord = 306
acCmdBookmarksToggle = 307
acCmdBookmarksNext = 308
acCmdBookmarksPrevious = 309
acCmdBookmarksClearAll = 310
acCmdStepOut = 311
acCmdFindPrevWordUnderCursor = 312
acCmdFindNextWordUnderCursor = 313
acCmdObjBrwFindWholeWordOnly = 314
acCmdObjBrwShowHiddenMembers = 315
acCmdObjBrwHelp = 316
acCmdObjBrwViewDefinition = 317
acCmdObjBrwGroupMembers = 318
acCmdSelectReport = 319
acCmdSaveAsHTML = 321
acCmdSaveAsIDC = 322
acCmdSaveAsASP = 323
acCmdPublishDefaults = 324
acCmdEditHyperlink = 325
acCmdOpenHyperlink = 326
acCmdOpenNewHyperlink = 327
acCmdCopyHyperlink = 328
acCmdHyperlinkDisplayText = 329
acCmdTabControlPageOrder = 330
acCmdInsertPage = 331
acCmdDeletePage = 332
acCmdSelectAll = 333
acCmdCreateMenuFromMacro = 334
acCmdCreateToolbarFromMacro = 335
acCmdCreateShortcutMenuFromMacro = 336
acCmdDelete = 337
acCmdRunOpenMacro = 338
acCmdLastPosition = 339
acCmdPrint = 340
acCmdFindNext = 341
acCmdStepInto = 342
acCmdClearHyperlink = 343
acCmdDataAccessPageBrowse = 344
acCmdNewObjectDataAccessPage = 346
acCmdSelectDataAccessPage = 347
acCmdViewDataAccessPages = 349
acCmdNewObjectView = 350
acCmdNewObjectStoredProcedure = 351
acCmdNewObjectDiagram = 352
acCmdViewFieldList = 353
acCmdViewDiagrams = 354
acCmdViewStoredProcedures = 355
acCmdViewViews = 356
acCmdViewShowPaneSQL = 357
acCmdViewShowPaneDiagram = 358
acCmdViewShowPaneGrid = 359
acCmdViewVerifySQL = 360
acCmdQueryGroupBy = 361
acCmdQueryAddToOutput = 362
acCmdViewTableColumnNames = 363
acCmdViewTableNameOnly = 364
acCmdHidePane = 365
acCmdRemove = 366
acCmdViewTableColumnProperties = 368
acCmdViewTableKeys = 369
acCmdViewTableUserView = 370
acCmdZoomSelection = 371
acCmdDiagramNewLabel = 372
acCmdDiagramAddRelatedTables = 373
acCmdDiagramShowRelationshipLabels = 374
acCmdDiagramModifyUserDefinedView = 375
acCmdDiagramViewPageBreaks = 376
acCmdDiagramRecalculatePageBreaks = 377
acCmdDiagramAutosizeSelectedTables = 378
acCmdDiagramLayoutSelection = 379
acCmdDiagramLayoutDiagram = 380
acCmdDiagramNewTable = 381
acCmdDiagramDeleteRelationship = 382
acCmdConnection = 383
acCmdEditTriggers = 384
acCmdDataAccessPageDesignView = 385
acCmdPromote = 386
acCmdGroupByTable = 387
acCmdDemote = 388
acCmdSaveAsDataAccessPage = 389
acCmdMicrosoftScriptEditor = 390
acCmdWorkgroupAdministrator = 391
acCmdNewObjectFunction = 394
acCmdViewFunctions = 395
acCmdPivotTableView = 396
acCmdPivotChartView = 397
acCmdPivotAutoFilter = 398
acCmdPivotTableSubtotal = 399
acCmdPivotCollapse = 400
acCmdPivotExpand = 401
acCmdPivotTableHideDetails = 402
acCmdPivotTableShowDetails = 403
acCmdPivotRefresh = 404
acCmdPivotTableExportToExcel = 405
acCmdPivotTableMoveToRowArea = 406
acCmdPivotTableMoveToColumnArea = 407
acCmdPivotTableMoveToFilterArea = 408
acCmdPivotTableMoveToDetailArea = 409
acCmdPivotTablePromote = 410
acCmdPivotTableDemote = 411
acCmdPivotAutoSum = 412
acCmdPivotAutoCount = 413
acCmdPivotAutoMin = 414
acCmdPivotAutoMax = 415
acCmdPivotAutoAverage = 416
acCmdPivotAutoStdDev = 417
acCmdPivotAutoVar = 418
acCmdPivotAutoStdDevP = 419
acCmdPivotAutoVarP = 420
acCmdPivotShowTop1 = 421
acCmdPivotShowTop2 = 422
acCmdPivotShowTop5 = 423
acCmdPivotShowTop10 = 424
acCmdPivotShowTop25 = 425
acCmdPivotShowTop1Percent = 426
acCmdPivotShowTop2Percent = 427
acCmdPivotShowTop5Percent = 428
acCmdPivotShowTop10Percent = 429
acCmdPivotShowTop25Percent = 430
acCmdPivotShowTopOther = 431
acCmdPivotShowBottom1 = 432
acCmdPivotShowBottom2 = 433
acCmdPivotShowBottom5 = 434
acCmdPivotShowBottom10 = 435
acCmdPivotShowBottom25 = 436
acCmdPivotShowBottom1Percent = 437
acCmdPivotShowBottom2Percent = 438
acCmdPivotShowBottom5Percent = 439
acCmdPivotShowBottom10Percent = 440
acCmdPivotShowBottom25Percent = 441
acCmdPivotShowBottomOther = 442
acCmdPivotTableCreateCalcTotal = 443
acCmdPivotTableCreateCalcField = 444
acCmdPivotTableShowAsNormal = 445
acCmdPivotTablePercentRowTotal = 446
acCmdPivotTablePercentColumnTotal = 447
acCmdPivotTablePercentParentRowItem = 448
acCmdPivotTablePercentParentColumnItem = 449
acCmdPivotTablePercentGrandTotal = 450
acCmdPivotTableExpandIndicators = 451
acCmdPivotDropAreas = 452
acCmdPivotChartType = 453
acCmdPivotDelete = 454
acCmdPivotChartShowLegend = 455
acCmdPivotChartByRowByColumn = 456
acCmdPivotChartDrillInto = 457
acCmdPivotChartMultiplePlots = 458
acCmdPivotChartMultiplePlotsUnifiedScale = 459
acCmdPivotChartUndo = 460
acCmdPivotShowAll = 461
acCmdSubformFormView = 462
acCmdSubformDatasheetView = 463
acCmdSubformPivotTableView = 464
acCmdSubformPivotChartView = 465
acCmdWebPagePreview = 466
acCmdPageProperties = 467
acCmdDataOutline = 468
acCmdInsertMovieFromFile = 469
acCmdInsertPivotTable = 470
acCmdInsertSpreadsheet = 471
acCmdInsertUnboundSection = 472
acCmdWebTheme = 473
acCmdBackgroundPicture = 474
acCmdBackgroundSound = 475
acCmdAlignMiddle = 476
acCmdAlignCenter = 477
acCmdAlignmentAndSizing = 478
acCmdDataAccessPageFieldListRefresh = 479
acCmdDataAccessPageAddToPage = 480
acCmdZoom500 = 481
acCmdZoom1000 = 482
acCmdPrintRelationships = 483
acCmdGroupControls = 484
acCmdUngroupControls = 485
acCmdWebPageProperties = 486
acCmdExport = 487
acCmdOfficeClipboard = 488
acCmdDeleteTable = 489
acCmdPasteAsHyperlink = 490
acCmdNewGroup = 491
acCmdRenameGroup = 492
acCmdDeleteGroup = 493
acCmdAddToNewGroup = 494
acCmdSubformInNewWindow = 495
acCmdServerProperties = 496
acCmdTableCustomView = 497
acCmdTableAddTable = 498
acCmdInsertSubdatasheet = 499
acCmdConditionalFormatting = 500
acCmdChangeToCommandButton = 501
acCmdSubdatasheetExpandAll = 504
acCmdSubdatasheetCollapseAll = 505
acCmdSubdatasheetRemove = 506
acCmdServerFilterByForm = 507
acCmdMaximiumRecords = 508
acCmdSpeech = 511
acCmdBackup = 513
acCmdRestore = 514
acCmdTransferSQLDatabase = 515
acCmdCopyDatabaseFile = 516
acCmdDropSQLDatabase = 517
acCmdLinkedTableManager = 519
acCmdDatabaseSplitter = 520
acCmdSwitchboardManager = 521
acCmdUpsizingWizard = 522
acCmdPartialReplicaWizard = 524
acCmdVisualBasicEditor = 525
acCmdAddInManager = 526
acCmdPivotTableClearCustomOrdering = 527
acCmdPivotTableFilterBySelection = 528
acCmdPivotTableRemove = 529
acCmdPivotTableGroupItems = 530
acCmdPivotTableUngroupItems = 531
acCmdPivotChartDrillOut = 532
acCmdShowEnvelope = 533
acCmdPivotChartSortAscByTotal = 534
acCmdPivotChartSortDescByTotal = 535
acCmdViewObjectDependencies = 536
acCmdPublishDatabase = 537
acCmdCloseDatabase = 538
acCmdReportView = 539
acCmdToggleOffline = 540
acCmdRefreshData = 541
acCmdShareOnSharePoint = 542
acCmdSavedImports = 543
acCmdImportAttachAccess = 544
acCmdImportAttachExcel = 545
acCmdImportAttachText = 546
acCmdImportAttachSharePointList = 547
acCmdImportAttachXML = 548
acCmdImportAttachODBC = 549
acCmdImportAttachHTML = 550
acCmdImportAttachOutlook = 551
acCmdImportAttachdBase = 552
acCmdImportAttachParadox = 553
acCmdImportAttachLotus = 554
acCmdSavedExports = 555
acCmdExportExcel = 556
acCmdExportSharePointList = 557
acCmdExportRTF = 558
acCmdExportAccess = 559
acCmdExportText = 560
acCmdExportXML = 561
acCmdExportODBC = 562
acCmdExportSnapShot = 563
acCmdExportHTML = 564
acCmdExportdBase = 565
acCmdExportParadox = 566
acCmdExportLotus = 567
acCmdStackedLayout = 568
acCmdTabularLayout = 569
acCmdSelectEntireRow = 570
acCmdSelectEntireColumn = 571
acCmdMoveColumnCellUp = 572
acCmdMoveColumnCellDown = 573
acCmdLayoutGridlinesBoth = 574
acCmdLayoutGridlinesVertical = 575
acCmdLayoutGridlinesHorizontal = 576
acCmdLayoutGridlinesNone = 577
acCmdLayoutGridlinesCrossHatch = 578
acCmdLayoutGridlinesTop = 579
acCmdLayoutGridlinesBottom = 580
acCmdLayoutGridlinesOutline = 581
acCmdRemoveFromLayout = 582
acCmdAddFromOutlook = 583
acCmdSaveAsOutlookContact = 584
acCmdInsertLogo = 585
acCmdInsertTitle = 586
acCmdPasteFormatting = 587
acCmdMacroArguments = 588
acCmdMacroAllActions = 589
acCmdPrintSelection = 590
acCmdPublishFixedFormat = 591
acCmdExportFixedFormat = 592
acCmdLayoutView = 593
acCmdNewObjectContinuousForm = 594
acCmdNewObjectSplitForm = 595
acCmdNewObjectPivotChart = 596
acCmdNewObjectPivotTable = 597
acCmdNewObjectDatasheetForm = 598
acCmdNewObjectModalForm = 599
acCmdNewObjectBlankForm = 600
acCmdNewObjectLabelsReport = 601
acCmdNewObjectBlankReport = 602
acCmdNewObjectDesignQuery = 603
acCmdNewObjectDesignForm = 604
acCmdNewObjectDesignReport = 605
acCmdNewObjectDesignTable = 606
acCmdEditListItems = 607
acCmdCollectDataViaEmail = 608
acCmdManageReplies = 609
acCmdAnchorTopLeft = 610
acCmdAnchorStretchAcross = 611
acCmdAnchorTopRight = 612
acCmdAnchorStretchDown = 613
acCmdAnchorStretchDownAcross = 614
acCmdAnchorStretchDownRight = 615
acCmdAnchorBottomLeft = 616
acCmdAnchorBottomStretchAcross = 617
acCmdAnchorBottomRight = 618
acCmdFilterMenu = 619
acCmdShowColumnHistory = 620
acCmdBrowseSharePointList = 621
acCmdModifySharePointList = 622
acCmdModifySharePointListAlerts = 623
acCmdModifySharePointListWorkflow = 624
acCmdModifySharePointListPermissions = 625
acCmdRefreshSharePointList = 626
acCmdDeleteSharePointList = 627
acCmdControlMarginsNone = 628
acCmdControlMarginsNarrow = 629
acCmdControlMarginsMedium = 630
acCmdControlMarginsWide = 631
acCmdControlPaddingNone = 632
acCmdControlPaddingNarrow = 633
acCmdControlPaddingMedium = 634
acCmdControlPaddingWide = 635
acCmdShowDatePicker = 636
acCmdSetCaption = 637
acCmdSynchronize = 638
acCmdDiscardChanges = 639
acCmdDiscardChangesAndRefresh = 640
acCmdSharePointSiteRecycleBin = 641
acCmdToggleCacheListData = 642
acCmdRemoveFilterFromCurrentColumn = 643
acCmdRemoveAllFilters = 644
acCmdRemoveAllSorts = 645
acCmdCloseAll = 646
acCmdFieldTemplates = 647
acCmdApplyAutoFormat1 = 648
acCmdApplyAutoFormat2 = 649
acCmdApplyAutoFormat3 = 650
acCmdApplyAutoFormat4 = 651
acCmdApplyAutoFormat5 = 652
acCmdApplyAutoFormat6 = 653
acCmdApplyAutoFormat7 = 654
acCmdApplyAutoFormat8 = 655
acCmdApplyAutoFormat9 = 656
acCmdApplyAutoFormat10 = 657
acCmdApplyAutoFormat11 = 658
acCmdApplyAutoFormat12 = 659
acCmdApplyAutoFormat13 = 660
acCmdApplyAutoFormat14 = 661
acCmdApplyAutoFormat15 = 662
acCmdApplyAutoFormat16 = 663
acCmdApplyAutoFormat17 = 664
acCmdApplyAutoFormat18 = 665
acCmdApplyAutoFormat19 = 666
acCmdApplyAutoFormat20 = 667
acCmdApplyAutoFormat21 = 668
acCmdApplyAutoFormat22 = 669
acCmdApplyAutoFormat23 = 670
acCmdApplyAutoFormat24 = 671
acCmdApplyAutoFormat25 = 672
acCmdManageAttachments = 673
acCmdWorkflowTasks = 674
acCmdStartNewWorkflow = 675
acCmdShowMessageBar = 676
acCmdHideMessageBar = 677
acCmdLayoutInsertRowAbove = 678
acCmdLayoutInsertRowBelow = 679
acCmdLayoutInsertColumnLeft = 680
acCmdLayoutInsertColumnRight = 681
acCmdLayoutMergeCells = 682
acCmdLayoutSplitColumnCell = 683
acCmdLayoutSplitRowCell = 684
acCmdShowLogicCatalog = 685
acCmdSaveAsTemplate = 686
acCmdSaveDatabaseAsNewTemplatePart = 687
acCmdSaveSelectionAsNewDataType = 688
acCmdNewObjectNavigationTop = 689
acCmdNewObjectNavigationLeft = 690
acCmdNewObjectNavigationRight = 691
acCmdNewObjectNavigationTopTop = 692
acCmdNewObjectNavigationTopLeft = 693
acCmdNewObjectNavigationTopRight = 694
acCmdCompatCheckDatabase = 695
acCmdCompatCheckCurrentObject = 696
acCmdDesignObject = 697
acCmdCalculatedColumn = 698
acCmdSyncWebApplication = 699
acCmdConvertLinkedTableToLocal = 700
acCmdNewObjectContinuousFormWeb = 701
acCmdNewObjectDatasheetFormWeb = 702
acCmdNewObjectBlankFormWeb = 703
acCmdNewObjectBlankReportWeb = 704
acCmdNewObjectAutoFormWeb = 705
acCmdNewObjectAutoReportWeb = 706
acCmdNewObjectQueryWeb = 707
acCmdNewObjectMacroWeb = 708
acCmdNewObjectNavigationTopWeb = 709
acCmdNewObjectNavigationLeftWeb = 710
acCmdNewObjectNavigationRightWeb = 711
acCmdNewObjectNavigationTopTopWeb = 712
acCmdNewObjectNavigationTopLeftWeb = 713
acCmdNewObjectNavigationTopRightWeb = 714
acCmdSelectEntireLayout = 715
acCmdPrepareDatabaseForWeb = 716
acCmdManageTableEvents = 717
acCmdAddDataMacroAfterInsert = 718
acCmdAddDataMacroAfterUpdate = 719
acCmdAddDataMacroAfterDelete = 720
acCmdAddDataMacroBeforeDelete = 721
acCmdAddDataMacroBeforeChange = 722
acCmdAddNamedDataMacro = 723
acCmdInsertNavigationButton = 724
AcCommand = c_int  # enum

# values for enumeration 'AcExportQuality'
acExportQualityPrint = 0
acExportQualityScreen = 1
AcExportQuality = c_int  # enum

# values for enumeration 'AcSharePointListTransferType'
acImportSharePointList = 0
acLinkSharePointList = 1
AcSharePointListTransferType = c_int  # enum

# values for enumeration 'AcProperty'
acPropertyEnabled = 0
acPropertyVisible = 1
acPropertyLocked = 2
acPropertyLeft = 3
acPropertyTop = 4
acPropertyWidth = 5
acPropertyHeight = 6
acPropertyForeColor = 7
acPropertyBackColor = 8
acPropertyCaption = 9
acPropertyValue = 10
AcProperty = c_int  # enum

# values for enumeration 'AcBrowseToObjectType'
acBrowseToForm = 2
acBrowseToReport = 3
AcBrowseToObjectType = c_int  # enum

# values for enumeration 'AcWebUserDisplay'
acWebUserID = 0
acWebUserName = 1
acWebUserLoginName = 2
acWebUserEmail = 3
AcWebUserDisplay = c_int  # enum

# values for enumeration 'AcDateGroupType'
acDateGroupNone = 0
acDateGroupYear = 1
acDateGroupQuarter = 2
acDateGroupMonth = 3
acDateGroupDay = 4
AcDateGroupType = c_int  # enum

# values for enumeration 'AcWebUserGroupsDisplay'
acWebUserGroupID = 0
acWebUserGroupName = 1
AcWebUserGroupsDisplay = c_int  # enum

# values for enumeration 'AcSysCmdAction'
acSysCmdInitMeter = 1
acSysCmdUpdateMeter = 2
acSysCmdRemoveMeter = 3
acSysCmdSetStatus = 4
acSysCmdClearStatus = 5
acSysCmdRuntime = 6
acSysCmdAccessVer = 7
acSysCmdIniFile = 8
acSysCmdAccessDir = 9
acSysCmdGetObjectState = 10
acSysCmdClearHelpTopic = 11
acSysCmdProfile = 12
acSysCmdGetWorkgroupFile = 13
acSysCmdCompile = 603
AcSysCmdAction = c_int  # enum

# values for enumeration 'AcFilterType'
acFilterNormal = 0
acServerFilter = 1
AcFilterType = c_int  # enum

# values for enumeration 'AcAggregateType'
acAggregateNone = 0
acAggregateSum = 1
acAggregateAverage = 2
acAggregateMinimum = 3
acAggregateMaximum = 4
acAggregateCountDistinct = 5
acAggregateCount = 6
AcAggregateType = c_int  # enum

# values for enumeration 'AcFormatConditionType'
acFieldValue = 0
acExpression = 1
acFieldHasFocus = 2
acDataBar = 3
AcFormatConditionType = c_int  # enum

# values for enumeration 'AcFormatConditionOperator'
acBetween = 0
acNotBetween = 1
acEqual = 2
acNotEqual = 3
acGreaterThan = 4
acLessThan = 5
acGreaterThanOrEqual = 6
acLessThanOrEqual = 7
AcFormatConditionOperator = c_int  # enum

# values for enumeration 'AcFormatBarLimits'
acAutomatic = 0
acNumber = 1
acPercent = 2
AcFormatBarLimits = c_int  # enum

# values for enumeration 'AcHyperlinkPart'
acDisplayedValue = 0
acDisplayText = 1
acAddress = 2
acSubAddress = 3
acScreenTip = 4
acFullAddress = 5
AcHyperlinkPart = c_int  # enum



class _ListBox(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E95A-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_Column(self, Index: hints.Incomplete, Row: hints.Incomplete = ...) -> hints.Incomplete: ...
        Column = hints.named_property('Column', _get_Column)
        def _get_Selected(self, lRow: hints.Incomplete) -> hints.Incomplete: ...
        def _set_Selected(self, lRow: hints.Incomplete, pRet: hints.Incomplete) -> hints.Hresult: ...
        Selected = hints.named_property('Selected', _get_Selected, _set_Selected)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_ItemData(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ItemData = hints.named_property('ItemData', _get_ItemData)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _get_ItemsSelected(self) -> '_ItemsSelected': ...
        ItemsSelected = hints.normal_property(_get_ItemsSelected)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_RowSourceType(self) -> hints.Incomplete: ...
        def _set_RowSourceType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSourceType = hints.normal_property(_get_RowSourceType, _set_RowSourceType)
        def _get_RowSource(self) -> hints.Incomplete: ...
        def _set_RowSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSource = hints.normal_property(_get_RowSource, _set_RowSource)
        def _get_ColumnCount(self) -> hints.Incomplete: ...
        def _set_ColumnCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnCount = hints.normal_property(_get_ColumnCount, _set_ColumnCount)
        def _get_ColumnHeads(self) -> hints.Incomplete: ...
        def _set_ColumnHeads(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHeads = hints.normal_property(_get_ColumnHeads, _set_ColumnHeads)
        def _get_ColumnWidths(self) -> hints.Incomplete: ...
        def _set_ColumnWidths(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidths = hints.normal_property(_get_ColumnWidths, _set_ColumnWidths)
        def _get_BoundColumn(self) -> hints.Incomplete: ...
        def _set_BoundColumn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BoundColumn = hints.normal_property(_get_BoundColumn, _set_BoundColumn)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_IMEHold(self) -> hints.Incomplete: ...
        def _set_IMEHold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEHold = hints.normal_property(_get_IMEHold, _set_IMEHold)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_MultiSelect(self) -> hints.Incomplete: ...
        def _set_MultiSelect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MultiSelect = hints.normal_property(_get_MultiSelect, _set_MultiSelect)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ListCount(self) -> hints.Incomplete: ...
        def _set_ListCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListCount = hints.normal_property(_get_ListCount, _set_ListCount)
        def _get_ListIndex(self) -> hints.Incomplete: ...
        def _set_ListIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListIndex = hints.normal_property(_get_ListIndex, _set_ListIndex)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_ScrollBarAlign(self) -> hints.Incomplete: ...
        def _set_ScrollBarAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBarAlign = hints.normal_property(_get_ScrollBarAlign, _set_ScrollBarAlign)
        def _get_TextAlign(self) -> hints.Incomplete: ...
        def _set_TextAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlign = hints.normal_property(_get_TextAlign, _set_TextAlign)
        def _get_NumeralShapes(self) -> hints.Incomplete: ...
        def _set_NumeralShapes(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NumeralShapes = hints.normal_property(_get_NumeralShapes, _set_NumeralShapes)
        def _get_IMEMode(self) -> hints.Incomplete: ...
        def _set_IMEMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEMode = hints.normal_property(_get_IMEMode, _set_IMEMode)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_IMESentenceMode(self) -> hints.Incomplete: ...
        def _set_IMESentenceMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMESentenceMode = hints.normal_property(_get_IMESentenceMode, _set_IMESentenceMode)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def AddItem(self, Item: hints.Incomplete, Index: hints.Incomplete = ...) -> hints.Hresult: ...
        def RemoveItem(self, Index: hints.Incomplete) -> hints.Hresult: ...
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_AllowValueListEdits(self) -> hints.Incomplete: ...
        def _set_AllowValueListEdits(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowValueListEdits = hints.normal_property(_get_AllowValueListEdits, _set_AllowValueListEdits)
        def _get_ListItemsEditForm(self) -> hints.Incomplete: ...
        def _set_ListItemsEditForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListItemsEditForm = hints.normal_property(_get_ListItemsEditForm, _set_ListItemsEditForm)
        def _get_InheritValueList(self) -> hints.Incomplete: ...
        def _set_InheritValueList(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InheritValueList = hints.normal_property(_get_InheritValueList, _set_InheritValueList)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_ShowOnlyRowSourceValues(self) -> hints.Incomplete: ...
        def _set_ShowOnlyRowSourceValues(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowOnlyRowSourceValues = hints.normal_property(_get_ShowOnlyRowSourceValues, _set_ShowOnlyRowSourceValues)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class Application(CoClass):
    _reg_clsid_ = GUID('{73A4C9C1-D68D-11D0-98BF-00A0C90DC8D9}')
    _idlflags_ = ['appobject']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Application(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{68CCE6C0-6129-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_CodeContextObject(self) -> hints.Incomplete: ...
        CodeContextObject = hints.normal_property(_get_CodeContextObject)
        def NewCurrentDatabaseOld(self, filepath: hints.Incomplete) -> hints.Hresult: ...
        def OpenCurrentDatabaseOld(self, filepath: hints.Incomplete, Exclusive: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_CurrentObjectType(self) -> hints.Incomplete: ...
        CurrentObjectType = hints.normal_property(_get_CurrentObjectType)
        def _get_CurrentObjectName(self) -> hints.Incomplete: ...
        CurrentObjectName = hints.normal_property(_get_CurrentObjectName)
        def GetOption(self, OptionName: hints.Incomplete) -> hints.Incomplete: ...
        def SetOption(self, OptionName: hints.Incomplete, Setting: hints.Incomplete) -> hints.Hresult: ...
        def Echo(self, EchoOn: hints.Incomplete, bstrStatusBarText: hints.Incomplete = ...) -> hints.Hresult: ...
        def CloseCurrentDatabase(self) -> hints.Hresult: ...
        def Quit(self, Option: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_Forms(self) -> 'Forms': ...
        Forms = hints.normal_property(_get_Forms)
        def _get_Reports(self) -> 'Reports': ...
        Reports = hints.normal_property(_get_Reports)
        def _get_Screen(self) -> 'Screen': ...
        Screen = hints.normal_property(_get_Screen)
        def _get_DoCmd(self) -> 'DoCmd': ...
        DoCmd = hints.normal_property(_get_DoCmd)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pfVisible: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_UserControl(self) -> hints.Incomplete: ...
        def _set_UserControl(self, pfUserCtrl: hints.Incomplete) -> hints.Hresult: ...
        UserControl = hints.normal_property(_get_UserControl, _set_UserControl)
        def SysCmd(self, Action: hints.Incomplete, Argument2: hints.Incomplete = ..., Argument3: hints.Incomplete = ...) -> hints.Incomplete: ...
        def CreateForm(self, Database: hints.Incomplete = ..., FormTemplate: hints.Incomplete = ...) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        def CreateReport(self, Database: hints.Incomplete = ..., ReportTemplate: hints.Incomplete = ...) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        def CreateControlOld(self, FormName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete = ..., Parent: hints.Incomplete = ..., ColumnName: hints.Incomplete = ..., Left: hints.Incomplete = ..., Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        def CreateReportControlOld(self, ReportName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete = ..., Parent: hints.Incomplete = ..., ColumnName: hints.Incomplete = ..., Left: hints.Incomplete = ..., Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        def CreateControlExOld(self, FormName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete, Parent: hints.Incomplete, ControlSource: hints.Incomplete, Left: hints.Incomplete, Top: hints.Incomplete, Width: hints.Incomplete, Height: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        def CreateReportControlExOld(self, ReportName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete, Parent: hints.Incomplete, ControlName: hints.Incomplete, Left: hints.Incomplete, Top: hints.Incomplete, Width: hints.Incomplete, Height: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        def DeleteControl(self, FormName: hints.Incomplete, ControlName: hints.Incomplete) -> hints.Hresult: ...
        def DeleteReportControl(self, ReportName: hints.Incomplete, ControlName: hints.Incomplete) -> hints.Hresult: ...
        def CreateGroupLevel(self, ReportName: hints.Incomplete, Expression: hints.Incomplete, Header: hints.Incomplete, Footer: hints.Incomplete) -> hints.Incomplete: ...
        def DMin(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DMax(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DSum(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DAvg(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DLookup(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DLast(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DVar(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DVarP(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DStDev(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DStDevP(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DFirst(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def DCount(self, Expr: hints.Incomplete, Domain: hints.Incomplete, Criteria: hints.Incomplete = ...) -> hints.Incomplete: ...
        def Eval(self, StringExpr: hints.Incomplete) -> hints.Incomplete: ...
        def CurrentUser(self) -> hints.Incomplete: ...
        def DDEInitiate(self, Application: hints.Incomplete, Topic: hints.Incomplete) -> hints.Incomplete: ...
        def DDEExecute(self, ChanNum: hints.Incomplete, Command: hints.Incomplete) -> hints.Hresult: ...
        def DDEPoke(self, ChanNum: hints.Incomplete, Item: hints.Incomplete, Data: hints.Incomplete) -> hints.Hresult: ...
        def DDERequest(self, ChanNum: hints.Incomplete, Item: hints.Incomplete) -> hints.Incomplete: ...
        def DDETerminate(self, ChanNum: hints.Incomplete) -> hints.Hresult: ...
        def DDETerminateAll(self) -> hints.Hresult: ...
        def _get_DBEngine(self) -> hints.Incomplete: ...
        DBEngine = hints.normal_property(_get_DBEngine)
        def CurrentDb(self) -> hints.Incomplete: ...
        def CodeDb(self) -> hints.Incomplete: ...
        def BeginUndoable(self, Hwnd: hints.Incomplete) -> hints.Hresult: ...
        def SetUndoRecording(self, yesno: hints.Incomplete) -> hints.Hresult: ...
        def BuildCriteria(self, Field: hints.Incomplete, FieldType: hints.Incomplete, Expression: hints.Incomplete) -> hints.Incomplete: ...
        def InsertText(self, Text: hints.Incomplete, ModuleName: hints.Incomplete) -> hints.Hresult: ...
        def ReloadAddIns(self) -> hints.Hresult: ...
        def DefaultWorkspaceClone(self) -> hints.Incomplete: ...
        def RefreshTitleBar(self) -> hints.Hresult: ...
        def AddAutoCorrect(self, ChangeFrom: hints.Incomplete, ChangeTo: hints.Incomplete) -> hints.Hresult: ...
        def DelAutoCorrect(self, ChangeFrom: hints.Incomplete) -> hints.Hresult: ...
        def hWndAccessApp(self) -> hints.Incomplete: ...
        def Run(self, Procedure: hints.Incomplete, Arg1: hints.Incomplete = ..., Arg2: hints.Incomplete = ..., Arg3: hints.Incomplete = ..., Arg4: hints.Incomplete = ..., Arg5: hints.Incomplete = ..., Arg6: hints.Incomplete = ..., Arg7: hints.Incomplete = ..., Arg8: hints.Incomplete = ..., Arg9: hints.Incomplete = ..., Arg10: hints.Incomplete = ..., Arg11: hints.Incomplete = ..., Arg12: hints.Incomplete = ..., Arg13: hints.Incomplete = ..., Arg14: hints.Incomplete = ..., Arg15: hints.Incomplete = ..., Arg16: hints.Incomplete = ..., Arg17: hints.Incomplete = ..., Arg18: hints.Incomplete = ..., Arg19: hints.Incomplete = ..., Arg20: hints.Incomplete = ..., Arg21: hints.Incomplete = ..., Arg22: hints.Incomplete = ..., Arg23: hints.Incomplete = ..., Arg24: hints.Incomplete = ..., Arg25: hints.Incomplete = ..., Arg26: hints.Incomplete = ..., Arg27: hints.Incomplete = ..., Arg28: hints.Incomplete = ..., Arg29: hints.Incomplete = ..., Arg30: hints.Incomplete = ...) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def Nz(self, Value: hints.Incomplete, ValueIfNull: hints.Incomplete = ...) -> hints.Incomplete: ...
        def LoadPicture(self, FileName: hints.Incomplete) -> hints.Incomplete: ...
        def ReplaceModule(self, objtyp: hints.Incomplete, ModuleName: hints.Incomplete, FileName: hints.Incomplete, token: hints.Incomplete) -> hints.Hresult: ...
        def AccessError(self, ErrorNumber: hints.Incomplete) -> hints.Incomplete: ...
        def BuilderString(self) -> hints.Incomplete: ...
        def StringFromGUID(self, Guid: hints.Incomplete) -> hints.Incomplete: ...
        def GUIDFromString(self, String: hints.Incomplete) -> hints.Incomplete: ...
        def AppLoadString(self, id: hints.Incomplete) -> hints.Incomplete: ...
        def _get_CommandBars(self) -> hints.Incomplete: ...
        CommandBars = hints.normal_property(_get_CommandBars)
        def _get_Assistant(self) -> hints.Incomplete: ...
        Assistant = hints.normal_property(_get_Assistant)
        def FollowHyperlink(self, Address: hints.Incomplete, SubAddress: hints.Incomplete = ..., NewWindow: hints.Incomplete = ..., AddHistory: hints.Incomplete = ..., ExtraInfo: hints.Incomplete = ..., Method: hints.Incomplete = ..., HeaderInfo: hints.Incomplete = ...) -> hints.Hresult: ...
        def SaveAsText(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, FileName: hints.Incomplete) -> hints.Hresult: ...
        def LoadFromText(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, FileName: hints.Incomplete) -> hints.Hresult: ...
        def AddToFavorites(self) -> hints.Hresult: ...
        def RefreshDatabaseWindow(self) -> hints.Hresult: ...
        def _get_References(self) -> hints.Annotated['_References', hints.FirstComItfOf['References']]: ...
        References = hints.normal_property(_get_References)
        def _get_Modules(self) -> 'Modules': ...
        Modules = hints.normal_property(_get_Modules)
        def _get_FileSearch(self) -> hints.Incomplete: ...
        FileSearch = hints.normal_property(_get_FileSearch)
        def _get_IsCompiled(self) -> hints.Incomplete: ...
        IsCompiled = hints.normal_property(_get_IsCompiled)
        def RunCommand(self, Command: hints.Incomplete) -> hints.Hresult: ...
        def HyperlinkPart(self, Hyperlink: hints.Incomplete, Part: hints.Incomplete = ...) -> hints.Incomplete: ...
        def GetHiddenAttribute(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete) -> hints.Incomplete: ...
        def SetHiddenAttribute(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, fHidden: hints.Incomplete) -> hints.Hresult: ...
        def _get_VBE(self) -> hints.Incomplete: ...
        VBE = hints.normal_property(_get_VBE)
        def _get_DataAccessPages(self) -> 'DataAccessPages': ...
        DataAccessPages = hints.normal_property(_get_DataAccessPages)
        def CreateDataAccessPage(self, FileName: hints.Incomplete = ..., CreateNewFile: hints.Incomplete = ...) -> hints.Annotated['_DataAccessPage', hints.FirstComItfOf['DataAccessPage']]: ...
        def _get_ADOConnectString(self) -> hints.Incomplete: ...
        ADOConnectString = hints.normal_property(_get_ADOConnectString)
        def _get_CurrentProject(self) -> hints.Annotated['_CurrentProject', hints.FirstComItfOf['CurrentProject']]: ...
        CurrentProject = hints.normal_property(_get_CurrentProject)
        def _get_CurrentData(self) -> hints.Annotated['_CurrentData', hints.FirstComItfOf['CurrentData']]: ...
        CurrentData = hints.normal_property(_get_CurrentData)
        def _get_CodeProject(self) -> hints.Annotated['_CurrentProject', hints.FirstComItfOf['CodeProject']]: ...
        CodeProject = hints.normal_property(_get_CodeProject)
        def _get_CodeData(self) -> hints.Annotated['_CurrentData', hints.FirstComItfOf['CodeData']]: ...
        CodeData = hints.normal_property(_get_CodeData)
        def NewAccessProject(self, filepath: hints.Incomplete, Connect: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenAccessProject(self, filepath: hints.Incomplete, Exclusive: hints.Incomplete = ...) -> hints.Hresult: ...
        def CreateAccessProject(self, filepath: hints.Incomplete, Connect: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_WizHook(self) -> hints.Annotated['_WizHook', hints.FirstComItfOf['WizHook']]: ...
        WizHook = hints.normal_property(_get_WizHook)
        def _get_ProductCode(self) -> hints.Incomplete: ...
        ProductCode = hints.normal_property(_get_ProductCode)
        def _get_COMAddIns(self) -> hints.Incomplete: ...
        COMAddIns = hints.normal_property(_get_COMAddIns)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_DefaultWebOptions(self) -> hints.Annotated['_DefaultWebOptions', hints.FirstComItfOf['DefaultWebOptions']]: ...
        DefaultWebOptions = hints.normal_property(_get_DefaultWebOptions)
        def _get_LanguageSettings(self) -> hints.Incomplete: ...
        LanguageSettings = hints.normal_property(_get_LanguageSettings)
        def _get_AnswerWizard(self) -> hints.Incomplete: ...
        AnswerWizard = hints.normal_property(_get_AnswerWizard)
        def _get_FeatureInstall(self) -> hints.Incomplete: ...
        def _set_FeatureInstall(self, FeatureInstall: hints.Incomplete) -> hints.Hresult: ...
        FeatureInstall = hints.normal_property(_get_FeatureInstall, _set_FeatureInstall)
        def EuroConvert(self, Number: hints.Incomplete, SourceCurrency: hints.Incomplete, TargetCurrency: hints.Incomplete, FullPrecision: hints.Incomplete = ..., TriangulationPrecision: hints.Incomplete = ...) -> hints.Incomplete: ...
        def _get_VGXFrameInterval(self) -> hints.Incomplete: ...
        VGXFrameInterval = hints.normal_property(_get_VGXFrameInterval)
        def _get_FileDialog(self, dialogType: hints.Incomplete) -> hints.Incomplete: ...
        FileDialog = hints.named_property('FileDialog', _get_FileDialog)
        def _get_BrokenReference(self) -> hints.Incomplete: ...
        BrokenReference = hints.normal_property(_get_BrokenReference)
        def CreateNewWorkgroupFile(self, Path: hints.Incomplete = ..., Name: hints.Incomplete = ..., Company: hints.Incomplete = ..., WorkgroupID: hints.Incomplete = ..., Replace: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetDefaultWorkgroupFile(self, Path: hints.Incomplete) -> hints.Hresult: ...
        def _get_Printers(self) -> 'Printers': ...
        Printers = hints.normal_property(_get_Printers)
        def _get_Printer(self) -> '_Printer': ...
        def _set_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        def _setref_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Printer = hints.normal_property(_get_Printer, hints.put_or_putref(_set_Printer, _setref_Printer))
        def _get_MsoDebugOptions(self) -> hints.Incomplete: ...
        MsoDebugOptions = hints.normal_property(_get_MsoDebugOptions)
        def ConvertAccessProject(self, SourceFilename: hints.Incomplete, DestinationFilename: hints.Incomplete, DestinationFileFormat: hints.Incomplete) -> hints.Hresult: ...
        def _get_Version(self) -> hints.Incomplete: ...
        Version = hints.normal_property(_get_Version)
        def _get_Build(self) -> hints.Incomplete: ...
        Build = hints.normal_property(_get_Build)
        def OpenCurrentDatabase(self, filepath: hints.Incomplete, Exclusive: hints.Incomplete = ..., bstrPassword: hints.Incomplete = ...) -> hints.Hresult: ...
        def CompactRepair(self, SourceFile: hints.Incomplete, DestinationFile: hints.Incomplete, LogFile: hints.Incomplete = ...) -> hints.Incomplete: ...
        def ExportXMLOld(self, ObjectType: hints.Incomplete, DataSource: hints.Incomplete, DataTarget: hints.Incomplete = ..., SchemaTarget: hints.Incomplete = ..., PresentationTarget: hints.Incomplete = ..., ImageTarget: hints.Incomplete = ..., Encoding: hints.Incomplete = ..., OtherFlags: hints.Incomplete = ...) -> hints.Hresult: ...
        def ImportXML(self, DataSource: hints.Incomplete, ImportOptions: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_NewFileTaskPane(self) -> hints.Incomplete: ...
        NewFileTaskPane = hints.normal_property(_get_NewFileTaskPane)
        def TransformXML(self, DataSource: hints.Incomplete, TransformSource: hints.Incomplete, OutputTarget: hints.Incomplete, WellFormedXMLOutput: hints.Incomplete = ..., ScriptOption: hints.Incomplete = ...) -> hints.Hresult: ...
        def CreateAdditionalData(self) -> '_AdditionalData': ...
        def _get_AutoCorrect(self) -> '_AutoCorrect': ...
        AutoCorrect = hints.normal_property(_get_AutoCorrect)
        def ExportXML(self, ObjectType: hints.Incomplete, DataSource: hints.Incomplete, DataTarget: hints.Incomplete = ..., SchemaTarget: hints.Incomplete = ..., PresentationTarget: hints.Incomplete = ..., ImageTarget: hints.Incomplete = ..., Encoding: hints.Incomplete = ..., OtherFlags: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., AdditionalData: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_AutomationSecurity(self) -> hints.Incomplete: ...
        def _set_AutomationSecurity(self, pAutomationSecurity: hints.Incomplete) -> hints.Hresult: ...
        AutomationSecurity = hints.normal_property(_get_AutomationSecurity, _set_AutomationSecurity)
        def NewCurrentDatabase(self, filepath: hints.Incomplete, FileFormat: hints.Incomplete = ..., Template: hints.Incomplete = ..., SiteAddress: hints.Incomplete = ..., ListID: hints.Incomplete = ...) -> hints.Hresult: ...
        def PlainText(self, RichText: hints.Incomplete, Length: hints.Incomplete = ...) -> hints.Incomplete: ...
        def HtmlEncode(self, PlainText: hints.Incomplete, Length: hints.Incomplete = ...) -> hints.Incomplete: ...
        def _get_MacroError(self) -> hints.Annotated['_MacroError', hints.FirstComItfOf['MacroError']]: ...
        MacroError = hints.normal_property(_get_MacroError)
        def LoadCustomUI(self, CustomUIName: hints.Incomplete, CustomUIXML: hints.Incomplete) -> hints.Hresult: ...
        def _get_TempVars(self) -> hints.Annotated['_TempVars', hints.FirstComItfOf['TempVars']]: ...
        TempVars = hints.normal_property(_get_TempVars)
        def ExportNavigationPane(self, Path: hints.Incomplete) -> hints.Hresult: ...
        def ImportNavigationPane(self, Path: hints.Incomplete, fAppendOnly: hints.Incomplete = ...) -> hints.Hresult: ...
        def ColumnHistory(self, TableName: hints.Incomplete, ColumnName: hints.Incomplete, queryString: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Assistance(self) -> hints.Incomplete: ...
        Assistance = hints.normal_property(_get_Assistance)
        def CreateControl(self, FormName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete = ..., Parent: hints.Incomplete = ..., ColumnName: hints.Incomplete = ..., Left: hints.Incomplete = ..., Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> '_Control': ...
        def CreateReportControl(self, ReportName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete = ..., Parent: hints.Incomplete = ..., ColumnName: hints.Incomplete = ..., Left: hints.Incomplete = ..., Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> '_Control': ...
        def CreateControlEx(self, FormName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete, Parent: hints.Incomplete, ControlSource: hints.Incomplete, Left: hints.Incomplete, Top: hints.Incomplete, Width: hints.Incomplete, Height: hints.Incomplete) -> '_Control': ...
        def CreateReportControlEx(self, ReportName: hints.Incomplete, ControlType: hints.Incomplete, Section: hints.Incomplete, Parent: hints.Incomplete, ControlName: hints.Incomplete, Left: hints.Incomplete, Top: hints.Incomplete, Width: hints.Incomplete, Height: hints.Incomplete) -> '_Control': ...
        def ExportCustomFixedFormat(self, ExternalExporter: hints.Incomplete, OutputFileName: hints.Incomplete, ObjectName: hints.Incomplete, ObjectType: hints.Incomplete, SelectedRecords: hints.Incomplete = ..., FromPage: hints.Incomplete = ..., ToPage: hints.Incomplete = ...) -> hints.Hresult: ...
        def SaveAsAXL(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, FileName: hints.Incomplete) -> hints.Hresult: ...
        def LoadFromAXL(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, FileName: hints.Incomplete) -> hints.Hresult: ...
        def SaveAsTemplate(self, Path: hints.Incomplete, Title: hints.Incomplete, IconPath: hints.Incomplete, CoreTable: hints.Incomplete, Category: hints.Incomplete, PreviewPath: hints.Incomplete = ..., Description: hints.Incomplete = ..., InstantiationForm: hints.Incomplete = ..., ApplicationPart: hints.Incomplete = ..., IncludeData: hints.Incomplete = ..., Variation: hints.Incomplete = ...) -> hints.Hresult: ...
        def InstantiateTemplate(self, Path: hints.Incomplete) -> hints.Hresult: ...
        def _get_WebServices(self) -> 'WebServices': ...
        WebServices = hints.normal_property(_get_WebServices)
        def _get_LocalVars(self) -> hints.Annotated['_LocalVars', hints.FirstComItfOf['LocalVars']]: ...
        LocalVars = hints.normal_property(_get_LocalVars)
        def CurrentWebUser(self, DisplayOption: hints.Incomplete) -> hints.Incomplete: ...
        def CurrentWebUserGroups(self, DisplayOption: hints.Incomplete) -> hints.Incomplete: ...
        def IsCurrentWebUserInGroup(self, GroupNameOrID: hints.Incomplete) -> hints.Incomplete: ...
        def DirtyObject(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete) -> hints.Hresult: ...
        def IsClient(self) -> hints.Incomplete: ...
        def _get_ReturnVars(self) -> hints.Annotated['_ReturnVars', hints.FirstComItfOf['ReturnVars']]: ...
        ReturnVars = hints.normal_property(_get_ReturnVars)


Application._com_interfaces_ = [_Application]


class Properties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDD02-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class Children(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E977-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Item(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class _ItemsSelected(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{31B09710-EADC-11CD-B9F7-00AA004753B5}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Item(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class _Hyperlink(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{50D56611-60AC-11CF-82C9-00AA004B9FE6}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_SubAddress(self) -> hints.Incomplete: ...
        def _set_SubAddress(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        SubAddress = hints.normal_property(_get_SubAddress, _set_SubAddress)
        def _get_Address(self) -> hints.Incomplete: ...
        def _set_Address(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        Address = hints.normal_property(_get_Address, _set_Address)
        def AddToFavorites(self) -> hints.Hresult: ...
        def Follow(self, NewWindow: hints.Incomplete = ..., AddHistory: hints.Incomplete = ..., ExtraInfo: hints.Incomplete = ..., Method: hints.Incomplete = ..., HeaderInfo: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_EmailSubject(self) -> hints.Incomplete: ...
        def _set_EmailSubject(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        EmailSubject = hints.normal_property(_get_EmailSubject, _set_EmailSubject)
        def _get_ScreenTip(self) -> hints.Incomplete: ...
        def _set_ScreenTip(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        ScreenTip = hints.normal_property(_get_ScreenTip, _set_ScreenTip)
        def _get_TextToDisplay(self) -> hints.Incomplete: ...
        def _set_TextToDisplay(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        TextToDisplay = hints.normal_property(_get_TextToDisplay, _set_TextToDisplay)
        def CreateNewDocument(self, FileName: hints.Incomplete, EditNow: hints.Incomplete, Overwrite: hints.Incomplete) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...




class _SmartTags(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B1F7DE76-AE97-48D9-A4FD-2C172B2BD7A9}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_SmartTag': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def Add(self, Name: hints.Incomplete) -> '_SmartTag': ...
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...



_ListBox._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2101), 'propget'],
        HRESULT,
        'Column',
        (['in'], c_int, 'Index'),
        (['in', 'optional'], VARIANT, 'Row'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propget'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propput'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2103), 'propget'],
        HRESULT,
        'ItemData',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2137), 'propget'],
        HRESULT,
        'ItemsSelected',
        (['out', 'retval'], POINTER(POINTER(_ItemsSelected)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propget'],
        HRESULT,
        'RowSourceType',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propput'],
        HRESULT,
        'RowSourceType',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propget'],
        HRESULT,
        'RowSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propput'],
        HRESULT,
        'RowSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propget'],
        HRESULT,
        'ColumnCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propput'],
        HRESULT,
        'ColumnCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propget'],
        HRESULT,
        'ColumnHeads',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propput'],
        HRESULT,
        'ColumnHeads',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(18), 'propget'],
        HRESULT,
        'ColumnWidths',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(18), 'propput'],
        HRESULT,
        'ColumnWidths',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(13), 'propget'],
        HRESULT,
        'BoundColumn',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(13), 'propput'],
        HRESULT,
        'BoundColumn',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propget'],
        HRESULT,
        'IMEHold',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propput'],
        HRESULT,
        'IMEHold',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(293), 'propget'],
        HRESULT,
        'MultiSelect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(293), 'propput'],
        HRESULT,
        'MultiSelect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(238), 'propget'],
        HRESULT,
        'ListCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(238), 'propput'],
        HRESULT,
        'ListCount',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(239), 'propget'],
        HRESULT,
        'ListIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(239), 'propput'],
        HRESULT,
        'ListIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propget'],
        HRESULT,
        'ScrollBarAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propput'],
        HRESULT,
        'ScrollBarAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'hidden', 'propget'],
        HRESULT,
        'TextAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'hidden', 'propput'],
        HRESULT,
        'TextAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propget'],
        HRESULT,
        'NumeralShapes',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propput'],
        HRESULT,
        'NumeralShapes',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propget'],
        HRESULT,
        'IMEMode',
        (['out', 'retval'], POINTER(AcImeMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propput'],
        HRESULT,
        'IMEMode',
        (['in'], AcImeMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(379), 'propget'],
        HRESULT,
        'IMESentenceMode',
        (['out', 'retval'], POINTER(AcImeSentenceMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(379), 'propput'],
        HRESULT,
        'IMESentenceMode',
        (['in'], AcImeSentenceMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(2380)],
        HRESULT,
        'AddItem',
        (['in'], BSTR, 'Item'),
        (['in', 'optional'], VARIANT, 'Index')
    ),
    COMMETHOD(
        [dispid(2381)],
        HRESULT,
        'RemoveItem',
        (['in'], VARIANT, 'Index')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(556), 'propget'],
        HRESULT,
        'AllowValueListEdits',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(556), 'propput'],
        HRESULT,
        'AllowValueListEdits',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(557), 'propget'],
        HRESULT,
        'ListItemsEditForm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(557), 'propput'],
        HRESULT,
        'ListItemsEditForm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(568), 'propget'],
        HRESULT,
        'InheritValueList',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(568), 'propput'],
        HRESULT,
        'InheritValueList',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(579), 'propget'],
        HRESULT,
        'ShowOnlyRowSourceValues',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(579), 'propput'],
        HRESULT,
        'ShowOnlyRowSourceValues',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _ListBox implementation
# class _ListBox_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Column(self, Index, Row):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self, lRow):
#         '-no docstring-'
#         #return pRet
#     def _set(self, lRow, pRet):
#         '-no docstring-'
#     Selected = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ItemData(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ItemsSelected(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSourceType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHeads = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidths = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BoundColumn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEHold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MultiSelect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBarAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NumeralShapes = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMESentenceMode = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def AddItem(self, Item, Index):
#         '-no docstring-'
#         #return 
#
#     def RemoveItem(self, Index):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowValueListEdits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListItemsEditForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InheritValueList = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowOnlyRowSourceValues = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
acObjStateDirty = 2  # Constant c_short
vbKeyE = 69  # Constant c_short


class DispTextBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705275-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...


DispTextBoxEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2144)],
        None,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]
LB_OPEN = 1  # Constant c_short
LB_GETROWCOUNT = 3  # Constant c_short
acLBInitialize = 0  # Constant c_short
vbKeyF = 70  # Constant c_short
acLBOpen = 1  # Constant c_short
LB_GETCOLUMNCOUNT = 4  # Constant c_short
acLBGetRowCount = 3  # Constant c_short
vbKeyG = 71  # Constant c_short
LB_GETCOLUMNWIDTH = 5  # Constant c_short
acLBGetColumnCount = 4  # Constant c_short
LB_GETVALUE = 6  # Constant c_short
vbKeyH = 72  # Constant c_short
acLBGetColumnWidth = 5  # Constant c_short
LB_GETFORMAT = 7  # Constant c_short
acLBGetValue = 6  # Constant c_short
vbKeyI = 73  # Constant c_short
LB_CLOSE = 8  # Constant c_short
acLBGetFormat = 7  # Constant c_short
vbKeyJ = 74  # Constant c_short
LB_END = 9  # Constant c_short
acLBClose = 8  # Constant c_short
SYSCMD_INITMETER = 1  # Constant c_short
vbKeyK = 75  # Constant c_short
acLBEnd = 9  # Constant c_short


class _Form(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{E5135D80-8F8D-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_AllowFilters(self) -> hints.Incomplete: ...
        def _set_AllowFilters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFilters = hints.normal_property(_get_AllowFilters, _set_AllowFilters)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_DefaultView(self) -> hints.Incomplete: ...
        def _set_DefaultView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultView = hints.normal_property(_get_DefaultView, _set_DefaultView)
        def _get_ViewsAllowed(self) -> hints.Incomplete: ...
        def _set_ViewsAllowed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewsAllowed = hints.normal_property(_get_ViewsAllowed, _set_ViewsAllowed)
        def _get_AllowEditing(self) -> hints.Incomplete: ...
        def _set_AllowEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEditing = hints.normal_property(_get_AllowEditing, _set_AllowEditing)
        def _get_DefaultEditing(self) -> hints.Incomplete: ...
        def _set_DefaultEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultEditing = hints.normal_property(_get_DefaultEditing, _set_DefaultEditing)
        def _get_AllowEdits(self) -> hints.Incomplete: ...
        def _set_AllowEdits(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEdits = hints.normal_property(_get_AllowEdits, _set_AllowEdits)
        def _get_AllowDeletions(self) -> hints.Incomplete: ...
        def _set_AllowDeletions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDeletions = hints.normal_property(_get_AllowDeletions, _set_AllowDeletions)
        def _get_AllowAdditions(self) -> hints.Incomplete: ...
        def _set_AllowAdditions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowAdditions = hints.normal_property(_get_AllowAdditions, _set_AllowAdditions)
        def _get_DataEntry(self) -> hints.Incomplete: ...
        def _set_DataEntry(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataEntry = hints.normal_property(_get_DataEntry, _set_DataEntry)
        def _get_AllowUpdating(self) -> hints.Incomplete: ...
        def _set_AllowUpdating(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowUpdating = hints.normal_property(_get_AllowUpdating, _set_AllowUpdating)
        def _get_RecordsetType(self) -> hints.Incomplete: ...
        def _set_RecordsetType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordsetType = hints.normal_property(_get_RecordsetType, _set_RecordsetType)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_RecordSelectors(self) -> hints.Incomplete: ...
        def _set_RecordSelectors(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSelectors = hints.normal_property(_get_RecordSelectors, _set_RecordSelectors)
        def _get_NavigationButtons(self) -> hints.Incomplete: ...
        def _set_NavigationButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NavigationButtons = hints.normal_property(_get_NavigationButtons, _set_NavigationButtons)
        def _get_DividingLines(self) -> hints.Incomplete: ...
        def _set_DividingLines(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DividingLines = hints.normal_property(_get_DividingLines, _set_DividingLines)
        def _get_AutoResize(self) -> hints.Incomplete: ...
        def _set_AutoResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoResize = hints.normal_property(_get_AutoResize, _set_AutoResize)
        def _get_AutoCenter(self) -> hints.Incomplete: ...
        def _set_AutoCenter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoCenter = hints.normal_property(_get_AutoCenter, _set_AutoCenter)
        def _get_PopUp(self) -> hints.Incomplete: ...
        def _set_PopUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PopUp = hints.normal_property(_get_PopUp, _set_PopUp)
        def _get_Modal(self) -> hints.Incomplete: ...
        def _set_Modal(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Modal = hints.normal_property(_get_Modal, _set_Modal)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_ControlBox(self) -> hints.Incomplete: ...
        def _set_ControlBox(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlBox = hints.normal_property(_get_ControlBox, _set_ControlBox)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_MinMaxButtons(self) -> hints.Incomplete: ...
        def _set_MinMaxButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinMaxButtons = hints.normal_property(_get_MinMaxButtons, _set_MinMaxButtons)
        def _get_CloseButton(self) -> hints.Incomplete: ...
        def _set_CloseButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CloseButton = hints.normal_property(_get_CloseButton, _set_CloseButton)
        def _get_WhatsThisButton(self) -> hints.Incomplete: ...
        def _set_WhatsThisButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WhatsThisButton = hints.normal_property(_get_WhatsThisButton, _set_WhatsThisButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_Cycle(self) -> hints.Incomplete: ...
        def _set_Cycle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cycle = hints.normal_property(_get_Cycle, _set_Cycle)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenu(self) -> hints.Incomplete: ...
        def _set_ShortcutMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenu = hints.normal_property(_get_ShortcutMenu, _set_ShortcutMenu)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_RowHeight(self) -> hints.Incomplete: ...
        def _set_RowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowHeight = hints.normal_property(_get_RowHeight, _set_RowHeight)
        def _get_DatasheetFontName(self) -> hints.Incomplete: ...
        def _set_DatasheetFontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontName = hints.normal_property(_get_DatasheetFontName, _set_DatasheetFontName)
        def _get_DatasheetFontHeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontHeight = hints.normal_property(_get_DatasheetFontHeight, _set_DatasheetFontHeight)
        def _get_DatasheetFontWeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontWeight = hints.normal_property(_get_DatasheetFontWeight, _set_DatasheetFontWeight)
        def _get_DatasheetFontItalic(self) -> hints.Incomplete: ...
        def _set_DatasheetFontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontItalic = hints.normal_property(_get_DatasheetFontItalic, _set_DatasheetFontItalic)
        def _get_DatasheetFontUnderline(self) -> hints.Incomplete: ...
        def _set_DatasheetFontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontUnderline = hints.normal_property(_get_DatasheetFontUnderline, _set_DatasheetFontUnderline)
        def _get_TabularCharSet(self) -> hints.Incomplete: ...
        def _set_TabularCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularCharSet = hints.normal_property(_get_TabularCharSet, _set_TabularCharSet)
        def _get_DatasheetGridlinesBehavior(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesBehavior(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesBehavior = hints.normal_property(_get_DatasheetGridlinesBehavior, _set_DatasheetGridlinesBehavior)
        def _get_DatasheetGridlinesColor(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesColor = hints.normal_property(_get_DatasheetGridlinesColor, _set_DatasheetGridlinesColor)
        def _get_DatasheetCellsEffect(self) -> hints.Incomplete: ...
        def _set_DatasheetCellsEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetCellsEffect = hints.normal_property(_get_DatasheetCellsEffect, _set_DatasheetCellsEffect)
        def _get_DatasheetForeColor(self) -> hints.Incomplete: ...
        def _set_DatasheetForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetForeColor = hints.normal_property(_get_DatasheetForeColor, _set_DatasheetForeColor)
        def _get_ShowGrid(self) -> hints.Incomplete: ...
        def _set_ShowGrid(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowGrid = hints.normal_property(_get_ShowGrid, _set_ShowGrid)
        def _get_DatasheetBackColor(self) -> hints.Incomplete: ...
        def _set_DatasheetBackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetBackColor = hints.normal_property(_get_DatasheetBackColor, _set_DatasheetBackColor)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_FrozenColumns(self) -> hints.Incomplete: ...
        def _set_FrozenColumns(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FrozenColumns = hints.normal_property(_get_FrozenColumns, _set_FrozenColumns)
        def _get_Bookmark(self) -> hints.Incomplete: ...
        def _set_Bookmark(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bookmark = hints.normal_property(_get_Bookmark, _set_Bookmark)
        def _get_TabularFamily(self) -> hints.Incomplete: ...
        def _set_TabularFamily(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularFamily = hints.normal_property(_get_TabularFamily, _set_TabularFamily)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OpenArgs(self) -> hints.Incomplete: ...
        def _set_OpenArgs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OpenArgs = hints.normal_property(_get_OpenArgs, _set_OpenArgs)
        def _get_ConnectSynch(self) -> hints.Incomplete: ...
        def _set_ConnectSynch(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ConnectSynch = hints.normal_property(_get_ConnectSynch, _set_ConnectSynch)
        def _get_OnCurrent(self) -> hints.Incomplete: ...
        def _set_OnCurrent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrent = hints.normal_property(_get_OnCurrent, _set_OnCurrent)
        def _get_OnInsert(self) -> hints.Incomplete: ...
        def _set_OnInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnInsert = hints.normal_property(_get_OnInsert, _set_OnInsert)
        def _get_BeforeInsert(self) -> hints.Incomplete: ...
        def _set_BeforeInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeInsert = hints.normal_property(_get_BeforeInsert, _set_BeforeInsert)
        def _get_AfterInsert(self) -> hints.Incomplete: ...
        def _set_AfterInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterInsert = hints.normal_property(_get_AfterInsert, _set_AfterInsert)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnDelete(self) -> hints.Incomplete: ...
        def _set_OnDelete(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDelete = hints.normal_property(_get_OnDelete, _set_OnDelete)
        def _get_BeforeDelConfirm(self) -> hints.Incomplete: ...
        def _set_BeforeDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeDelConfirm = hints.normal_property(_get_BeforeDelConfirm, _set_BeforeDelConfirm)
        def _get_AfterDelConfirm(self) -> hints.Incomplete: ...
        def _set_AfterDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterDelConfirm = hints.normal_property(_get_AfterDelConfirm, _set_AfterDelConfirm)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnLoad(self) -> hints.Incomplete: ...
        def _set_OnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoad = hints.normal_property(_get_OnLoad, _set_OnLoad)
        def _get_OnResize(self) -> hints.Incomplete: ...
        def _set_OnResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResize = hints.normal_property(_get_OnResize, _set_OnResize)
        def _get_OnUnload(self) -> hints.Incomplete: ...
        def _set_OnUnload(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnload = hints.normal_property(_get_OnUnload, _set_OnUnload)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_KeyPreview(self) -> hints.Incomplete: ...
        def _set_KeyPreview(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyPreview = hints.normal_property(_get_KeyPreview, _set_KeyPreview)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_OnFilter(self) -> hints.Incomplete: ...
        def _set_OnFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilter = hints.normal_property(_get_OnFilter, _set_OnFilter)
        def _get_OnApplyFilter(self) -> hints.Incomplete: ...
        def _set_OnApplyFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilter = hints.normal_property(_get_OnApplyFilter, _set_OnApplyFilter)
        def _get_OnTimer(self) -> hints.Incomplete: ...
        def _set_OnTimer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimer = hints.normal_property(_get_OnTimer, _set_OnTimer)
        def _get_TimerInterval(self) -> hints.Incomplete: ...
        def _set_TimerInterval(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TimerInterval = hints.normal_property(_get_TimerInterval, _set_TimerInterval)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        def _set_WindowWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowWidth = hints.normal_property(_get_WindowWidth, _set_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        def _set_WindowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowHeight = hints.normal_property(_get_WindowHeight, _set_WindowHeight)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        def _set_CurrentView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentView = hints.normal_property(_get_CurrentView, _set_CurrentView)
        def _get_CurrentSectionTop(self) -> hints.Incomplete: ...
        def _set_CurrentSectionTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionTop = hints.normal_property(_get_CurrentSectionTop, _set_CurrentSectionTop)
        def _get_CurrentSectionLeft(self) -> hints.Incomplete: ...
        def _set_CurrentSectionLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionLeft = hints.normal_property(_get_CurrentSectionLeft, _set_CurrentSectionLeft)
        def _get_SelLeft(self) -> hints.Incomplete: ...
        def _set_SelLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelLeft = hints.normal_property(_get_SelLeft, _set_SelLeft)
        def _get_SelTop(self) -> hints.Incomplete: ...
        def _set_SelTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelTop = hints.normal_property(_get_SelTop, _set_SelTop)
        def _get_SelWidth(self) -> hints.Incomplete: ...
        def _set_SelWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelWidth = hints.normal_property(_get_SelWidth, _set_SelWidth)
        def _get_SelHeight(self) -> hints.Incomplete: ...
        def _set_SelHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelHeight = hints.normal_property(_get_SelHeight, _set_SelHeight)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_InsideHeight(self) -> hints.Incomplete: ...
        def _set_InsideHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideHeight = hints.normal_property(_get_InsideHeight, _set_InsideHeight)
        def _get_InsideWidth(self) -> hints.Incomplete: ...
        def _set_InsideWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideWidth = hints.normal_property(_get_InsideWidth, _set_InsideWidth)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_AllowDesignChanges(self) -> hints.Incomplete: ...
        def _set_AllowDesignChanges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDesignChanges = hints.normal_property(_get_AllowDesignChanges, _set_AllowDesignChanges)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_ServerFilterByForm(self) -> hints.Incomplete: ...
        def _set_ServerFilterByForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilterByForm = hints.normal_property(_get_ServerFilterByForm, _set_ServerFilterByForm)
        def _get_MaxRecords(self) -> hints.Incomplete: ...
        def _set_MaxRecords(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecords = hints.normal_property(_get_MaxRecords, _set_MaxRecords)
        def _get_UniqueTable(self) -> hints.Incomplete: ...
        def _set_UniqueTable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UniqueTable = hints.normal_property(_get_UniqueTable, _set_UniqueTable)
        def _get_ResyncCommand(self) -> hints.Incomplete: ...
        def _set_ResyncCommand(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ResyncCommand = hints.normal_property(_get_ResyncCommand, _set_ResyncCommand)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_MaxRecButton(self) -> hints.Incomplete: ...
        def _set_MaxRecButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecButton = hints.normal_property(_get_MaxRecButton, _set_MaxRecButton)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_NewRecord(self) -> hints.Incomplete: ...
        NewRecord = hints.normal_property(_get_NewRecord)
        def Undo(self) -> hints.Hresult: ...
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def _get_Dynaset(self) -> hints.Incomplete: ...
        Dynaset = hints.normal_property(_get_Dynaset)
        def _get_RecordsetClone(self) -> hints.Incomplete: ...
        RecordsetClone = hints.normal_property(_get_RecordsetClone)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def _get_Section(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        Section = hints.named_property('Section', _get_Section)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_ConnectControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ConnectControl = hints.normal_property(_get_ConnectControl)
        def Recalc(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Refresh(self) -> hints.Hresult: ...
        def Repaint(self) -> hints.Hresult: ...
        def GoToPage(self, PageNumber: hints.Incomplete, Right: hints.Incomplete = ..., Down: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_SubdatasheetHeight(self) -> hints.Incomplete: ...
        def _set_SubdatasheetHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetHeight = hints.normal_property(_get_SubdatasheetHeight, _set_SubdatasheetHeight)
        def _get_SubdatasheetExpanded(self) -> hints.Incomplete: ...
        def _set_SubdatasheetExpanded(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetExpanded = hints.normal_property(_get_SubdatasheetExpanded, _set_SubdatasheetExpanded)


class Control(CoClass):
    _reg_clsid_ = GUID('{02F92C80-8F8E-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Control(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{26B96540-8F8E-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def Dropdown(self) -> hints.Hresult: ...
        def _get_Column(self, Index: hints.Incomplete, Row: hints.Incomplete = ...) -> hints.Incomplete: ...
        Column = hints.named_property('Column', _get_Column)
        def _get_Selected(self, lRow: hints.Incomplete) -> hints.Incomplete: ...
        def _set_Selected(self, lRow: hints.Incomplete, pRet: hints.Incomplete) -> hints.Hresult: ...
        Selected = hints.named_property('Selected', _get_Selected, _set_Selected)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def _get_ItemData(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ItemData = hints.named_property('ItemData', _get_ItemData)
        def _get_Object(self) -> hints.Incomplete: ...
        Object = hints.normal_property(_get_Object)
        def _get_ObjectVerbs(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ObjectVerbs = hints.named_property('ObjectVerbs', _get_ObjectVerbs)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def Requery(self) -> hints.Hresult: ...
        def SizeToFit(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def _get_ItemsSelected(self) -> '_ItemsSelected': ...
        ItemsSelected = hints.normal_property(_get_ItemsSelected)
        def SetFocus(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Pages(self) -> 'Pages': ...
        Pages = hints.normal_property(_get_Pages)
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)


Control._com_interfaces_ = [_Control]


class Section(CoClass):
    _reg_clsid_ = GUID('{BC9E4355-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Section(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDCFC-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ForceNewPage(self) -> hints.Incomplete: ...
        def _set_ForceNewPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForceNewPage = hints.normal_property(_get_ForceNewPage, _set_ForceNewPage)
        def _get_NewRowOrCol(self) -> hints.Incomplete: ...
        def _set_NewRowOrCol(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NewRowOrCol = hints.normal_property(_get_NewRowOrCol, _set_NewRowOrCol)
        def _get_KeepTogether(self) -> hints.Incomplete: ...
        def _set_KeepTogether(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeepTogether = hints.normal_property(_get_KeepTogether, _set_KeepTogether)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_CanGrow(self) -> hints.Incomplete: ...
        def _set_CanGrow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanGrow = hints.normal_property(_get_CanGrow, _set_CanGrow)
        def _get_CanShrink(self) -> hints.Incomplete: ...
        def _set_CanShrink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanShrink = hints.normal_property(_get_CanShrink, _set_CanShrink)
        def _get_RepeatSection(self) -> hints.Incomplete: ...
        def _set_RepeatSection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RepeatSection = hints.normal_property(_get_RepeatSection, _set_RepeatSection)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_OnFormat(self) -> hints.Incomplete: ...
        def _set_OnFormat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFormat = hints.normal_property(_get_OnFormat, _set_OnFormat)
        def _get_OnPrint(self) -> hints.Incomplete: ...
        def _set_OnPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPrint = hints.normal_property(_get_OnPrint, _set_OnPrint)
        def _get_OnRetreat(self) -> hints.Incomplete: ...
        def _set_OnRetreat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnRetreat = hints.normal_property(_get_OnRetreat, _set_OnRetreat)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_HasContinued(self) -> hints.Incomplete: ...
        def _set_HasContinued(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasContinued = hints.normal_property(_get_HasContinued, _set_HasContinued)
        def _get_WillContinue(self) -> hints.Incomplete: ...
        def _set_WillContinue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WillContinue = hints.normal_property(_get_WillContinue, _set_WillContinue)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_AutoHeight(self) -> hints.Incomplete: ...
        def _set_AutoHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoHeight = hints.normal_property(_get_AutoHeight, _set_AutoHeight)
        def _get_OnFormatMacro(self) -> hints.Incomplete: ...
        def _set_OnFormatMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFormatMacro = hints.normal_property(_get_OnFormatMacro, _set_OnFormatMacro)
        def _get_OnPrintMacro(self) -> hints.Incomplete: ...
        def _set_OnPrintMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPrintMacro = hints.normal_property(_get_OnPrintMacro, _set_OnPrintMacro)
        def _get_OnRetreatMacro(self) -> hints.Incomplete: ...
        def _set_OnRetreatMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnRetreatMacro = hints.normal_property(_get_OnRetreatMacro, _set_OnRetreatMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_AlternateBackColor(self) -> hints.Incomplete: ...
        def _set_AlternateBackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AlternateBackColor = hints.normal_property(_get_AlternateBackColor, _set_AlternateBackColor)
        def _get_OnPaint(self) -> hints.Incomplete: ...
        def _set_OnPaint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPaint = hints.normal_property(_get_OnPaint, _set_OnPaint)
        def _get_OnPaintMacro(self) -> hints.Incomplete: ...
        def _set_OnPaintMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPaintMacro = hints.normal_property(_get_OnPaintMacro, _set_OnPaintMacro)
        def SetTabOrder(self) -> hints.Hresult: ...
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_AlternateBackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_AlternateBackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AlternateBackThemeColorIndex = hints.normal_property(_get_AlternateBackThemeColorIndex, _set_AlternateBackThemeColorIndex)
        def _get_AlternateBackTint(self) -> hints.Incomplete: ...
        def _set_AlternateBackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AlternateBackTint = hints.normal_property(_get_AlternateBackTint, _set_AlternateBackTint)
        def _get_AlternateBackShade(self) -> hints.Incomplete: ...
        def _set_AlternateBackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AlternateBackShade = hints.normal_property(_get_AlternateBackShade, _set_AlternateBackShade)


class _SectionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4353-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def Paint(self) -> hints.Hresult: ...


class DispSectionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527B-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def Paint(self) -> hints.Incomplete: ...


Section._com_interfaces_ = [_Section]
Section._outgoing_interfaces_ = [DispSectionEvents, _SectionEvents]


class Form(CoClass):
    _reg_clsid_ = GUID('{7398AAFD-6527-48C7-95B7-BEABACD1CA3F}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Form3(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{66B22FB4-F70E-4F03-A00A-F76E9ADBBF10}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_AllowFilters(self) -> hints.Incomplete: ...
        def _set_AllowFilters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFilters = hints.normal_property(_get_AllowFilters, _set_AllowFilters)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_DefaultView(self) -> hints.Incomplete: ...
        def _set_DefaultView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultView = hints.normal_property(_get_DefaultView, _set_DefaultView)
        def _get_ViewsAllowed(self) -> hints.Incomplete: ...
        def _set_ViewsAllowed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewsAllowed = hints.normal_property(_get_ViewsAllowed, _set_ViewsAllowed)
        def _get_AllowEditing(self) -> hints.Incomplete: ...
        def _set_AllowEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEditing = hints.normal_property(_get_AllowEditing, _set_AllowEditing)
        def _get_DefaultEditing(self) -> hints.Incomplete: ...
        def _set_DefaultEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultEditing = hints.normal_property(_get_DefaultEditing, _set_DefaultEditing)
        def _get_AllowEdits(self) -> hints.Incomplete: ...
        def _set_AllowEdits(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEdits = hints.normal_property(_get_AllowEdits, _set_AllowEdits)
        def _get_AllowDeletions(self) -> hints.Incomplete: ...
        def _set_AllowDeletions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDeletions = hints.normal_property(_get_AllowDeletions, _set_AllowDeletions)
        def _get_AllowAdditions(self) -> hints.Incomplete: ...
        def _set_AllowAdditions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowAdditions = hints.normal_property(_get_AllowAdditions, _set_AllowAdditions)
        def _get_DataEntry(self) -> hints.Incomplete: ...
        def _set_DataEntry(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataEntry = hints.normal_property(_get_DataEntry, _set_DataEntry)
        def _get_AllowUpdating(self) -> hints.Incomplete: ...
        def _set_AllowUpdating(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowUpdating = hints.normal_property(_get_AllowUpdating, _set_AllowUpdating)
        def _get_RecordsetType(self) -> hints.Incomplete: ...
        def _set_RecordsetType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordsetType = hints.normal_property(_get_RecordsetType, _set_RecordsetType)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_RecordSelectors(self) -> hints.Incomplete: ...
        def _set_RecordSelectors(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSelectors = hints.normal_property(_get_RecordSelectors, _set_RecordSelectors)
        def _get_NavigationButtons(self) -> hints.Incomplete: ...
        def _set_NavigationButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NavigationButtons = hints.normal_property(_get_NavigationButtons, _set_NavigationButtons)
        def _get_DividingLines(self) -> hints.Incomplete: ...
        def _set_DividingLines(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DividingLines = hints.normal_property(_get_DividingLines, _set_DividingLines)
        def _get_AutoResize(self) -> hints.Incomplete: ...
        def _set_AutoResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoResize = hints.normal_property(_get_AutoResize, _set_AutoResize)
        def _get_AutoCenter(self) -> hints.Incomplete: ...
        def _set_AutoCenter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoCenter = hints.normal_property(_get_AutoCenter, _set_AutoCenter)
        def _get_PopUp(self) -> hints.Incomplete: ...
        def _set_PopUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PopUp = hints.normal_property(_get_PopUp, _set_PopUp)
        def _get_Modal(self) -> hints.Incomplete: ...
        def _set_Modal(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Modal = hints.normal_property(_get_Modal, _set_Modal)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_ControlBox(self) -> hints.Incomplete: ...
        def _set_ControlBox(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlBox = hints.normal_property(_get_ControlBox, _set_ControlBox)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_MinMaxButtons(self) -> hints.Incomplete: ...
        def _set_MinMaxButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinMaxButtons = hints.normal_property(_get_MinMaxButtons, _set_MinMaxButtons)
        def _get_CloseButton(self) -> hints.Incomplete: ...
        def _set_CloseButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CloseButton = hints.normal_property(_get_CloseButton, _set_CloseButton)
        def _get_WhatsThisButton(self) -> hints.Incomplete: ...
        def _set_WhatsThisButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WhatsThisButton = hints.normal_property(_get_WhatsThisButton, _set_WhatsThisButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_Cycle(self) -> hints.Incomplete: ...
        def _set_Cycle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cycle = hints.normal_property(_get_Cycle, _set_Cycle)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenu(self) -> hints.Incomplete: ...
        def _set_ShortcutMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenu = hints.normal_property(_get_ShortcutMenu, _set_ShortcutMenu)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_RowHeight(self) -> hints.Incomplete: ...
        def _set_RowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowHeight = hints.normal_property(_get_RowHeight, _set_RowHeight)
        def _get_DatasheetFontName(self) -> hints.Incomplete: ...
        def _set_DatasheetFontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontName = hints.normal_property(_get_DatasheetFontName, _set_DatasheetFontName)
        def _get_DatasheetFontHeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontHeight = hints.normal_property(_get_DatasheetFontHeight, _set_DatasheetFontHeight)
        def _get_DatasheetFontWeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontWeight = hints.normal_property(_get_DatasheetFontWeight, _set_DatasheetFontWeight)
        def _get_DatasheetFontItalic(self) -> hints.Incomplete: ...
        def _set_DatasheetFontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontItalic = hints.normal_property(_get_DatasheetFontItalic, _set_DatasheetFontItalic)
        def _get_DatasheetFontUnderline(self) -> hints.Incomplete: ...
        def _set_DatasheetFontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontUnderline = hints.normal_property(_get_DatasheetFontUnderline, _set_DatasheetFontUnderline)
        def _get_TabularCharSet(self) -> hints.Incomplete: ...
        def _set_TabularCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularCharSet = hints.normal_property(_get_TabularCharSet, _set_TabularCharSet)
        def _get_DatasheetGridlinesBehavior(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesBehavior(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesBehavior = hints.normal_property(_get_DatasheetGridlinesBehavior, _set_DatasheetGridlinesBehavior)
        def _get_DatasheetGridlinesColor(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesColor = hints.normal_property(_get_DatasheetGridlinesColor, _set_DatasheetGridlinesColor)
        def _get_DatasheetCellsEffect(self) -> hints.Incomplete: ...
        def _set_DatasheetCellsEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetCellsEffect = hints.normal_property(_get_DatasheetCellsEffect, _set_DatasheetCellsEffect)
        def _get_DatasheetForeColor(self) -> hints.Incomplete: ...
        def _set_DatasheetForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetForeColor = hints.normal_property(_get_DatasheetForeColor, _set_DatasheetForeColor)
        def _get_ShowGrid(self) -> hints.Incomplete: ...
        def _set_ShowGrid(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowGrid = hints.normal_property(_get_ShowGrid, _set_ShowGrid)
        def _get_DatasheetBackColor(self) -> hints.Incomplete: ...
        def _set_DatasheetBackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetBackColor = hints.normal_property(_get_DatasheetBackColor, _set_DatasheetBackColor)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_FrozenColumns(self) -> hints.Incomplete: ...
        def _set_FrozenColumns(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FrozenColumns = hints.normal_property(_get_FrozenColumns, _set_FrozenColumns)
        def _get_Bookmark(self) -> hints.Incomplete: ...
        def _set_Bookmark(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bookmark = hints.normal_property(_get_Bookmark, _set_Bookmark)
        def _get_TabularFamily(self) -> hints.Incomplete: ...
        def _set_TabularFamily(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularFamily = hints.normal_property(_get_TabularFamily, _set_TabularFamily)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OpenArgs(self) -> hints.Incomplete: ...
        def _set_OpenArgs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OpenArgs = hints.normal_property(_get_OpenArgs, _set_OpenArgs)
        def _get_ConnectSynch(self) -> hints.Incomplete: ...
        def _set_ConnectSynch(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ConnectSynch = hints.normal_property(_get_ConnectSynch, _set_ConnectSynch)
        def _get_OnCurrent(self) -> hints.Incomplete: ...
        def _set_OnCurrent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrent = hints.normal_property(_get_OnCurrent, _set_OnCurrent)
        def _get_OnInsert(self) -> hints.Incomplete: ...
        def _set_OnInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnInsert = hints.normal_property(_get_OnInsert, _set_OnInsert)
        def _get_BeforeInsert(self) -> hints.Incomplete: ...
        def _set_BeforeInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeInsert = hints.normal_property(_get_BeforeInsert, _set_BeforeInsert)
        def _get_AfterInsert(self) -> hints.Incomplete: ...
        def _set_AfterInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterInsert = hints.normal_property(_get_AfterInsert, _set_AfterInsert)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnDelete(self) -> hints.Incomplete: ...
        def _set_OnDelete(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDelete = hints.normal_property(_get_OnDelete, _set_OnDelete)
        def _get_BeforeDelConfirm(self) -> hints.Incomplete: ...
        def _set_BeforeDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeDelConfirm = hints.normal_property(_get_BeforeDelConfirm, _set_BeforeDelConfirm)
        def _get_AfterDelConfirm(self) -> hints.Incomplete: ...
        def _set_AfterDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterDelConfirm = hints.normal_property(_get_AfterDelConfirm, _set_AfterDelConfirm)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnLoad(self) -> hints.Incomplete: ...
        def _set_OnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoad = hints.normal_property(_get_OnLoad, _set_OnLoad)
        def _get_OnResize(self) -> hints.Incomplete: ...
        def _set_OnResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResize = hints.normal_property(_get_OnResize, _set_OnResize)
        def _get_OnUnload(self) -> hints.Incomplete: ...
        def _set_OnUnload(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnload = hints.normal_property(_get_OnUnload, _set_OnUnload)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_KeyPreview(self) -> hints.Incomplete: ...
        def _set_KeyPreview(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyPreview = hints.normal_property(_get_KeyPreview, _set_KeyPreview)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_OnFilter(self) -> hints.Incomplete: ...
        def _set_OnFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilter = hints.normal_property(_get_OnFilter, _set_OnFilter)
        def _get_OnApplyFilter(self) -> hints.Incomplete: ...
        def _set_OnApplyFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilter = hints.normal_property(_get_OnApplyFilter, _set_OnApplyFilter)
        def _get_OnTimer(self) -> hints.Incomplete: ...
        def _set_OnTimer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimer = hints.normal_property(_get_OnTimer, _set_OnTimer)
        def _get_TimerInterval(self) -> hints.Incomplete: ...
        def _set_TimerInterval(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TimerInterval = hints.normal_property(_get_TimerInterval, _set_TimerInterval)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        def _set_WindowWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowWidth = hints.normal_property(_get_WindowWidth, _set_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        def _set_WindowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowHeight = hints.normal_property(_get_WindowHeight, _set_WindowHeight)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        def _set_CurrentView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentView = hints.normal_property(_get_CurrentView, _set_CurrentView)
        def _get_CurrentSectionTop(self) -> hints.Incomplete: ...
        def _set_CurrentSectionTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionTop = hints.normal_property(_get_CurrentSectionTop, _set_CurrentSectionTop)
        def _get_CurrentSectionLeft(self) -> hints.Incomplete: ...
        def _set_CurrentSectionLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionLeft = hints.normal_property(_get_CurrentSectionLeft, _set_CurrentSectionLeft)
        def _get_SelLeft(self) -> hints.Incomplete: ...
        def _set_SelLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelLeft = hints.normal_property(_get_SelLeft, _set_SelLeft)
        def _get_SelTop(self) -> hints.Incomplete: ...
        def _set_SelTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelTop = hints.normal_property(_get_SelTop, _set_SelTop)
        def _get_SelWidth(self) -> hints.Incomplete: ...
        def _set_SelWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelWidth = hints.normal_property(_get_SelWidth, _set_SelWidth)
        def _get_SelHeight(self) -> hints.Incomplete: ...
        def _set_SelHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelHeight = hints.normal_property(_get_SelHeight, _set_SelHeight)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_InsideHeight(self) -> hints.Incomplete: ...
        def _set_InsideHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideHeight = hints.normal_property(_get_InsideHeight, _set_InsideHeight)
        def _get_InsideWidth(self) -> hints.Incomplete: ...
        def _set_InsideWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideWidth = hints.normal_property(_get_InsideWidth, _set_InsideWidth)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_AllowDesignChanges(self) -> hints.Incomplete: ...
        def _set_AllowDesignChanges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDesignChanges = hints.normal_property(_get_AllowDesignChanges, _set_AllowDesignChanges)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_ServerFilterByForm(self) -> hints.Incomplete: ...
        def _set_ServerFilterByForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilterByForm = hints.normal_property(_get_ServerFilterByForm, _set_ServerFilterByForm)
        def _get_MaxRecords(self) -> hints.Incomplete: ...
        def _set_MaxRecords(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecords = hints.normal_property(_get_MaxRecords, _set_MaxRecords)
        def _get_UniqueTable(self) -> hints.Incomplete: ...
        def _set_UniqueTable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UniqueTable = hints.normal_property(_get_UniqueTable, _set_UniqueTable)
        def _get_ResyncCommand(self) -> hints.Incomplete: ...
        def _set_ResyncCommand(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ResyncCommand = hints.normal_property(_get_ResyncCommand, _set_ResyncCommand)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_MaxRecButton(self) -> hints.Incomplete: ...
        def _set_MaxRecButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecButton = hints.normal_property(_get_MaxRecButton, _set_MaxRecButton)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_NewRecord(self) -> hints.Incomplete: ...
        NewRecord = hints.normal_property(_get_NewRecord)
        def Undo(self) -> hints.Hresult: ...
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def _get_Dynaset(self) -> hints.Incomplete: ...
        Dynaset = hints.normal_property(_get_Dynaset)
        def _get_RecordsetClone(self) -> hints.Incomplete: ...
        RecordsetClone = hints.normal_property(_get_RecordsetClone)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def _get_SectionOld(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        SectionOld = hints.named_property('SectionOld', _get_SectionOld)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_ConnectControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ConnectControl = hints.normal_property(_get_ConnectControl)
        def Recalc(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Refresh(self) -> hints.Hresult: ...
        def Repaint(self) -> hints.Hresult: ...
        def GoToPage(self, PageNumber: hints.Incomplete, Right: hints.Incomplete = ..., Down: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_SubdatasheetHeight(self) -> hints.Incomplete: ...
        def _set_SubdatasheetHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetHeight = hints.normal_property(_get_SubdatasheetHeight, _set_SubdatasheetHeight)
        def _get_SubdatasheetExpanded(self) -> hints.Incomplete: ...
        def _set_SubdatasheetExpanded(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetExpanded = hints.normal_property(_get_SubdatasheetExpanded, _set_SubdatasheetExpanded)
        def _get_DatasheetBorderLineStyle(self) -> hints.Incomplete: ...
        def _set_DatasheetBorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetBorderLineStyle = hints.normal_property(_get_DatasheetBorderLineStyle, _set_DatasheetBorderLineStyle)
        def _get_DatasheetColumnHeaderUnderlineStyle(self) -> hints.Incomplete: ...
        def _set_DatasheetColumnHeaderUnderlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetColumnHeaderUnderlineStyle = hints.normal_property(_get_DatasheetColumnHeaderUnderlineStyle, _set_DatasheetColumnHeaderUnderlineStyle)
        def _get_HorizontalDatasheetGridlineStyle(self) -> hints.Incomplete: ...
        def _set_HorizontalDatasheetGridlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalDatasheetGridlineStyle = hints.normal_property(_get_HorizontalDatasheetGridlineStyle, _set_HorizontalDatasheetGridlineStyle)
        def _get_VerticalDatasheetGridlineStyle(self) -> hints.Incomplete: ...
        def _set_VerticalDatasheetGridlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalDatasheetGridlineStyle = hints.normal_property(_get_VerticalDatasheetGridlineStyle, _set_VerticalDatasheetGridlineStyle)
        def _get_WindowTop(self) -> hints.Incomplete: ...
        WindowTop = hints.normal_property(_get_WindowTop)
        def _get_WindowLeft(self) -> hints.Incomplete: ...
        WindowLeft = hints.normal_property(_get_WindowLeft)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OnUndo(self) -> hints.Incomplete: ...
        def _set_OnUndo(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUndo = hints.normal_property(_get_OnUndo, _set_OnUndo)
        def _get_OnRecordExit(self) -> hints.Incomplete: ...
        def _set_OnRecordExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnRecordExit = hints.normal_property(_get_OnRecordExit, _set_OnRecordExit)
        def _get_PivotTable(self) -> hints.Incomplete: ...
        PivotTable = hints.normal_property(_get_PivotTable)
        def _get_ChartSpace(self) -> hints.Incomplete: ...
        ChartSpace = hints.normal_property(_get_ChartSpace)
        def _get_Printer(self) -> '_Printer': ...
        def _set_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        def _setref_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Printer = hints.normal_property(_get_Printer, hints.put_or_putref(_set_Printer, _setref_Printer))
        def _get_Moveable(self) -> hints.Incomplete: ...
        def _set_Moveable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Moveable = hints.normal_property(_get_Moveable, _set_Moveable)
        def _get_BeginBatchEdit(self) -> hints.Incomplete: ...
        def _set_BeginBatchEdit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeginBatchEdit = hints.normal_property(_get_BeginBatchEdit, _set_BeginBatchEdit)
        def _get_UndoBatchEdit(self) -> hints.Incomplete: ...
        def _set_UndoBatchEdit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UndoBatchEdit = hints.normal_property(_get_UndoBatchEdit, _set_UndoBatchEdit)
        def _get_BeforeBeginTransaction(self) -> hints.Incomplete: ...
        def _set_BeforeBeginTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeBeginTransaction = hints.normal_property(_get_BeforeBeginTransaction, _set_BeforeBeginTransaction)
        def _get_AfterBeginTransaction(self) -> hints.Incomplete: ...
        def _set_AfterBeginTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterBeginTransaction = hints.normal_property(_get_AfterBeginTransaction, _set_AfterBeginTransaction)
        def _get_BeforeCommitTransaction(self) -> hints.Incomplete: ...
        def _set_BeforeCommitTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeCommitTransaction = hints.normal_property(_get_BeforeCommitTransaction, _set_BeforeCommitTransaction)
        def _get_AfterCommitTransaction(self) -> hints.Incomplete: ...
        def _set_AfterCommitTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterCommitTransaction = hints.normal_property(_get_AfterCommitTransaction, _set_AfterCommitTransaction)
        def _get_RollbackTransaction(self) -> hints.Incomplete: ...
        def _set_RollbackTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RollbackTransaction = hints.normal_property(_get_RollbackTransaction, _set_RollbackTransaction)
        def _get_AllowFormView(self) -> hints.Incomplete: ...
        def _set_AllowFormView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFormView = hints.normal_property(_get_AllowFormView, _set_AllowFormView)
        def _get_AllowDatasheetView(self) -> hints.Incomplete: ...
        def _set_AllowDatasheetView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDatasheetView = hints.normal_property(_get_AllowDatasheetView, _set_AllowDatasheetView)
        def _get_AllowPivotTableView(self) -> hints.Incomplete: ...
        def _set_AllowPivotTableView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowPivotTableView = hints.normal_property(_get_AllowPivotTableView, _set_AllowPivotTableView)
        def _get_AllowPivotChartView(self) -> hints.Incomplete: ...
        def _set_AllowPivotChartView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowPivotChartView = hints.normal_property(_get_AllowPivotChartView, _set_AllowPivotChartView)
        def _get_OnConnect(self) -> hints.Incomplete: ...
        def _set_OnConnect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnConnect = hints.normal_property(_get_OnConnect, _set_OnConnect)
        def _get_OnDisconnect(self) -> hints.Incomplete: ...
        def _set_OnDisconnect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDisconnect = hints.normal_property(_get_OnDisconnect, _set_OnDisconnect)
        def _get_PivotTableChange(self) -> hints.Incomplete: ...
        def _set_PivotTableChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PivotTableChange = hints.normal_property(_get_PivotTableChange, _set_PivotTableChange)
        def _get_Query(self) -> hints.Incomplete: ...
        def _set_Query(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Query = hints.normal_property(_get_Query, _set_Query)
        def _get_BeforeQuery(self) -> hints.Incomplete: ...
        def _set_BeforeQuery(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeQuery = hints.normal_property(_get_BeforeQuery, _set_BeforeQuery)
        def _get_SelectionChange(self) -> hints.Incomplete: ...
        def _set_SelectionChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelectionChange = hints.normal_property(_get_SelectionChange, _set_SelectionChange)
        def _get_CommandBeforeExecute(self) -> hints.Incomplete: ...
        def _set_CommandBeforeExecute(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandBeforeExecute = hints.normal_property(_get_CommandBeforeExecute, _set_CommandBeforeExecute)
        def _get_CommandChecked(self) -> hints.Incomplete: ...
        def _set_CommandChecked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandChecked = hints.normal_property(_get_CommandChecked, _set_CommandChecked)
        def _get_CommandEnabled(self) -> hints.Incomplete: ...
        def _set_CommandEnabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandEnabled = hints.normal_property(_get_CommandEnabled, _set_CommandEnabled)
        def _get_CommandExecute(self) -> hints.Incomplete: ...
        def _set_CommandExecute(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandExecute = hints.normal_property(_get_CommandExecute, _set_CommandExecute)
        def _get_DataSetChange(self) -> hints.Incomplete: ...
        def _set_DataSetChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataSetChange = hints.normal_property(_get_DataSetChange, _set_DataSetChange)
        def _get_BeforeScreenTip(self) -> hints.Incomplete: ...
        def _set_BeforeScreenTip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeScreenTip = hints.normal_property(_get_BeforeScreenTip, _set_BeforeScreenTip)
        def _get_AfterFinalRender(self) -> hints.Incomplete: ...
        def _set_AfterFinalRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterFinalRender = hints.normal_property(_get_AfterFinalRender, _set_AfterFinalRender)
        def _get_AfterRender(self) -> hints.Incomplete: ...
        def _set_AfterRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterRender = hints.normal_property(_get_AfterRender, _set_AfterRender)
        def _get_AfterLayout(self) -> hints.Incomplete: ...
        def _set_AfterLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterLayout = hints.normal_property(_get_AfterLayout, _set_AfterLayout)
        def _get_BeforeRender(self) -> hints.Incomplete: ...
        def _set_BeforeRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeRender = hints.normal_property(_get_BeforeRender, _set_BeforeRender)
        def _get_MouseWheel(self) -> hints.Incomplete: ...
        def _set_MouseWheel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MouseWheel = hints.normal_property(_get_MouseWheel, _set_MouseWheel)
        def _get_ViewChange(self) -> hints.Incomplete: ...
        def _set_ViewChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewChange = hints.normal_property(_get_ViewChange, _set_ViewChange)
        def _get_DataChange(self) -> hints.Incomplete: ...
        def _set_DataChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataChange = hints.normal_property(_get_DataChange, _set_DataChange)
        def _get_FetchDefaults(self) -> hints.Incomplete: ...
        def _set_FetchDefaults(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FetchDefaults = hints.normal_property(_get_FetchDefaults, _set_FetchDefaults)
        def _get_BatchUpdates(self) -> hints.Incomplete: ...
        def _set_BatchUpdates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BatchUpdates = hints.normal_property(_get_BatchUpdates, _set_BatchUpdates)
        def _get_CommitOnClose(self) -> hints.Incomplete: ...
        def _set_CommitOnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommitOnClose = hints.normal_property(_get_CommitOnClose, _set_CommitOnClose)
        def _get_CommitOnNavigation(self) -> hints.Incomplete: ...
        def _set_CommitOnNavigation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommitOnNavigation = hints.normal_property(_get_CommitOnNavigation, _set_CommitOnNavigation)
        def _get_UseDefaultPrinter(self) -> hints.Incomplete: ...
        def _set_UseDefaultPrinter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseDefaultPrinter = hints.normal_property(_get_UseDefaultPrinter, _set_UseDefaultPrinter)
        def _get_RecordSourceQualifier(self) -> hints.Incomplete: ...
        def _set_RecordSourceQualifier(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSourceQualifier = hints.normal_property(_get_RecordSourceQualifier, _set_RecordSourceQualifier)
        def _get_FilterOnLoad(self) -> hints.Incomplete: ...
        def _set_FilterOnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOnLoad = hints.normal_property(_get_FilterOnLoad, _set_FilterOnLoad)
        def _get_OrderByOnLoad(self) -> hints.Incomplete: ...
        def _set_OrderByOnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOnLoad = hints.normal_property(_get_OrderByOnLoad, _set_OrderByOnLoad)
        def _get_SplitFormOrientation(self) -> hints.Incomplete: ...
        def _set_SplitFormOrientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormOrientation = hints.normal_property(_get_SplitFormOrientation, _set_SplitFormOrientation)
        def _get_SplitFormDatasheet(self) -> hints.Incomplete: ...
        def _set_SplitFormDatasheet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormDatasheet = hints.normal_property(_get_SplitFormDatasheet, _set_SplitFormDatasheet)
        def _get_SplitFormSplitterBar(self) -> hints.Incomplete: ...
        def _set_SplitFormSplitterBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormSplitterBar = hints.normal_property(_get_SplitFormSplitterBar, _set_SplitFormSplitterBar)
        def _get_SplitFormPrinting(self) -> hints.Incomplete: ...
        def _set_SplitFormPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormPrinting = hints.normal_property(_get_SplitFormPrinting, _set_SplitFormPrinting)
        def _get_SplitFormSplitterBarSave(self) -> hints.Incomplete: ...
        def _set_SplitFormSplitterBarSave(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormSplitterBarSave = hints.normal_property(_get_SplitFormSplitterBarSave, _set_SplitFormSplitterBarSave)
        def _get_NavigationCaption(self) -> hints.Incomplete: ...
        def _set_NavigationCaption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NavigationCaption = hints.normal_property(_get_NavigationCaption, _set_NavigationCaption)
        def _get_OnCurrentMacro(self) -> hints.Incomplete: ...
        def _set_OnCurrentMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrentMacro = hints.normal_property(_get_OnCurrentMacro, _set_OnCurrentMacro)
        def _get_BeforeInsertMacro(self) -> hints.Incomplete: ...
        def _set_BeforeInsertMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeInsertMacro = hints.normal_property(_get_BeforeInsertMacro, _set_BeforeInsertMacro)
        def _get_AfterInsertMacro(self) -> hints.Incomplete: ...
        def _set_AfterInsertMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterInsertMacro = hints.normal_property(_get_AfterInsertMacro, _set_AfterInsertMacro)
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnDirtyMacro(self) -> hints.Incomplete: ...
        def _set_OnDirtyMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirtyMacro = hints.normal_property(_get_OnDirtyMacro, _set_OnDirtyMacro)
        def _get_OnDeleteMacro(self) -> hints.Incomplete: ...
        def _set_OnDeleteMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeleteMacro = hints.normal_property(_get_OnDeleteMacro, _set_OnDeleteMacro)
        def _get_BeforeDelConfirmMacro(self) -> hints.Incomplete: ...
        def _set_BeforeDelConfirmMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeDelConfirmMacro = hints.normal_property(_get_BeforeDelConfirmMacro, _set_BeforeDelConfirmMacro)
        def _get_AfterDelConfirmMacro(self) -> hints.Incomplete: ...
        def _set_AfterDelConfirmMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterDelConfirmMacro = hints.normal_property(_get_AfterDelConfirmMacro, _set_AfterDelConfirmMacro)
        def _get_OnOpenMacro(self) -> hints.Incomplete: ...
        def _set_OnOpenMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpenMacro = hints.normal_property(_get_OnOpenMacro, _set_OnOpenMacro)
        def _get_OnLoadMacro(self) -> hints.Incomplete: ...
        def _set_OnLoadMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoadMacro = hints.normal_property(_get_OnLoadMacro, _set_OnLoadMacro)
        def _get_OnResizeMacro(self) -> hints.Incomplete: ...
        def _set_OnResizeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResizeMacro = hints.normal_property(_get_OnResizeMacro, _set_OnResizeMacro)
        def _get_OnUnloadMacro(self) -> hints.Incomplete: ...
        def _set_OnUnloadMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnloadMacro = hints.normal_property(_get_OnUnloadMacro, _set_OnUnloadMacro)
        def _get_OnCloseMacro(self) -> hints.Incomplete: ...
        def _set_OnCloseMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCloseMacro = hints.normal_property(_get_OnCloseMacro, _set_OnCloseMacro)
        def _get_OnActivateMacro(self) -> hints.Incomplete: ...
        def _set_OnActivateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivateMacro = hints.normal_property(_get_OnActivateMacro, _set_OnActivateMacro)
        def _get_OnDeactivateMacro(self) -> hints.Incomplete: ...
        def _set_OnDeactivateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivateMacro = hints.normal_property(_get_OnDeactivateMacro, _set_OnDeactivateMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_OnErrorMacro(self) -> hints.Incomplete: ...
        def _set_OnErrorMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnErrorMacro = hints.normal_property(_get_OnErrorMacro, _set_OnErrorMacro)
        def _get_OnFilterMacro(self) -> hints.Incomplete: ...
        def _set_OnFilterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilterMacro = hints.normal_property(_get_OnFilterMacro, _set_OnFilterMacro)
        def _get_OnApplyFilterMacro(self) -> hints.Incomplete: ...
        def _set_OnApplyFilterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilterMacro = hints.normal_property(_get_OnApplyFilterMacro, _set_OnApplyFilterMacro)
        def _get_OnTimerMacro(self) -> hints.Incomplete: ...
        def _set_OnTimerMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimerMacro = hints.normal_property(_get_OnTimerMacro, _set_OnTimerMacro)
        def _get_OnUndoMacro(self) -> hints.Incomplete: ...
        def _set_OnUndoMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUndoMacro = hints.normal_property(_get_OnUndoMacro, _set_OnUndoMacro)
        def _get_OnRecordExitMacro(self) -> hints.Incomplete: ...
        def _set_OnRecordExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnRecordExitMacro = hints.normal_property(_get_OnRecordExitMacro, _set_OnRecordExitMacro)
        def _get_BeginBatchEditMacro(self) -> hints.Incomplete: ...
        def _set_BeginBatchEditMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeginBatchEditMacro = hints.normal_property(_get_BeginBatchEditMacro, _set_BeginBatchEditMacro)
        def _get_UndoBatchEditMacro(self) -> hints.Incomplete: ...
        def _set_UndoBatchEditMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UndoBatchEditMacro = hints.normal_property(_get_UndoBatchEditMacro, _set_UndoBatchEditMacro)
        def _get_BeforeBeginTransactionMacro(self) -> hints.Incomplete: ...
        def _set_BeforeBeginTransactionMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeBeginTransactionMacro = hints.normal_property(_get_BeforeBeginTransactionMacro, _set_BeforeBeginTransactionMacro)
        def _get_AfterBeginTransactionMacro(self) -> hints.Incomplete: ...
        def _set_AfterBeginTransactionMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterBeginTransactionMacro = hints.normal_property(_get_AfterBeginTransactionMacro, _set_AfterBeginTransactionMacro)
        def _get_BeforeCommitTransactionMacro(self) -> hints.Incomplete: ...
        def _set_BeforeCommitTransactionMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeCommitTransactionMacro = hints.normal_property(_get_BeforeCommitTransactionMacro, _set_BeforeCommitTransactionMacro)
        def _get_AfterCommitTransactionMacro(self) -> hints.Incomplete: ...
        def _set_AfterCommitTransactionMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterCommitTransactionMacro = hints.normal_property(_get_AfterCommitTransactionMacro, _set_AfterCommitTransactionMacro)
        def _get_RollbackTransactionMacro(self) -> hints.Incomplete: ...
        def _set_RollbackTransactionMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RollbackTransactionMacro = hints.normal_property(_get_RollbackTransactionMacro, _set_RollbackTransactionMacro)
        def _get_OnConnectMacro(self) -> hints.Incomplete: ...
        def _set_OnConnectMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnConnectMacro = hints.normal_property(_get_OnConnectMacro, _set_OnConnectMacro)
        def _get_OnDisconnectMacro(self) -> hints.Incomplete: ...
        def _set_OnDisconnectMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDisconnectMacro = hints.normal_property(_get_OnDisconnectMacro, _set_OnDisconnectMacro)
        def _get_PivotTableChangeMacro(self) -> hints.Incomplete: ...
        def _set_PivotTableChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PivotTableChangeMacro = hints.normal_property(_get_PivotTableChangeMacro, _set_PivotTableChangeMacro)
        def _get_QueryMacro(self) -> hints.Incomplete: ...
        def _set_QueryMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QueryMacro = hints.normal_property(_get_QueryMacro, _set_QueryMacro)
        def _get_BeforeQueryMacro(self) -> hints.Incomplete: ...
        def _set_BeforeQueryMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeQueryMacro = hints.normal_property(_get_BeforeQueryMacro, _set_BeforeQueryMacro)
        def _get_SelectionChangeMacro(self) -> hints.Incomplete: ...
        def _set_SelectionChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelectionChangeMacro = hints.normal_property(_get_SelectionChangeMacro, _set_SelectionChangeMacro)
        def _get_CommandBeforeExecuteMacro(self) -> hints.Incomplete: ...
        def _set_CommandBeforeExecuteMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandBeforeExecuteMacro = hints.normal_property(_get_CommandBeforeExecuteMacro, _set_CommandBeforeExecuteMacro)
        def _get_CommandCheckedMacro(self) -> hints.Incomplete: ...
        def _set_CommandCheckedMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandCheckedMacro = hints.normal_property(_get_CommandCheckedMacro, _set_CommandCheckedMacro)
        def _get_CommandEnabledMacro(self) -> hints.Incomplete: ...
        def _set_CommandEnabledMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandEnabledMacro = hints.normal_property(_get_CommandEnabledMacro, _set_CommandEnabledMacro)
        def _get_CommandExecuteMacro(self) -> hints.Incomplete: ...
        def _set_CommandExecuteMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandExecuteMacro = hints.normal_property(_get_CommandExecuteMacro, _set_CommandExecuteMacro)
        def _get_DataSetChangeMacro(self) -> hints.Incomplete: ...
        def _set_DataSetChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataSetChangeMacro = hints.normal_property(_get_DataSetChangeMacro, _set_DataSetChangeMacro)
        def _get_BeforeScreenTipMacro(self) -> hints.Incomplete: ...
        def _set_BeforeScreenTipMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeScreenTipMacro = hints.normal_property(_get_BeforeScreenTipMacro, _set_BeforeScreenTipMacro)
        def _get_AfterFinalRenderMacro(self) -> hints.Incomplete: ...
        def _set_AfterFinalRenderMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterFinalRenderMacro = hints.normal_property(_get_AfterFinalRenderMacro, _set_AfterFinalRenderMacro)
        def _get_AfterRenderMacro(self) -> hints.Incomplete: ...
        def _set_AfterRenderMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterRenderMacro = hints.normal_property(_get_AfterRenderMacro, _set_AfterRenderMacro)
        def _get_AfterLayoutMacro(self) -> hints.Incomplete: ...
        def _set_AfterLayoutMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterLayoutMacro = hints.normal_property(_get_AfterLayoutMacro, _set_AfterLayoutMacro)
        def _get_BeforeRenderMacro(self) -> hints.Incomplete: ...
        def _set_BeforeRenderMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeRenderMacro = hints.normal_property(_get_BeforeRenderMacro, _set_BeforeRenderMacro)
        def _get_MouseWheelMacro(self) -> hints.Incomplete: ...
        def _set_MouseWheelMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MouseWheelMacro = hints.normal_property(_get_MouseWheelMacro, _set_MouseWheelMacro)
        def _get_ViewChangeMacro(self) -> hints.Incomplete: ...
        def _set_ViewChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewChangeMacro = hints.normal_property(_get_ViewChangeMacro, _set_ViewChangeMacro)
        def _get_DataChangeMacro(self) -> hints.Incomplete: ...
        def _set_DataChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataChangeMacro = hints.normal_property(_get_DataChangeMacro, _set_DataChangeMacro)
        def _get_AllowLayoutView(self) -> hints.Incomplete: ...
        def _set_AllowLayoutView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowLayoutView = hints.normal_property(_get_AllowLayoutView, _set_AllowLayoutView)
        def _get_DatasheetAlternateBackColor(self) -> hints.Incomplete: ...
        def _set_DatasheetAlternateBackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetAlternateBackColor = hints.normal_property(_get_DatasheetAlternateBackColor, _set_DatasheetAlternateBackColor)
        def _get_DisplayOnSharePointSite(self) -> hints.Incomplete: ...
        def _set_DisplayOnSharePointSite(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayOnSharePointSite = hints.normal_property(_get_DisplayOnSharePointSite, _set_DisplayOnSharePointSite)
        def _get_SplitFormSize(self) -> hints.Incomplete: ...
        def _set_SplitFormSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SplitFormSize = hints.normal_property(_get_SplitFormSize, _set_SplitFormSize)
        def _get_Section(self, Index: hints.Incomplete) -> '_Section': ...
        Section = hints.named_property('Section', _get_Section)
        def _get_RibbonName(self) -> hints.Incomplete: ...
        def _set_RibbonName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RibbonName = hints.normal_property(_get_RibbonName, _set_RibbonName)
        def _get_FitToScreen(self) -> hints.Incomplete: ...
        def _set_FitToScreen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FitToScreen = hints.normal_property(_get_FitToScreen, _set_FitToScreen)


class _FormEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDCFB-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Load(self) -> hints.Hresult: ...
        def Current(self) -> hints.Hresult: ...
        def BeforeInsert(self) -> hints.Incomplete: ...
        def AfterInsert(self) -> hints.Hresult: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Delete(self) -> hints.Incomplete: ...
        def BeforeDelConfirm(self) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def AfterDelConfirm(self, Status: hints.Incomplete) -> hints.Incomplete: ...
        def Open(self) -> hints.Incomplete: ...
        def Resize(self) -> hints.Hresult: ...
        def Unload(self) -> hints.Incomplete: ...
        def Close(self) -> hints.Hresult: ...
        def Activate(self) -> hints.Hresult: ...
        def Deactivate(self) -> hints.Hresult: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Error(self, DataErr: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Timer(self) -> hints.Hresult: ...
        def Filter(self, FilterType: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def ApplyFilter(self, ApplyType: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...
        def RecordExit(self) -> hints.Incomplete: ...
        def BeginBatchEdit(self) -> hints.Incomplete: ...
        def UndoBatchEdit(self) -> hints.Incomplete: ...
        def BeforeBeginTransaction(self, Connection: hints.Incomplete) -> hints.Incomplete: ...
        def AfterBeginTransaction(self, Connection: hints.Incomplete) -> hints.Hresult: ...
        def BeforeCommitTransaction(self, Connection: hints.Incomplete) -> hints.Incomplete: ...
        def AfterCommitTransaction(self, Connection: hints.Incomplete) -> hints.Hresult: ...
        def RollbackTransaction(self, Connection: hints.Incomplete) -> hints.Hresult: ...
        def OnConnect(self) -> hints.Hresult: ...
        def OnDisconnect(self) -> hints.Hresult: ...
        def PivotTableChange(self, Reason: hints.Incomplete) -> hints.Hresult: ...
        def Query(self) -> hints.Hresult: ...
        def BeforeQuery(self) -> hints.Hresult: ...
        def SelectionChange(self) -> hints.Hresult: ...
        def CommandBeforeExecute(self, Command: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Hresult: ...
        def CommandChecked(self, Command: hints.Incomplete, Checked: hints.Incomplete) -> hints.Hresult: ...
        def CommandEnabled(self, Command: hints.Incomplete, Enabled: hints.Incomplete) -> hints.Hresult: ...
        def CommandExecute(self, Command: hints.Incomplete) -> hints.Hresult: ...
        def DataSetChange(self) -> hints.Hresult: ...
        def BeforeScreenTip(self, ScreenTipText: hints.Incomplete, SourceObject: hints.Incomplete) -> hints.Hresult: ...
        def BeforeRender(self, drawObject: hints.Incomplete, chartObject: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Hresult: ...
        def AfterRender(self, drawObject: hints.Incomplete, chartObject: hints.Incomplete) -> hints.Hresult: ...
        def AfterFinalRender(self, drawObject: hints.Incomplete) -> hints.Hresult: ...
        def AfterLayout(self, drawObject: hints.Incomplete) -> hints.Hresult: ...
        def MouseWheel(self, Page: hints.Incomplete, Count: hints.Incomplete) -> hints.Hresult: ...
        def ViewChange(self, Reason: hints.Incomplete) -> hints.Hresult: ...
        def DataChange(self, Reason: hints.Incomplete) -> hints.Hresult: ...


class _FormEvents2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0EA530DD-5B30-4278-BD28-47C4D11619BD}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Load(self) -> hints.Incomplete: ...
        def Current(self) -> hints.Incomplete: ...
        def BeforeInsert(self) -> hints.Incomplete: ...
        def AfterInsert(self) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Delete(self) -> hints.Incomplete: ...
        def BeforeDelConfirm(self) -> hints.Incomplete: ...
        def AfterDelConfirm(self, Status: hints.Incomplete) -> hints.Incomplete: ...
        def Open(self) -> hints.Incomplete: ...
        def Resize(self) -> hints.Incomplete: ...
        def Unload(self) -> hints.Incomplete: ...
        def Close(self) -> hints.Incomplete: ...
        def Activate(self) -> hints.Incomplete: ...
        def Deactivate(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Error(self, DataErr: hints.Incomplete) -> hints.Incomplete: ...
        def Timer(self) -> hints.Incomplete: ...
        def Filter(self, FilterType: hints.Incomplete) -> hints.Incomplete: ...
        def ApplyFilter(self, ApplyType: hints.Incomplete) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...
        def RecordExit(self) -> hints.Incomplete: ...
        def BeginBatchEdit(self) -> hints.Incomplete: ...
        def UndoBatchEdit(self) -> hints.Incomplete: ...
        def OnConnect(self) -> hints.Incomplete: ...
        def OnDisconnect(self) -> hints.Incomplete: ...
        def PivotTableChange(self, Reason: hints.Incomplete) -> hints.Incomplete: ...
        def Query(self) -> hints.Incomplete: ...
        def BeforeQuery(self) -> hints.Incomplete: ...
        def SelectionChange(self) -> hints.Incomplete: ...
        def CommandBeforeExecute(self, Command: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Incomplete: ...
        def CommandChecked(self, Command: hints.Incomplete, Checked: hints.Incomplete) -> hints.Incomplete: ...
        def CommandEnabled(self, Command: hints.Incomplete, Enabled: hints.Incomplete) -> hints.Incomplete: ...
        def CommandExecute(self, Command: hints.Incomplete) -> hints.Incomplete: ...
        def DataSetChange(self) -> hints.Incomplete: ...
        def BeforeScreenTip(self, ScreenTipText: hints.Incomplete, SourceObject: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeRender(self, drawObject: hints.Incomplete, chartObject: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Incomplete: ...
        def AfterRender(self, drawObject: hints.Incomplete, chartObject: hints.Incomplete) -> hints.Incomplete: ...
        def AfterFinalRender(self, drawObject: hints.Incomplete) -> hints.Incomplete: ...
        def AfterLayout(self, drawObject: hints.Incomplete) -> hints.Incomplete: ...
        def MouseWheel(self, Page: hints.Incomplete, Count: hints.Incomplete) -> hints.Incomplete: ...
        def ViewChange(self, Reason: hints.Incomplete) -> hints.Incomplete: ...
        def DataChange(self, Reason: hints.Incomplete) -> hints.Incomplete: ...


Form._com_interfaces_ = [_Form3]
Form._outgoing_interfaces_ = [_FormEvents2, _FormEvents]


class Module(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDCFE-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def InsertText(self, Text: hints.Incomplete) -> hints.Hresult: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def AddFromString(self, String: hints.Incomplete) -> hints.Hresult: ...
        def AddFromFile(self, FileName: hints.Incomplete) -> hints.Hresult: ...
        def _get_Lines(self, Line: hints.Incomplete, NumLines: hints.Incomplete) -> hints.Incomplete: ...
        Lines = hints.named_property('Lines', _get_Lines)
        def _get_CountOfLines(self) -> hints.Incomplete: ...
        CountOfLines = hints.normal_property(_get_CountOfLines)
        def InsertLines(self, Line: hints.Incomplete, String: hints.Incomplete) -> hints.Hresult: ...
        def DeleteLines(self, StartLine: hints.Incomplete, Count: hints.Incomplete) -> hints.Hresult: ...
        def ReplaceLine(self, Line: hints.Incomplete, String: hints.Incomplete) -> hints.Hresult: ...
        def _get_ProcStartLine(self, ProcName: hints.Incomplete, ProcKind: hints.Incomplete) -> hints.Incomplete: ...
        ProcStartLine = hints.named_property('ProcStartLine', _get_ProcStartLine)
        def _get_ProcCountLines(self, ProcName: hints.Incomplete, ProcKind: hints.Incomplete) -> hints.Incomplete: ...
        ProcCountLines = hints.named_property('ProcCountLines', _get_ProcCountLines)
        def _get_ProcBodyLine(self, ProcName: hints.Incomplete, ProcKind: hints.Incomplete) -> hints.Incomplete: ...
        ProcBodyLine = hints.named_property('ProcBodyLine', _get_ProcBodyLine)
        def _get_ProcOfLine(self, Line: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        ProcOfLine = hints.named_property('ProcOfLine', _get_ProcOfLine)
        def _get_CountOfDeclarationLines(self) -> hints.Incomplete: ...
        CountOfDeclarationLines = hints.normal_property(_get_CountOfDeclarationLines)
        def CreateEventProc(self, EventName: hints.Incomplete, ObjectName: hints.Incomplete) -> hints.Incomplete: ...
        def Find(self, Target: hints.Incomplete, StartLine: hints.Incomplete, StartColumn: hints.Incomplete, EndLine: hints.Incomplete, EndColumn: hints.Incomplete, WholeWord: hints.Incomplete = ..., MatchCase: hints.Incomplete = ..., PatternSearch: hints.Incomplete = ...) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def _get_Type(self) -> hints.Incomplete: ...
        Type = hints.normal_property(_get_Type)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class Controls(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{5970C574-EB8C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_Form._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propget'],
        HRESULT,
        'AllowFilters',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propput'],
        HRESULT,
        'AllowFilters',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propget'],
        HRESULT,
        'DefaultView',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propput'],
        HRESULT,
        'DefaultView',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propget'],
        HRESULT,
        'ViewsAllowed',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propput'],
        HRESULT,
        'ViewsAllowed',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propget'],
        HRESULT,
        'AllowEditing',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propput'],
        HRESULT,
        'AllowEditing',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propget'],
        HRESULT,
        'DefaultEditing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propput'],
        HRESULT,
        'DefaultEditing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propget'],
        HRESULT,
        'AllowEdits',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propput'],
        HRESULT,
        'AllowEdits',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propget'],
        HRESULT,
        'AllowDeletions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propput'],
        HRESULT,
        'AllowDeletions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propget'],
        HRESULT,
        'AllowAdditions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propput'],
        HRESULT,
        'AllowAdditions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propget'],
        HRESULT,
        'DataEntry',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propput'],
        HRESULT,
        'DataEntry',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propget'],
        HRESULT,
        'AllowUpdating',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propput'],
        HRESULT,
        'AllowUpdating',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propget'],
        HRESULT,
        'RecordsetType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propput'],
        HRESULT,
        'RecordsetType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propget'],
        HRESULT,
        'RecordSelectors',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propput'],
        HRESULT,
        'RecordSelectors',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propget'],
        HRESULT,
        'NavigationButtons',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propput'],
        HRESULT,
        'NavigationButtons',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propget'],
        HRESULT,
        'DividingLines',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propput'],
        HRESULT,
        'DividingLines',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propget'],
        HRESULT,
        'AutoResize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propput'],
        HRESULT,
        'AutoResize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propget'],
        HRESULT,
        'AutoCenter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propput'],
        HRESULT,
        'AutoCenter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propget'],
        HRESULT,
        'PopUp',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propput'],
        HRESULT,
        'PopUp',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propget'],
        HRESULT,
        'Modal',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propput'],
        HRESULT,
        'Modal',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propget'],
        HRESULT,
        'ControlBox',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propput'],
        HRESULT,
        'ControlBox',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propget'],
        HRESULT,
        'MinMaxButtons',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propput'],
        HRESULT,
        'MinMaxButtons',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propget'],
        HRESULT,
        'CloseButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propput'],
        HRESULT,
        'CloseButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propget'],
        HRESULT,
        'WhatsThisButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propput'],
        HRESULT,
        'WhatsThisButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propget'],
        HRESULT,
        'Cycle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propput'],
        HRESULT,
        'Cycle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propget'],
        HRESULT,
        'ShortcutMenu',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propput'],
        HRESULT,
        'ShortcutMenu',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propget'],
        HRESULT,
        'RowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propput'],
        HRESULT,
        'RowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propget'],
        HRESULT,
        'DatasheetFontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propput'],
        HRESULT,
        'DatasheetFontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propget'],
        HRESULT,
        'DatasheetFontHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propput'],
        HRESULT,
        'DatasheetFontHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propget'],
        HRESULT,
        'DatasheetFontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propput'],
        HRESULT,
        'DatasheetFontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propget'],
        HRESULT,
        'DatasheetFontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propput'],
        HRESULT,
        'DatasheetFontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propget'],
        HRESULT,
        'DatasheetFontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propput'],
        HRESULT,
        'DatasheetFontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propget'],
        HRESULT,
        'TabularCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propput'],
        HRESULT,
        'TabularCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propget'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propput'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propget'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propput'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propget'],
        HRESULT,
        'DatasheetCellsEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propput'],
        HRESULT,
        'DatasheetCellsEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propget'],
        HRESULT,
        'DatasheetForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propput'],
        HRESULT,
        'DatasheetForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propget'],
        HRESULT,
        'ShowGrid',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propput'],
        HRESULT,
        'ShowGrid',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propget'],
        HRESULT,
        'DatasheetBackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propput'],
        HRESULT,
        'DatasheetBackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propget'],
        HRESULT,
        'FrozenColumns',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propput'],
        HRESULT,
        'FrozenColumns',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propget'],
        HRESULT,
        'Bookmark',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propput'],
        HRESULT,
        'Bookmark',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propget'],
        HRESULT,
        'TabularFamily',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propput'],
        HRESULT,
        'TabularFamily',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propget'],
        HRESULT,
        'OpenArgs',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propput'],
        HRESULT,
        'OpenArgs',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propget'],
        HRESULT,
        'ConnectSynch',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propput'],
        HRESULT,
        'ConnectSynch',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propget'],
        HRESULT,
        'OnCurrent',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propput'],
        HRESULT,
        'OnCurrent',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propget'],
        HRESULT,
        'BeforeInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propput'],
        HRESULT,
        'BeforeInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propget'],
        HRESULT,
        'AfterInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propput'],
        HRESULT,
        'AfterInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propget'],
        HRESULT,
        'OnDelete',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propput'],
        HRESULT,
        'OnDelete',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propget'],
        HRESULT,
        'BeforeDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propput'],
        HRESULT,
        'BeforeDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propget'],
        HRESULT,
        'AfterDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propput'],
        HRESULT,
        'AfterDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propget'],
        HRESULT,
        'OnLoad',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propput'],
        HRESULT,
        'OnLoad',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propget'],
        HRESULT,
        'OnResize',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propput'],
        HRESULT,
        'OnResize',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propget'],
        HRESULT,
        'OnUnload',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propput'],
        HRESULT,
        'OnUnload',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propget'],
        HRESULT,
        'KeyPreview',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propput'],
        HRESULT,
        'KeyPreview',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propget'],
        HRESULT,
        'OnFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propput'],
        HRESULT,
        'OnFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propget'],
        HRESULT,
        'OnApplyFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propput'],
        HRESULT,
        'OnApplyFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propget'],
        HRESULT,
        'OnTimer',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propput'],
        HRESULT,
        'OnTimer',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propget'],
        HRESULT,
        'TimerInterval',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propput'],
        HRESULT,
        'TimerInterval',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propput'],
        HRESULT,
        'WindowWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propput'],
        HRESULT,
        'WindowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propput'],
        HRESULT,
        'CurrentView',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propget'],
        HRESULT,
        'CurrentSectionTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propput'],
        HRESULT,
        'CurrentSectionTop',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propget'],
        HRESULT,
        'CurrentSectionLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propput'],
        HRESULT,
        'CurrentSectionLeft',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propget'],
        HRESULT,
        'SelLeft',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propput'],
        HRESULT,
        'SelLeft',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propget'],
        HRESULT,
        'SelTop',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propput'],
        HRESULT,
        'SelTop',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propget'],
        HRESULT,
        'SelWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propput'],
        HRESULT,
        'SelWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propget'],
        HRESULT,
        'SelHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propput'],
        HRESULT,
        'SelHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propget'],
        HRESULT,
        'InsideHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propput'],
        HRESULT,
        'InsideHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propget'],
        HRESULT,
        'InsideWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propput'],
        HRESULT,
        'InsideWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propget'],
        HRESULT,
        'AllowDesignChanges',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propput'],
        HRESULT,
        'AllowDesignChanges',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propget'],
        HRESULT,
        'ServerFilterByForm',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propput'],
        HRESULT,
        'ServerFilterByForm',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propget'],
        HRESULT,
        'MaxRecords',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propput'],
        HRESULT,
        'MaxRecords',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propget'],
        HRESULT,
        'UniqueTable',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propput'],
        HRESULT,
        'UniqueTable',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propget'],
        HRESULT,
        'ResyncCommand',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propput'],
        HRESULT,
        'ResyncCommand',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propget'],
        HRESULT,
        'MaxRecButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propput'],
        HRESULT,
        'MaxRecButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2147), 'propget'],
        HRESULT,
        'NewRecord',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD([dispid(2145)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2085), 'hidden', 'propget'],
        HRESULT,
        'Dynaset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2086), 'propget'],
        HRESULT,
        'RecordsetClone',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(2088), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2092), 'hidden', 'propget'],
        HRESULT,
        'ConnectControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD([dispid(2017)], HRESULT, 'Recalc'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(-550)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(2020)], HRESULT, 'Repaint'),
    COMMETHOD(
        [dispid(2021)],
        HRESULT,
        'GoToPage',
        (['in'], c_int, 'PageNumber'),
        (['in', 'optional'], c_int, 'Right', 0),
        (['in', 'optional'], c_int, 'Down', 0)
    ),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(387), 'propget'],
        HRESULT,
        'SubdatasheetHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(387), 'propput'],
        HRESULT,
        'SubdatasheetHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propget'],
        HRESULT,
        'SubdatasheetExpanded',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propput'],
        HRESULT,
        'SubdatasheetExpanded',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
]

################################################################
# code template for _Form implementation
# class _Form_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFilters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewsAllowed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEdits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDeletions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowAdditions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataEntry = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowUpdating = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordsetType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSelectors = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NavigationButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DividingLines = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoCenter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PopUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Modal = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlBox = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinMaxButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CloseButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WhatsThisButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cycle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesBehavior = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetCellsEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowGrid = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetBackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FrozenColumns = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bookmark = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularFamily = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OpenArgs = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ConnectSynch = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDelete = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnload = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyPreview = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimer = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TimerInterval = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDesignChanges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilterByForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecords = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UniqueTable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ResyncCommand = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecButton = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def NewRecord(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Dynaset(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def RecordsetClone(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ConnectControl(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recalc(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Refresh(self):
#         '-no docstring-'
#         #return 
#
#     def Repaint(self):
#         '-no docstring-'
#         #return 
#
#     def GoToPage(self, PageNumber, Right, Down):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetExpanded = property(_get, _set, doc = _set.__doc__)
#
SYSCMD_UPDATEMETER = 2  # Constant c_short
acPropCatNA = 0  # Constant c_short
vbKeyL = 76  # Constant c_short
SYSCMD_REMOVEMETER = 3  # Constant c_short
acPropCatLayout = 1  # Constant c_short
SYSCMD_SETSTATUS = 4  # Constant c_short
vbKeyM = 77  # Constant c_short


class EmptyCell(CoClass):
    _reg_clsid_ = GUID('{3B06E986-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _EmptyCell(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E987-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class DispEmptyCellEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E988-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []


EmptyCell._com_interfaces_ = [_EmptyCell]
EmptyCell._outgoing_interfaces_ = [DispEmptyCellEvents]
acPropCatData = 2  # Constant c_short
SYSCMD_CLEARSTATUS = 5  # Constant c_short


class Attachment(CoClass):
    _reg_clsid_ = GUID('{3B06E979-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Attachment(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E980-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnChange(self) -> hints.Incomplete: ...
        def _set_OnChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChange = hints.normal_property(_get_OnChange, _set_OnChange)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_OnAttachmentCurrent(self) -> hints.Incomplete: ...
        def _set_OnAttachmentCurrent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnAttachmentCurrent = hints.normal_property(_get_OnAttachmentCurrent, _set_OnAttachmentCurrent)
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnDirtyMacro(self) -> hints.Incomplete: ...
        def _set_OnDirtyMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirtyMacro = hints.normal_property(_get_OnDirtyMacro, _set_OnDirtyMacro)
        def _get_OnChangeMacro(self) -> hints.Incomplete: ...
        def _set_OnChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChangeMacro = hints.normal_property(_get_OnChangeMacro, _set_OnChangeMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_OnAttachmentCurrentMacro(self) -> hints.Incomplete: ...
        def _set_OnAttachmentCurrentMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnAttachmentCurrentMacro = hints.normal_property(_get_OnAttachmentCurrentMacro, _set_OnAttachmentCurrentMacro)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_DisplayAs(self) -> hints.Incomplete: ...
        def _set_DisplayAs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayAs = hints.normal_property(_get_DisplayAs, _set_DisplayAs)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def Forward(self) -> hints.Hresult: ...
        def Back(self) -> hints.Hresult: ...
        def _get_AttachmentCount(self) -> hints.Incomplete: ...
        AttachmentCount = hints.normal_property(_get_AttachmentCount)
        def _get_CurrentAttachment(self) -> hints.Incomplete: ...
        def _set_CurrentAttachment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentAttachment = hints.normal_property(_get_CurrentAttachment, _set_CurrentAttachment)
        def _get_FileName(self, var: hints.Incomplete = ...) -> hints.Incomplete: ...
        FileName = hints.named_property('FileName', _get_FileName)
        def _get_FileType(self, var: hints.Incomplete = ...) -> hints.Incomplete: ...
        FileType = hints.named_property('FileType', _get_FileType)
        def _get_FileURL(self, var: hints.Incomplete = ...) -> hints.Incomplete: ...
        FileURL = hints.named_property('FileURL', _get_FileURL)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_DefaultPicture(self) -> hints.Incomplete: ...
        def _set_DefaultPicture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultPicture = hints.normal_property(_get_DefaultPicture, _set_DefaultPicture)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_FileData(self, var: hints.Incomplete = ...) -> hints.Incomplete: ...
        FileData = hints.named_property('FileData', _get_FileData)
        def _get_PictureDisp(self, var: hints.Incomplete = ...) -> hints.Incomplete: ...
        PictureDisp = hints.named_property('PictureDisp', _get_PictureDisp)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_DefaultPictureType(self) -> hints.Incomplete: ...
        def _set_DefaultPictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultPictureType = hints.normal_property(_get_DefaultPictureType, _set_DefaultPictureType)


class DispAttachmentEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E981-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def AttachmentCurrent(self) -> hints.Incomplete: ...


Attachment._com_interfaces_ = [_Attachment]
Attachment._outgoing_interfaces_ = [DispAttachmentEvents]
acPropCatEvent = 4  # Constant c_short
vbKeyN = 78  # Constant c_short

_EmptyCell._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'hidden', 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _EmptyCell implementation
# class _EmptyCell_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
SYSCMD_RUNTIME = 6  # Constant c_short
acPropCatOther = 8  # Constant c_short
SYSCMD_ACCESSVER = 7  # Constant c_short
vbKeyO = 79  # Constant c_short
acPrompt = 0  # Constant c_short
SYSCMD_INIFILE = 8  # Constant c_short
vbKeyP = 80  # Constant c_short
SYSCMD_ACCESSDIR = 9  # Constant c_short
acSave = 1  # Constant c_short

DispEmptyCellEvents._disp_methods_ = [
]
SYSCMD_GETOBJECTSTATE = 10  # Constant c_short
acExit = 2  # Constant c_short
vbKeyQ = 81  # Constant c_short
SYSCMD_CLEARHELPTOPIC = 11  # Constant c_short
acOLEEither = 2  # Constant c_short
vbKeyR = 82  # Constant c_short


class _WebBrowserControl(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{B01D3066-84BB-44BD-B2F7-64A026BDFA8C}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_ReadyState(self) -> hints.Incomplete: ...
        ReadyState = hints.normal_property(_get_ReadyState)
        def _get_Progress(self) -> hints.Incomplete: ...
        Progress = hints.normal_property(_get_Progress)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_ScrollTop(self) -> hints.Incomplete: ...
        def _set_ScrollTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollTop = hints.normal_property(_get_ScrollTop, _set_ScrollTop)
        def _get_ScrollLeft(self) -> hints.Incomplete: ...
        def _set_ScrollLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollLeft = hints.normal_property(_get_ScrollLeft, _set_ScrollLeft)
        def _get_Transform(self) -> hints.Incomplete: ...
        def _set_Transform(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Transform = hints.normal_property(_get_Transform, _set_Transform)
        def _get_LocationURL(self) -> hints.Incomplete: ...
        LocationURL = hints.normal_property(_get_LocationURL)
        def _get_Object(self) -> hints.Incomplete: ...
        Object = hints.normal_property(_get_Object)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_OnBeforeNavigate(self) -> hints.Incomplete: ...
        def _set_OnBeforeNavigate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnBeforeNavigate = hints.normal_property(_get_OnBeforeNavigate, _set_OnBeforeNavigate)
        def _get_OnDocumentComplete(self) -> hints.Incomplete: ...
        def _set_OnDocumentComplete(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDocumentComplete = hints.normal_property(_get_OnDocumentComplete, _set_OnDocumentComplete)
        def _get_OnNavigateError(self) -> hints.Incomplete: ...
        def _set_OnNavigateError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNavigateError = hints.normal_property(_get_OnNavigateError, _set_OnNavigateError)
        def _get_OnProgressChange(self) -> hints.Incomplete: ...
        def _set_OnProgressChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnProgressChange = hints.normal_property(_get_OnProgressChange, _set_OnProgressChange)
        def _get_OnUpdated(self) -> hints.Incomplete: ...
        def _set_OnUpdated(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdated = hints.normal_property(_get_OnUpdated, _set_OnUpdated)
        def _get_OnBeforeNavigateMacro(self) -> hints.Incomplete: ...
        def _set_OnBeforeNavigateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnBeforeNavigateMacro = hints.normal_property(_get_OnBeforeNavigateMacro, _set_OnBeforeNavigateMacro)
        def _get_OnDocumentCompleteMacro(self) -> hints.Incomplete: ...
        def _set_OnDocumentCompleteMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDocumentCompleteMacro = hints.normal_property(_get_OnDocumentCompleteMacro, _set_OnDocumentCompleteMacro)
        def _get_OnNavigateErrorMacro(self) -> hints.Incomplete: ...
        def _set_OnNavigateErrorMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNavigateErrorMacro = hints.normal_property(_get_OnNavigateErrorMacro, _set_OnNavigateErrorMacro)
        def _get_OnProgressChangeMacro(self) -> hints.Incomplete: ...
        def _set_OnProgressChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnProgressChangeMacro = hints.normal_property(_get_OnProgressChangeMacro, _set_OnProgressChangeMacro)
        def _get_OnUpdatedMacro(self) -> hints.Incomplete: ...
        def _set_OnUpdatedMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdatedMacro = hints.normal_property(_get_OnUpdatedMacro, _set_OnUpdatedMacro)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)


_WebBrowserControl._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2537), 'propget'],
        HRESULT,
        'ReadyState',
        (['out', 'retval'], POINTER(AcWebBrowserState), 'pRet')
    ),
    COMMETHOD(
        [dispid(2538), 'propget'],
        HRESULT,
        'Progress',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2539), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(AcWebBrowserScrollBars), 'pRet')
    ),
    COMMETHOD(
        [dispid(2539), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], AcWebBrowserScrollBars, 'pRet')
    ),
    COMMETHOD(
        [dispid(2540), 'propget'],
        HRESULT,
        'ScrollTop',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2540), 'propput'],
        HRESULT,
        'ScrollTop',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2541), 'propget'],
        HRESULT,
        'ScrollLeft',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2541), 'propput'],
        HRESULT,
        'ScrollLeft',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(605), 'propget'],
        HRESULT,
        'Transform',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(605), 'propput'],
        HRESULT,
        'Transform',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2536), 'propget'],
        HRESULT,
        'LocationURL',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2104), 'propget'],
        HRESULT,
        'Object',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(606), 'propget'],
        HRESULT,
        'OnBeforeNavigate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(606), 'propput'],
        HRESULT,
        'OnBeforeNavigate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(608), 'propget'],
        HRESULT,
        'OnDocumentComplete',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(608), 'propput'],
        HRESULT,
        'OnDocumentComplete',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(610), 'propget'],
        HRESULT,
        'OnNavigateError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(610), 'propput'],
        HRESULT,
        'OnNavigateError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(612), 'propget'],
        HRESULT,
        'OnProgressChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(612), 'propput'],
        HRESULT,
        'OnProgressChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propget'],
        HRESULT,
        'OnUpdated',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propput'],
        HRESULT,
        'OnUpdated',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(607), 'hidden', 'propget'],
        HRESULT,
        'OnBeforeNavigateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(607), 'hidden', 'propput'],
        HRESULT,
        'OnBeforeNavigateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(609), 'hidden', 'propget'],
        HRESULT,
        'OnDocumentCompleteMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(609), 'hidden', 'propput'],
        HRESULT,
        'OnDocumentCompleteMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(611), 'hidden', 'propget'],
        HRESULT,
        'OnNavigateErrorMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(611), 'hidden', 'propput'],
        HRESULT,
        'OnNavigateErrorMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(613), 'hidden', 'propget'],
        HRESULT,
        'OnProgressChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(613), 'hidden', 'propput'],
        HRESULT,
        'OnProgressChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propget'],
        HRESULT,
        'OnUpdatedMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propput'],
        HRESULT,
        'OnUpdatedMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
]

################################################################
# code template for _WebBrowserControl implementation
# class _WebBrowserControl_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ReadyState(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Progress(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Transform = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LocationURL(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Object(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnBeforeNavigate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDocumentComplete = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNavigateError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnProgressChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdated = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnBeforeNavigateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDocumentCompleteMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNavigateErrorMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnProgressChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdatedMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
OBJSTATE_OPEN = 1  # Constant c_short
acOLECreateEmbed = 0  # Constant c_short


class _DependencyInfo(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D05819C6-8859-418B-A82F-18B6CB743C8E}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Dependants(self) -> '_DependencyObjects': ...
        Dependants = hints.normal_property(_get_Dependants)
        def _get_Dependencies(self) -> '_DependencyObjects': ...
        Dependencies = hints.normal_property(_get_Dependencies)
        def _get_OutOfDateObjects(self) -> '_DependencyObjects': ...
        OutOfDateObjects = hints.normal_property(_get_OutOfDateObjects)
        def _get_InsufficientPermissions(self) -> '_DependencyObjects': ...
        InsufficientPermissions = hints.normal_property(_get_InsufficientPermissions)
        def _get_UnsupportedObjects(self) -> '_DependencyObjects': ...
        UnsupportedObjects = hints.normal_property(_get_UnsupportedObjects)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class _DependencyObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{79F41340-18C4-4AA1-86EE-5CDE9D2CE600}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'AccessObject': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_DependencyInfo._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2436), 'propget'],
        HRESULT,
        'Dependants',
        (['out', 'retval'], POINTER(POINTER(_DependencyObjects)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2437), 'propget'],
        HRESULT,
        'Dependencies',
        (['out', 'retval'], POINTER(POINTER(_DependencyObjects)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2438), 'propget'],
        HRESULT,
        'OutOfDateObjects',
        (['out', 'retval'], POINTER(POINTER(_DependencyObjects)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2439), 'propget'],
        HRESULT,
        'InsufficientPermissions',
        (['out', 'retval'], POINTER(POINTER(_DependencyObjects)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2440), 'propget'],
        HRESULT,
        'UnsupportedObjects',
        (['out', 'retval'], POINTER(POINTER(_DependencyObjects)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _DependencyInfo implementation
# class _DependencyInfo_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Dependants(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Dependencies(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OutOfDateObjects(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def InsufficientPermissions(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def UnsupportedObjects(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
OBJSTATE_NEW = 4  # Constant c_short
vbKeyS = 83  # Constant c_short


class _CommandButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4345-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


_CommandButtonEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _CommandButtonEvents implementation
# class _CommandButtonEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
acOLECreateNew = 0  # Constant c_short
OBJSTATE_DIRTY = 2  # Constant c_short
acOLECreateLink = 1  # Constant c_short
vbKeyT = 84  # Constant c_short
A_DELETE_V2 = 7  # Constant c_short


class Modules(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9DD0AF42-6E28-11CF-9008-00AA0042B7CE}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'Module': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Modules._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Modules implementation
# class Modules_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acOLECreateFromFile = 1  # Constant c_short


class SharedResources(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{78B78575-C7B7-4179-824A-95ADBF5423E7}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'SharedResource': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class SharedResource(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4DCF0AC2-53CC-45E5-B417-01F3DDD387E5}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_Type(self) -> hints.Incomplete: ...
        Type = hints.normal_property(_get_Type)
        def Delete(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


SharedResources._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(POINTER(SharedResource)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for SharedResources implementation
# class SharedResources_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class DispWebBrowserControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EACB9075-68F8-4E3B-B865-E1CE6BE0447C}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeNavigate2(self, pDisp: hints.Incomplete, URL: hints.Incomplete, flags: hints.Incomplete, TargetFrameName: hints.Incomplete, PostData: hints.Incomplete, Headers: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Incomplete: ...
        def DocumentComplete(self, pDisp: hints.Incomplete, URL: hints.Incomplete) -> hints.Incomplete: ...
        def ProgressChange(self, Progress: hints.Incomplete, ProgressMax: hints.Incomplete) -> hints.Incomplete: ...
        def NavigateError(self, pDisp: hints.Incomplete, URL: hints.Incomplete, TargetFrameName: hints.Incomplete, StatusCode: hints.Incomplete, Cancel: hints.Incomplete) -> hints.Incomplete: ...


DispWebBrowserControlEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2076)],
        None,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2524)],
        None,
        'BeforeNavigate2',
        (['in'], POINTER(IDispatch), 'pDisp'),
        (['in'], POINTER(VARIANT), 'URL'),
        (['in'], POINTER(VARIANT), 'flags'),
        (['in'], POINTER(VARIANT), 'TargetFrameName'),
        (['in'], POINTER(VARIANT), 'PostData'),
        (['in'], POINTER(VARIANT), 'Headers'),
        (['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2528)],
        None,
        'DocumentComplete',
        (['in'], POINTER(IDispatch), 'pDisp'),
        (['in'], POINTER(VARIANT), 'URL')
    ),
    DISPMETHOD(
        [dispid(2515)],
        None,
        'ProgressChange',
        (['in'], c_int, 'Progress'),
        (['in'], c_int, 'ProgressMax')
    ),
    DISPMETHOD(
        [dispid(2510)],
        None,
        'NavigateError',
        (['in'], POINTER(IDispatch), 'pDisp'),
        (['in'], POINTER(VARIANT), 'URL'),
        (['in'], POINTER(VARIANT), 'TargetFrameName'),
        (['in'], POINTER(VARIANT), 'StatusCode'),
        (['in', 'out'], POINTER(VARIANT_BOOL), 'Cancel')
    ),
]
A_SELECTRECORD_V2 = 8  # Constant c_short
vbKeyU = 85  # Constant c_short
acOLECopy = 4  # Constant c_short
A_SELECTALLRECORDS_V2 = 9  # Constant c_short
acOLEPaste = 5  # Constant c_short
vbKeyV = 86  # Constant c_short
A_TOOLBAR_YES = 0  # Constant c_short
acOLEUpdate = 6  # Constant c_short
A_TOOLBAR_WHERE_APPROP = 1  # Constant c_short
vbKeyW = 87  # Constant c_short
acOLEActivate = 7  # Constant c_short


class Image(CoClass):
    _reg_clsid_ = GUID('{3B06E94D-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Image(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E94E-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_SizeMode(self) -> hints.Incomplete: ...
        def _set_SizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SizeMode = hints.normal_property(_get_SizeMode, _set_SizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_HyperlinkAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkAddress = hints.normal_property(_get_HyperlinkAddress, _set_HyperlinkAddress)
        def _get_HyperlinkSubAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkSubAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkSubAddress = hints.normal_property(_get_HyperlinkSubAddress, _set_HyperlinkSubAddress)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ImageHeight(self) -> hints.Incomplete: ...
        def _set_ImageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ImageHeight = hints.normal_property(_get_ImageHeight, _set_ImageHeight)
        def _get_ImageWidth(self) -> hints.Incomplete: ...
        def _set_ImageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ImageWidth = hints.normal_property(_get_ImageWidth, _set_ImageWidth)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class _ImageEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4344-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


class DispImageEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705272-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


Image._com_interfaces_ = [_Image]
Image._outgoing_interfaces_ = [DispImageEvents, _ImageEvents]
A_TOOLBAR_NO = 2  # Constant c_short
acOLEClose = 9  # Constant c_short
vbKeyX = 88  # Constant c_short
DELETE_OK = 0  # Constant c_short

DispImageEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class _CommandButton(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E950-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_Transparent(self) -> hints.Incomplete: ...
        def _set_Transparent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Transparent = hints.normal_property(_get_Transparent, _set_Transparent)
        def _get_Default(self) -> hints.Incomplete: ...
        def _set_Default(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Default = hints.normal_property(_get_Default, _set_Default)
        def _get_Cancel(self) -> hints.Incomplete: ...
        def _set_Cancel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cancel = hints.normal_property(_get_Cancel, _set_Cancel)
        def _get_AutoRepeat(self) -> hints.Incomplete: ...
        def _set_AutoRepeat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoRepeat = hints.normal_property(_get_AutoRepeat, _set_AutoRepeat)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_OnPush(self) -> hints.Incomplete: ...
        def _set_OnPush(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPush = hints.normal_property(_get_OnPush, _set_OnPush)
        def _get_HyperlinkAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkAddress = hints.normal_property(_get_HyperlinkAddress, _set_HyperlinkAddress)
        def _get_HyperlinkSubAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkSubAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkSubAddress = hints.normal_property(_get_HyperlinkSubAddress, _set_HyperlinkSubAddress)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_CursorOnHover(self) -> hints.Incomplete: ...
        def _set_CursorOnHover(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CursorOnHover = hints.normal_property(_get_CursorOnHover, _set_CursorOnHover)
        def _get_PictureCaptionArrangement(self) -> hints.Incomplete: ...
        def _set_PictureCaptionArrangement(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureCaptionArrangement = hints.normal_property(_get_PictureCaptionArrangement, _set_PictureCaptionArrangement)
        def _get_Alignment(self) -> hints.Incomplete: ...
        def _set_Alignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Alignment = hints.normal_property(_get_Alignment, _set_Alignment)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_HoverColor(self) -> hints.Incomplete: ...
        def _set_HoverColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverColor = hints.normal_property(_get_HoverColor, _set_HoverColor)
        def _get_HoverThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverThemeColorIndex = hints.normal_property(_get_HoverThemeColorIndex, _set_HoverThemeColorIndex)
        def _get_HoverTint(self) -> hints.Incomplete: ...
        def _set_HoverTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverTint = hints.normal_property(_get_HoverTint, _set_HoverTint)
        def _get_HoverShade(self) -> hints.Incomplete: ...
        def _set_HoverShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverShade = hints.normal_property(_get_HoverShade, _set_HoverShade)
        def _get_HoverForeColor(self) -> hints.Incomplete: ...
        def _set_HoverForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeColor = hints.normal_property(_get_HoverForeColor, _set_HoverForeColor)
        def _get_HoverForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeThemeColorIndex = hints.normal_property(_get_HoverForeThemeColorIndex, _set_HoverForeThemeColorIndex)
        def _get_HoverForeTint(self) -> hints.Incomplete: ...
        def _set_HoverForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeTint = hints.normal_property(_get_HoverForeTint, _set_HoverForeTint)
        def _get_HoverForeShade(self) -> hints.Incomplete: ...
        def _set_HoverForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeShade = hints.normal_property(_get_HoverForeShade, _set_HoverForeShade)
        def _get_PressedColor(self) -> hints.Incomplete: ...
        def _set_PressedColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedColor = hints.normal_property(_get_PressedColor, _set_PressedColor)
        def _get_PressedThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedThemeColorIndex = hints.normal_property(_get_PressedThemeColorIndex, _set_PressedThemeColorIndex)
        def _get_PressedTint(self) -> hints.Incomplete: ...
        def _set_PressedTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedTint = hints.normal_property(_get_PressedTint, _set_PressedTint)
        def _get_PressedShade(self) -> hints.Incomplete: ...
        def _set_PressedShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedShade = hints.normal_property(_get_PressedShade, _set_PressedShade)
        def _get_PressedForeColor(self) -> hints.Incomplete: ...
        def _set_PressedForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeColor = hints.normal_property(_get_PressedForeColor, _set_PressedForeColor)
        def _get_PressedForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeThemeColorIndex = hints.normal_property(_get_PressedForeThemeColorIndex, _set_PressedForeThemeColorIndex)
        def _get_PressedForeTint(self) -> hints.Incomplete: ...
        def _set_PressedForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeTint = hints.normal_property(_get_PressedForeTint, _set_PressedForeTint)
        def _get_PressedForeShade(self) -> hints.Incomplete: ...
        def _set_PressedForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeShade = hints.normal_property(_get_PressedForeShade, _set_PressedForeShade)
        def _get_UseTheme(self) -> hints.Incomplete: ...
        def _set_UseTheme(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseTheme = hints.normal_property(_get_UseTheme, _set_UseTheme)
        def _get_Shape(self) -> hints.Incomplete: ...
        def _set_Shape(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shape = hints.normal_property(_get_Shape, _set_Shape)
        def _get_Bevel(self) -> hints.Incomplete: ...
        def _set_Bevel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bevel = hints.normal_property(_get_Bevel, _set_Bevel)
        def _get_Glow(self) -> hints.Incomplete: ...
        def _set_Glow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Glow = hints.normal_property(_get_Glow, _set_Glow)
        def _get_Shadow(self) -> hints.Incomplete: ...
        def _set_Shadow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shadow = hints.normal_property(_get_Shadow, _set_Shadow)
        def _get_SoftEdges(self) -> hints.Incomplete: ...
        def _set_SoftEdges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SoftEdges = hints.normal_property(_get_SoftEdges, _set_SoftEdges)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_QuickStyle(self) -> hints.Incomplete: ...
        def _set_QuickStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyle = hints.normal_property(_get_QuickStyle, _set_QuickStyle)
        def _get_QuickStyleMask(self) -> hints.Incomplete: ...
        def _set_QuickStyleMask(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyleMask = hints.normal_property(_get_QuickStyleMask, _set_QuickStyleMask)
        def _get_Gradient(self) -> hints.Incomplete: ...
        def _set_Gradient(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Gradient = hints.normal_property(_get_Gradient, _set_Gradient)



_CommandButton._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(46), 'propget'],
        HRESULT,
        'Transparent',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(46), 'propput'],
        HRESULT,
        'Transparent',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(220), 'propget'],
        HRESULT,
        'Default',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(220), 'propput'],
        HRESULT,
        'Default',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(221), 'propget'],
        HRESULT,
        'Cancel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(221), 'propput'],
        HRESULT,
        'Cancel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(5), 'propget'],
        HRESULT,
        'AutoRepeat',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(5), 'propput'],
        HRESULT,
        'AutoRepeat',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(155), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnPush',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(155), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnPush',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propget'],
        HRESULT,
        'HyperlinkAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propput'],
        HRESULT,
        'HyperlinkAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propget'],
        HRESULT,
        'HyperlinkSubAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propput'],
        HRESULT,
        'HyperlinkSubAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(584), 'propget'],
        HRESULT,
        'CursorOnHover',
        (['out', 'retval'], POINTER(AcCursorOnHover), 'pRet')
    ),
    COMMETHOD(
        [dispid(584), 'propput'],
        HRESULT,
        'CursorOnHover',
        (['in'], AcCursorOnHover, 'pRet')
    ),
    COMMETHOD(
        [dispid(593), 'propget'],
        HRESULT,
        'PictureCaptionArrangement',
        (['out', 'retval'], POINTER(AcPictureCaptionArrangement), 'pRet')
    ),
    COMMETHOD(
        [dispid(593), 'propput'],
        HRESULT,
        'PictureCaptionArrangement',
        (['in'], AcPictureCaptionArrangement, 'pRet')
    ),
    COMMETHOD(
        [dispid(594), 'propget'],
        HRESULT,
        'Alignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(594), 'propput'],
        HRESULT,
        'Alignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propget'],
        HRESULT,
        'HoverColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propput'],
        HRESULT,
        'HoverColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propget'],
        HRESULT,
        'HoverThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propput'],
        HRESULT,
        'HoverThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propget'],
        HRESULT,
        'HoverTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propput'],
        HRESULT,
        'HoverTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propget'],
        HRESULT,
        'HoverShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propput'],
        HRESULT,
        'HoverShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propget'],
        HRESULT,
        'HoverForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propput'],
        HRESULT,
        'HoverForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propget'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propput'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propget'],
        HRESULT,
        'HoverForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propput'],
        HRESULT,
        'HoverForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propget'],
        HRESULT,
        'HoverForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propput'],
        HRESULT,
        'HoverForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propget'],
        HRESULT,
        'PressedColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propput'],
        HRESULT,
        'PressedColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propget'],
        HRESULT,
        'PressedThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propput'],
        HRESULT,
        'PressedThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propget'],
        HRESULT,
        'PressedTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propput'],
        HRESULT,
        'PressedTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propget'],
        HRESULT,
        'PressedShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propput'],
        HRESULT,
        'PressedShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propget'],
        HRESULT,
        'PressedForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propput'],
        HRESULT,
        'PressedForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propget'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propput'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propget'],
        HRESULT,
        'PressedForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propput'],
        HRESULT,
        'PressedForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propget'],
        HRESULT,
        'PressedForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propput'],
        HRESULT,
        'PressedForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propget'],
        HRESULT,
        'UseTheme',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propput'],
        HRESULT,
        'UseTheme',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propput'],
        HRESULT,
        'Shape',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propget'],
        HRESULT,
        'Bevel',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propput'],
        HRESULT,
        'Bevel',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propget'],
        HRESULT,
        'Glow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propput'],
        HRESULT,
        'Glow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propget'],
        HRESULT,
        'Shadow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propput'],
        HRESULT,
        'Shadow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propget'],
        HRESULT,
        'SoftEdges',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propput'],
        HRESULT,
        'SoftEdges',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propget'],
        HRESULT,
        'QuickStyle',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propput'],
        HRESULT,
        'QuickStyle',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propget'],
        HRESULT,
        'QuickStyleMask',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propput'],
        HRESULT,
        'QuickStyleMask',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propget'],
        HRESULT,
        'Gradient',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propput'],
        HRESULT,
        'Gradient',
        (['in'], c_int, 'pRet')
    ),
]

################################################################
# code template for _CommandButton implementation
# class _CommandButton_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Transparent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Default = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cancel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoRepeat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPush = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkSubAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CursorOnHover = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureCaptionArrangement = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Alignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseTheme = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shape = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bevel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Glow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shadow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SoftEdges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyleMask = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Gradient = property(_get, _set, doc = _set.__doc__)
#
acOLEDelete = 10  # Constant c_short
DELETE_CANCEL = 1  # Constant c_short
vbKeyY = 89  # Constant c_short
acOLEInsertObjDlg = 14  # Constant c_short


class AccessObject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{ABE316B1-3FF6-11D1-98BD-006008197D41}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get__Name(self) -> hints.Incomplete: ...
        _Name = hints.normal_property(_get__Name)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Type(self) -> hints.Incomplete: ...
        Type = hints.normal_property(_get_Type)
        def _get_Attributes(self) -> hints.Incomplete: ...
        Attributes = hints.normal_property(_get_Attributes)
        def _get_Properties(self) -> 'AccessObjectProperties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_IsLoaded(self) -> hints.Incomplete: ...
        IsLoaded = hints.normal_property(_get_IsLoaded)
        def _get_FullName(self) -> hints.Incomplete: ...
        def _set_FullName(self, pbstrFullName: hints.Incomplete) -> hints.Hresult: ...
        FullName = hints.normal_property(_get_FullName, _set_FullName)
        def _get_DateCreated(self) -> hints.Incomplete: ...
        DateCreated = hints.normal_property(_get_DateCreated)
        def _get_DateModified(self) -> hints.Incomplete: ...
        DateModified = hints.normal_property(_get_DateModified)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        CurrentView = hints.normal_property(_get_CurrentView)
        def IsDependentUpon(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete) -> hints.Incomplete: ...
        def GetDependencyInfo(self) -> '_DependencyInfo': ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_IsWeb(self) -> hints.Incomplete: ...
        IsWeb = hints.normal_property(_get_IsWeb)


_DependencyObjects._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(AccessObject)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _DependencyObjects implementation
# class _DependencyObjects_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _OptionButtonInOption(CoClass):
    _reg_clsid_ = GUID('{BC9E435A-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _OptionButton(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E952-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_OptionValue(self) -> hints.Incomplete: ...
        def _set_OptionValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OptionValue = hints.normal_property(_get_OptionValue, _set_OptionValue)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TripleState(self) -> hints.Incomplete: ...
        def _set_TripleState(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TripleState = hints.normal_property(_get_TripleState, _set_TripleState)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class _OptionButtonInOptionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E435B-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


class DispOptionButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705268-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


_OptionButtonInOption._com_interfaces_ = [_OptionButton]
_OptionButtonInOption._outgoing_interfaces_ = [DispOptionButtonEvents, _OptionButtonInOptionEvents]
DELETE_USER_CANCEL = 2  # Constant c_short
acOLEPasteSpecialDlg = 15  # Constant c_short
vbKeyZ = 90  # Constant c_short
DB_SEC_FRMRPT_READDEF = 4  # Constant c_int
acOLEFetchVerbs = 17  # Constant c_short
DB_SEC_FRMRPT_WRITEDEF = 65548  # Constant c_int
vbKey0 = 48  # Constant c_short
acOLEDisplayContent = 0  # Constant c_short


class _CheckBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4347-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


_CheckBoxEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _CheckBoxEvents implementation
# class _CheckBoxEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
DB_SEC_FRMRPT_EXECUTE = 256  # Constant c_int


class Library(object):
    """Microsoft Access 16.0 Object Library"""
    name = 'Access'
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


acOLEDisplayIcon = 1  # Constant c_short
vbKey1 = 49  # Constant c_short
DB_SEC_MAC_READDEF = 10  # Constant c_int


class _Checkbox(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E954-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_OptionValue(self) -> hints.Incomplete: ...
        def _set_OptionValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OptionValue = hints.normal_property(_get_OptionValue, _set_OptionValue)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TripleState(self) -> hints.Incomplete: ...
        def _set_TripleState(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TripleState = hints.normal_property(_get_TripleState, _set_TripleState)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


_Checkbox._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propget'],
        HRESULT,
        'OptionValue',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propput'],
        HRESULT,
        'OptionValue',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propget'],
        HRESULT,
        'TripleState',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propput'],
        HRESULT,
        'TripleState',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Checkbox implementation
# class _Checkbox_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OptionValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TripleState = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
acOLELinked = 0  # Constant c_short


class _PageHdrFtrInReport(CoClass):
    _reg_clsid_ = GUID('{7AD9E906-BAF8-11CE-A68A-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _PageHdrFtrInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{7AD9E905-BAF8-11CE-A68A-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Format(self, FormatCount: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Print(self, PrintCount: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


class DispPageHdrFtrInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705280-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Format(self, FormatCount: hints.Incomplete) -> hints.Incomplete: ...
        def Print(self, PrintCount: hints.Incomplete) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def Paint(self) -> hints.Incomplete: ...


_PageHdrFtrInReport._com_interfaces_ = [_Section]
_PageHdrFtrInReport._outgoing_interfaces_ = [DispPageHdrFtrInReportEvents, _PageHdrFtrInReportEvents]
DB_SEC_MAC_WRITEDEF = 65542  # Constant c_int
vbKey2 = 50  # Constant c_short
acOLEEmbedded = 1  # Constant c_short
DB_SEC_MAC_EXECUTE = 8  # Constant c_int

SharedResource._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2095), 'propget'],
        HRESULT,
        'Type',
        (['out', 'retval'], POINTER(AcResourceType), 'pResType')
    ),
    COMMETHOD([dispid(2063)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for SharedResource implementation
# class SharedResource_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Type(self):
#         '-no docstring-'
#         #return pResType
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class SubForm(CoClass):
    _reg_clsid_ = GUID('{3B06E963-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _SubForm(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E964-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_SourceObject(self) -> hints.Incomplete: ...
        def _set_SourceObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceObject = hints.normal_property(_get_SourceObject, _set_SourceObject)
        def _get_LinkChildFields(self) -> hints.Incomplete: ...
        def _set_LinkChildFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkChildFields = hints.normal_property(_get_LinkChildFields, _set_LinkChildFields)
        def _get_LinkMasterFields(self) -> hints.Incomplete: ...
        def _set_LinkMasterFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkMasterFields = hints.normal_property(_get_LinkMasterFields, _set_LinkMasterFields)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_CanGrow(self) -> hints.Incomplete: ...
        def _set_CanGrow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanGrow = hints.normal_property(_get_CanGrow, _set_CanGrow)
        def _get_CanShrink(self) -> hints.Incomplete: ...
        def _set_CanShrink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanShrink = hints.normal_property(_get_CanShrink, _set_CanShrink)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_FilterOnEmptyMaster(self) -> hints.Incomplete: ...
        def _set_FilterOnEmptyMaster(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOnEmptyMaster = hints.normal_property(_get_FilterOnEmptyMaster, _set_FilterOnEmptyMaster)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class _SubFormEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4350-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...


class DispSubFormEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705277-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...


SubForm._com_interfaces_ = [_SubForm]
SubForm._outgoing_interfaces_ = [DispSubFormEvents, _SubFormEvents]
acOLENone = 3  # Constant c_short
vbKey3 = 51  # Constant c_short
DB_SEC_MOD_READDEF = 2  # Constant c_int


class _SubReport(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E966-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class Report(CoClass):
    _reg_clsid_ = GUID('{FF240263-AF0A-432D-A544-A721E75738F8}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Report3(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B0E35B78-55B0-47FB-8951-CA616F25CEAF}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_PageHeader(self) -> hints.Incomplete: ...
        def _set_PageHeader(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageHeader = hints.normal_property(_get_PageHeader, _set_PageHeader)
        def _get_PageFooter(self) -> hints.Incomplete: ...
        def _set_PageFooter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageFooter = hints.normal_property(_get_PageFooter, _set_PageFooter)
        def _get_DateGrouping(self) -> hints.Incomplete: ...
        def _set_DateGrouping(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DateGrouping = hints.normal_property(_get_DateGrouping, _set_DateGrouping)
        def _get_GrpKeepTogether(self) -> hints.Incomplete: ...
        def _set_GrpKeepTogether(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GrpKeepTogether = hints.normal_property(_get_GrpKeepTogether, _set_GrpKeepTogether)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_PicturePages(self) -> hints.Incomplete: ...
        def _set_PicturePages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePages = hints.normal_property(_get_PicturePages, _set_PicturePages)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_HasData(self) -> hints.Incomplete: ...
        def _set_HasData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasData = hints.normal_property(_get_HasData, _set_HasData)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_PrintSection(self) -> hints.Incomplete: ...
        def _set_PrintSection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintSection = hints.normal_property(_get_PrintSection, _set_PrintSection)
        def _get_NextRecord(self) -> hints.Incomplete: ...
        def _set_NextRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NextRecord = hints.normal_property(_get_NextRecord, _set_NextRecord)
        def _get_MoveLayout(self) -> hints.Incomplete: ...
        def _set_MoveLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MoveLayout = hints.normal_property(_get_MoveLayout, _set_MoveLayout)
        def _get_FormatCount(self) -> hints.Incomplete: ...
        def _set_FormatCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormatCount = hints.normal_property(_get_FormatCount, _set_FormatCount)
        def _get_PrintCount(self) -> hints.Incomplete: ...
        def _set_PrintCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintCount = hints.normal_property(_get_PrintCount, _set_PrintCount)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_CurrentX(self) -> hints.Incomplete: ...
        def _set_CurrentX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentX = hints.normal_property(_get_CurrentX, _set_CurrentX)
        def _get_CurrentY(self) -> hints.Incomplete: ...
        def _set_CurrentY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentY = hints.normal_property(_get_CurrentY, _set_CurrentY)
        def _get_ScaleHeight(self) -> hints.Incomplete: ...
        def _set_ScaleHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleHeight = hints.normal_property(_get_ScaleHeight, _set_ScaleHeight)
        def _get_ScaleLeft(self) -> hints.Incomplete: ...
        def _set_ScaleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleLeft = hints.normal_property(_get_ScaleLeft, _set_ScaleLeft)
        def _get_ScaleMode(self) -> hints.Incomplete: ...
        def _set_ScaleMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleMode = hints.normal_property(_get_ScaleMode, _set_ScaleMode)
        def _get_ScaleTop(self) -> hints.Incomplete: ...
        def _set_ScaleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleTop = hints.normal_property(_get_ScaleTop, _set_ScaleTop)
        def _get_ScaleWidth(self) -> hints.Incomplete: ...
        def _set_ScaleWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleWidth = hints.normal_property(_get_ScaleWidth, _set_ScaleWidth)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_DrawMode(self) -> hints.Incomplete: ...
        def _set_DrawMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawMode = hints.normal_property(_get_DrawMode, _set_DrawMode)
        def _get_DrawStyle(self) -> hints.Incomplete: ...
        def _set_DrawStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawStyle = hints.normal_property(_get_DrawStyle, _set_DrawStyle)
        def _get_DrawWidth(self) -> hints.Incomplete: ...
        def _set_DrawWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawWidth = hints.normal_property(_get_DrawWidth, _set_DrawWidth)
        def _get_FillColor(self) -> hints.Incomplete: ...
        def _set_FillColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillColor = hints.normal_property(_get_FillColor, _set_FillColor)
        def _get_FillStyle(self) -> hints.Incomplete: ...
        def _set_FillStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillStyle = hints.normal_property(_get_FillStyle, _set_FillStyle)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnNoData(self) -> hints.Incomplete: ...
        def _set_OnNoData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNoData = hints.normal_property(_get_OnNoData, _set_OnNoData)
        def _get_OnPage(self) -> hints.Incomplete: ...
        def _set_OnPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPage = hints.normal_property(_get_OnPage, _set_OnPage)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def Circle(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, radius: hints.Incomplete, color: hints.Incomplete, start: hints.Incomplete, end: hints.Incomplete, aspect: hints.Incomplete) -> hints.Hresult: ...
        def Line(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def PSet(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def Scale(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete) -> hints.Hresult: ...
        def TextWidth(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def TextHeight(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def Print(self, Expr: hints.Incomplete) -> hints.Hresult: ...
        def _get_SectionOld(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        SectionOld = hints.named_property('SectionOld', _get_SectionOld)
        def _get_GroupLevel(self, Index: hints.Incomplete) -> hints.Annotated['_GroupLevel', hints.FirstComItfOf['GroupLevel']]: ...
        GroupLevel = hints.named_property('GroupLevel', _get_GroupLevel)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_AutoResize(self) -> hints.Incomplete: ...
        def _set_AutoResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoResize = hints.normal_property(_get_AutoResize, _set_AutoResize)
        def _get_AutoCenter(self) -> hints.Incomplete: ...
        def _set_AutoCenter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoCenter = hints.normal_property(_get_AutoCenter, _set_AutoCenter)
        def _get_PopUp(self) -> hints.Incomplete: ...
        def _set_PopUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PopUp = hints.normal_property(_get_PopUp, _set_PopUp)
        def _get_Modal(self) -> hints.Incomplete: ...
        def _set_Modal(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Modal = hints.normal_property(_get_Modal, _set_Modal)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_ControlBox(self) -> hints.Incomplete: ...
        def _set_ControlBox(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlBox = hints.normal_property(_get_ControlBox, _set_ControlBox)
        def _get_MinMaxButtons(self) -> hints.Incomplete: ...
        def _set_MinMaxButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinMaxButtons = hints.normal_property(_get_MinMaxButtons, _set_MinMaxButtons)
        def _get_CloseButton(self) -> hints.Incomplete: ...
        def _set_CloseButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CloseButton = hints.normal_property(_get_CloseButton, _set_CloseButton)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        def _set_WindowWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowWidth = hints.normal_property(_get_WindowWidth, _set_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        def _set_WindowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowHeight = hints.normal_property(_get_WindowHeight, _set_WindowHeight)
        def _get_WindowTop(self) -> hints.Incomplete: ...
        WindowTop = hints.normal_property(_get_WindowTop)
        def _get_WindowLeft(self) -> hints.Incomplete: ...
        WindowLeft = hints.normal_property(_get_WindowLeft)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OpenArgs(self) -> hints.Incomplete: ...
        def _set_OpenArgs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OpenArgs = hints.normal_property(_get_OpenArgs, _set_OpenArgs)
        def _get_Printer(self) -> '_Printer': ...
        def _set_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        def _setref_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Printer = hints.normal_property(_get_Printer, hints.put_or_putref(_set_Printer, _setref_Printer))
        def _get_Moveable(self) -> hints.Incomplete: ...
        def _set_Moveable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Moveable = hints.normal_property(_get_Moveable, _set_Moveable)
        def _get_UseDefaultPrinter(self) -> hints.Incomplete: ...
        def _set_UseDefaultPrinter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseDefaultPrinter = hints.normal_property(_get_UseDefaultPrinter, _set_UseDefaultPrinter)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def _get_RecordSourceQualifier(self) -> hints.Incomplete: ...
        def _set_RecordSourceQualifier(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSourceQualifier = hints.normal_property(_get_RecordSourceQualifier, _set_RecordSourceQualifier)
        def _get_Shape(self) -> hints.Incomplete: ...
        Shape = hints.normal_property(_get_Shape)
        def _get_FilterOnLoad(self) -> hints.Incomplete: ...
        def _set_FilterOnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOnLoad = hints.normal_property(_get_FilterOnLoad, _set_FilterOnLoad)
        def _get_OrderByOnLoad(self) -> hints.Incomplete: ...
        def _set_OrderByOnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOnLoad = hints.normal_property(_get_OrderByOnLoad, _set_OrderByOnLoad)
        def _get_DefaultView(self) -> hints.Incomplete: ...
        def _set_DefaultView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultView = hints.normal_property(_get_DefaultView, _set_DefaultView)
        def _get_AllowReportView(self) -> hints.Incomplete: ...
        def _set_AllowReportView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowReportView = hints.normal_property(_get_AllowReportView, _set_AllowReportView)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_Cycle(self) -> hints.Incomplete: ...
        def _set_Cycle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cycle = hints.normal_property(_get_Cycle, _set_Cycle)
        def _get_AllowDesignChanges(self) -> hints.Incomplete: ...
        def _set_AllowDesignChanges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDesignChanges = hints.normal_property(_get_AllowDesignChanges, _set_AllowDesignChanges)
        def _get_OnCurrent(self) -> hints.Incomplete: ...
        def _set_OnCurrent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrent = hints.normal_property(_get_OnCurrent, _set_OnCurrent)
        def _get_KeyPreview(self) -> hints.Incomplete: ...
        def _set_KeyPreview(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyPreview = hints.normal_property(_get_KeyPreview, _set_KeyPreview)
        def _get_TimerInterval(self) -> hints.Incomplete: ...
        def _set_TimerInterval(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TimerInterval = hints.normal_property(_get_TimerInterval, _set_TimerInterval)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        def _set_CurrentView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentView = hints.normal_property(_get_CurrentView, _set_CurrentView)
        def Requery(self) -> hints.Hresult: ...
        def _get_OnOpenMacro(self) -> hints.Incomplete: ...
        def _set_OnOpenMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpenMacro = hints.normal_property(_get_OnOpenMacro, _set_OnOpenMacro)
        def _get_OnCloseMacro(self) -> hints.Incomplete: ...
        def _set_OnCloseMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCloseMacro = hints.normal_property(_get_OnCloseMacro, _set_OnCloseMacro)
        def _get_OnActivateMacro(self) -> hints.Incomplete: ...
        def _set_OnActivateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivateMacro = hints.normal_property(_get_OnActivateMacro, _set_OnActivateMacro)
        def _get_OnDeactivateMacro(self) -> hints.Incomplete: ...
        def _set_OnDeactivateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivateMacro = hints.normal_property(_get_OnDeactivateMacro, _set_OnDeactivateMacro)
        def _get_OnNoDataMacro(self) -> hints.Incomplete: ...
        def _set_OnNoDataMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNoDataMacro = hints.normal_property(_get_OnNoDataMacro, _set_OnNoDataMacro)
        def _get_OnPageMacro(self) -> hints.Incomplete: ...
        def _set_OnPageMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPageMacro = hints.normal_property(_get_OnPageMacro, _set_OnPageMacro)
        def _get_OnErrorMacro(self) -> hints.Incomplete: ...
        def _set_OnErrorMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnErrorMacro = hints.normal_property(_get_OnErrorMacro, _set_OnErrorMacro)
        def _get_OnCurrentMacro(self) -> hints.Incomplete: ...
        def _set_OnCurrentMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrentMacro = hints.normal_property(_get_OnCurrentMacro, _set_OnCurrentMacro)
        def _get_OnLoadMacro(self) -> hints.Incomplete: ...
        def _set_OnLoadMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoadMacro = hints.normal_property(_get_OnLoadMacro, _set_OnLoadMacro)
        def _get_OnResizeMacro(self) -> hints.Incomplete: ...
        def _set_OnResizeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResizeMacro = hints.normal_property(_get_OnResizeMacro, _set_OnResizeMacro)
        def _get_OnUnloadMacro(self) -> hints.Incomplete: ...
        def _set_OnUnloadMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnloadMacro = hints.normal_property(_get_OnUnloadMacro, _set_OnUnloadMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_OnFilterMacro(self) -> hints.Incomplete: ...
        def _set_OnFilterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilterMacro = hints.normal_property(_get_OnFilterMacro, _set_OnFilterMacro)
        def _get_OnApplyFilterMacro(self) -> hints.Incomplete: ...
        def _set_OnApplyFilterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilterMacro = hints.normal_property(_get_OnApplyFilterMacro, _set_OnApplyFilterMacro)
        def _get_OnTimerMacro(self) -> hints.Incomplete: ...
        def _set_OnTimerMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimerMacro = hints.normal_property(_get_OnTimerMacro, _set_OnTimerMacro)
        def _get_MouseWheelMacro(self) -> hints.Incomplete: ...
        def _set_MouseWheelMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MouseWheelMacro = hints.normal_property(_get_MouseWheelMacro, _set_MouseWheelMacro)
        def _get_ShowPageMargins(self) -> hints.Incomplete: ...
        def _set_ShowPageMargins(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowPageMargins = hints.normal_property(_get_ShowPageMargins, _set_ShowPageMargins)
        def _get_FitToPage(self) -> hints.Incomplete: ...
        def _set_FitToPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FitToPage = hints.normal_property(_get_FitToPage, _set_FitToPage)
        def _get_AllowLayoutView(self) -> hints.Incomplete: ...
        def _set_AllowLayoutView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowLayoutView = hints.normal_property(_get_AllowLayoutView, _set_AllowLayoutView)
        def _get_OnLoad(self) -> hints.Incomplete: ...
        def _set_OnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoad = hints.normal_property(_get_OnLoad, _set_OnLoad)
        def _get_OnResize(self) -> hints.Incomplete: ...
        def _set_OnResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResize = hints.normal_property(_get_OnResize, _set_OnResize)
        def _get_OnUnload(self) -> hints.Incomplete: ...
        def _set_OnUnload(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnload = hints.normal_property(_get_OnUnload, _set_OnUnload)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_OnFilter(self) -> hints.Incomplete: ...
        def _set_OnFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilter = hints.normal_property(_get_OnFilter, _set_OnFilter)
        def _get_OnApplyFilter(self) -> hints.Incomplete: ...
        def _set_OnApplyFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilter = hints.normal_property(_get_OnApplyFilter, _set_OnApplyFilter)
        def _get_OnTimer(self) -> hints.Incomplete: ...
        def _set_OnTimer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimer = hints.normal_property(_get_OnTimer, _set_OnTimer)
        def _get_MouseWheel(self) -> hints.Incomplete: ...
        def _set_MouseWheel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MouseWheel = hints.normal_property(_get_MouseWheel, _set_MouseWheel)
        def _get_DisplayOnSharePointSite(self) -> hints.Incomplete: ...
        def _set_DisplayOnSharePointSite(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayOnSharePointSite = hints.normal_property(_get_DisplayOnSharePointSite, _set_DisplayOnSharePointSite)
        def _get_Section(self, Index: hints.Incomplete) -> '_Section': ...
        Section = hints.named_property('Section', _get_Section)
        def _get_RibbonName(self) -> hints.Incomplete: ...
        def _set_RibbonName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RibbonName = hints.normal_property(_get_RibbonName, _set_RibbonName)


class _ReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4357-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Open(self) -> hints.Incomplete: ...
        def Close(self) -> hints.Hresult: ...
        def Activate(self) -> hints.Hresult: ...
        def Deactivate(self) -> hints.Hresult: ...
        def Error(self, DataErr: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def NoData(self) -> hints.Incomplete: ...
        def Page(self) -> hints.Hresult: ...


class _ReportEvents2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D7281A87-4B30-41C5-AB7B-FABF9A35442A}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Open(self) -> hints.Incomplete: ...
        def Close(self) -> hints.Incomplete: ...
        def Activate(self) -> hints.Incomplete: ...
        def Deactivate(self) -> hints.Incomplete: ...
        def Error(self, DataErr: hints.Incomplete) -> hints.Incomplete: ...
        def NoData(self) -> hints.Incomplete: ...
        def Page(self) -> hints.Incomplete: ...
        def Current(self) -> hints.Incomplete: ...
        def Load(self) -> hints.Incomplete: ...
        def Resize(self) -> hints.Incomplete: ...
        def Unload(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Timer(self) -> hints.Incomplete: ...
        def Filter(self, FilterType: hints.Incomplete) -> hints.Incomplete: ...
        def ApplyFilter(self, ApplyType: hints.Incomplete) -> hints.Incomplete: ...
        def MouseWheel(self, Page: hints.Incomplete, Count: hints.Incomplete) -> hints.Incomplete: ...


Report._com_interfaces_ = [_Report3]
Report._outgoing_interfaces_ = [_ReportEvents2, _ReportEvents]

_SubReport._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SubReport implementation
# class _SubReport_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acOLESizeClip = 0  # Constant c_short

DispSubFormEvents._disp_methods_ = [
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]
DB_SEC_MOD_WRITEDEF = 65542  # Constant c_int
vbKey4 = 52  # Constant c_short
acOLESizeStretch = 1  # Constant c_short
A_MENU_VER1X = 11  # Constant c_short
acOLESizeAutoSize = 2  # Constant c_short
vbKey5 = 53  # Constant c_short

DispPageHdrFtrInReportEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2079)],
        None,
        'Format',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FormatCount')
    ),
    DISPMETHOD(
        [dispid(2080)],
        None,
        'Print',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'PrintCount')
    ),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD([dispid(2486)], None, 'Paint'),
]
A_MENU_VER20 = 20  # Constant c_short
acOLESizeZoom = 3  # Constant c_short
A_FORMATRTF = 'Rich Text Format (*.rtf)'  # Constant STRING
vbKey6 = 54  # Constant c_short
acOLEUpdateAutomatic = 0  # Constant c_short
A_FORMATXLS = 'Microsoft Excel (*.xls)'  # Constant STRING


class BoundObjectFrame(CoClass):
    _reg_clsid_ = GUID('{3B06E957-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _BoundObjectFrame(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E958-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Object(self) -> hints.Incomplete: ...
        Object = hints.normal_property(_get_Object)
        def _get_ObjectVerbs(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ObjectVerbs = hints.named_property('ObjectVerbs', _get_ObjectVerbs)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_SizeMode(self) -> hints.Incomplete: ...
        def _set_SizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SizeMode = hints.normal_property(_get_SizeMode, _set_SizeMode)
        def _get_Class(self) -> hints.Incomplete: ...
        def _set_Class(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Class = hints.normal_property(_get_Class, _set_Class)
        def _get_SourceDoc(self) -> hints.Incomplete: ...
        def _set_SourceDoc(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceDoc = hints.normal_property(_get_SourceDoc, _set_SourceDoc)
        def _get_SourceItem(self) -> hints.Incomplete: ...
        def _set_SourceItem(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceItem = hints.normal_property(_get_SourceItem, _set_SourceItem)
        def _get_AutoActivate(self) -> hints.Incomplete: ...
        def _set_AutoActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoActivate = hints.normal_property(_get_AutoActivate, _set_AutoActivate)
        def _get_DisplayType(self) -> hints.Incomplete: ...
        def _set_DisplayType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayType = hints.normal_property(_get_DisplayType, _set_DisplayType)
        def _get_UpdateOptions(self) -> hints.Incomplete: ...
        def _set_UpdateOptions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UpdateOptions = hints.normal_property(_get_UpdateOptions, _set_UpdateOptions)
        def _get_Verb(self) -> hints.Incomplete: ...
        def _set_Verb(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Verb = hints.normal_property(_get_Verb, _set_Verb)
        def _get_OLETypeAllowed(self) -> hints.Incomplete: ...
        def _set_OLETypeAllowed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLETypeAllowed = hints.normal_property(_get_OLETypeAllowed, _set_OLETypeAllowed)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_LpOleObject(self) -> hints.Incomplete: ...
        def _set_LpOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LpOleObject = hints.normal_property(_get_LpOleObject, _set_LpOleObject)
        def _get_ObjectVerbsCount(self) -> hints.Incomplete: ...
        def _set_ObjectVerbsCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectVerbsCount = hints.normal_property(_get_ObjectVerbsCount, _set_ObjectVerbsCount)
        def _get_Action(self) -> hints.Incomplete: ...
        def _set_Action(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Action = hints.normal_property(_get_Action, _set_Action)
        def _get_Scaling(self) -> hints.Incomplete: ...
        def _set_Scaling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Scaling = hints.normal_property(_get_Scaling, _set_Scaling)
        def _get_OLEType(self) -> hints.Incomplete: ...
        def _set_OLEType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLEType = hints.normal_property(_get_OLEType, _set_OLEType)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnUpdated(self) -> hints.Incomplete: ...
        def _set_OnUpdated(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdated = hints.normal_property(_get_OnUpdated, _set_OnUpdated)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnUpdatedMacro(self) -> hints.Incomplete: ...
        def _set_OnUpdatedMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdatedMacro = hints.normal_property(_get_OnUpdatedMacro, _set_OnUpdatedMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_VarOleObject(self) -> hints.Incomplete: ...
        def _set_VarOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VarOleObject = hints.normal_property(_get_VarOleObject, _set_VarOleObject)


class _BoundObjectFrameEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4349-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


class DispBoundObjectFrameEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70526C-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


BoundObjectFrame._com_interfaces_ = [_BoundObjectFrame]
BoundObjectFrame._outgoing_interfaces_ = [DispBoundObjectFrameEvents, _BoundObjectFrameEvents]
acOLEUpdateFrozen = 1  # Constant c_short
vbKey7 = 55  # Constant c_short

_ImageEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _ImageEvents implementation
# class _ImageEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
A_FORMATTXT = 'MS-DOS Text (*.txt)'  # Constant STRING
acOLEUpdateManual = 2  # Constant c_short


class _AdditionalData(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DBC51762-A8ED-11D3-A0DD-00C04F68712B}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_Item(self, Index: hints.Incomplete) -> '_AdditionalData': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def Add(self, var: hints.Incomplete) -> '_AdditionalData': ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)


_AdditionalData._methods_ = [
    COMMETHOD(
        [dispid(20), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_AdditionalData)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'var'),
        (['out', 'retval'], POINTER(POINTER(_AdditionalData)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
]

################################################################
# code template for _AdditionalData implementation
# class _AdditionalData_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, var):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
DB_OPEN_TABLE = 1  # Constant c_int
vbKey8 = 56  # Constant c_short
acOLEActivateManual = 0  # Constant c_short
DB_OPEN_DYNASET = 2  # Constant c_int


class _TextBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4340-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Change(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...


_TextBoxEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Change'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]

################################################################
# code template for _TextBoxEvents implementation
# class _TextBoxEvents_Impl(object):
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Change(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def Dirty(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Undo(self):
#         '-no docstring-'
#         #return Cancel
#
acOLEActivateGetFocus = 1  # Constant c_short
vbKey9 = 57  # Constant c_short
DB_OPEN_SNAPSHOT = 4  # Constant c_int

DispBoundObjectFrameEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2076)],
        None,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]
acOLEActivateDoubleClick = 2  # Constant c_short
vbKeyNumpad0 = 96  # Constant c_short
DB_DENYWRITE = 1  # Constant c_int
acOLEVerbPrimary = 0  # Constant c_short
DB_DENYREAD = 2  # Constant c_int
vbKeyNumpad1 = 97  # Constant c_short

Controls._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Controls implementation
# class Controls_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acOLEVerbShow = -1  # Constant c_short
DB_READONLY = 4  # Constant c_int
vbKeyNumpad2 = 98  # Constant c_short


class _SubReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4351-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...


_SubReportEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]

################################################################
# code template for _SubReportEvents implementation
# class _SubReportEvents_Impl(object):
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
acOLEVerbOpen = -2  # Constant c_short
DB_APPENDONLY = 8  # Constant c_int
vbKeyNumpad3 = 99  # Constant c_short
acOLEVerbHide = -3  # Constant c_short
DB_INCONSISTENT = 16  # Constant c_int
vbKeyNumpad4 = 100  # Constant c_short
acOLEVerbInPlaceUIActivate = -4  # Constant c_short
DB_CONSISTENT = 32  # Constant c_int
vbKeyNumpad5 = 101  # Constant c_short
acOLEVerbInPlaceActivate = -5  # Constant c_short
DB_SQLPASSTHROUGH = 64  # Constant c_int
vbKeyNumpad6 = 102  # Constant c_short
acMenuVer1X = 11  # Constant c_short
DB_FAILONERROR = 128  # Constant c_int
vbKeyNumpad7 = 103  # Constant c_short
acMenuVer20 = 20  # Constant c_short
DB_FORWARDONLY = 256  # Constant c_int
vbKeyNumpad8 = 104  # Constant c_short
acMenuVer70 = 70  # Constant c_short
DB_OPTIONINIPATH = 1  # Constant c_int
vbKeyNumpad9 = 105  # Constant c_short
acFormBar = 0  # Constant c_short
DB_FIXEDFIELD = 1  # Constant c_int
vbKeyMultiply = 106  # Constant c_short
DB_VARIABLEFIELD = 2  # Constant c_int
acFile = 0  # Constant c_short
vbKeyAdd = 107  # Constant c_short
acEditMenu = 1  # Constant c_short
DB_AUTOINCRFIELD = 16  # Constant c_int
vbKeySeparator = 108  # Constant c_short
DB_UPDATABLEFIELD = 32  # Constant c_int
acRecordsMenu = 5  # Constant c_short
vbKeySubtract = 109  # Constant c_short
DB_DESCENDING = 1  # Constant c_int
vbKeyDecimal = 110  # Constant c_short


class DataAccessPages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{493D8A71-1DB1-11D1-98A2-006008197D41}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, var: hints.Incomplete) -> hints.Annotated['_DataAccessPage', hints.FirstComItfOf['DataAccessPage']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class DataAccessPage(CoClass):
    _reg_clsid_ = GUID('{493D8A73-1DB1-11D1-98A2-006008197D41}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _DataAccessPage(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{493D8A72-1DB1-11D1-98A2-006008197D41}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get__Name(self) -> hints.Incomplete: ...
        _Name = hints.normal_property(_get__Name)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        WindowWidth = hints.normal_property(_get_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        WindowHeight = hints.normal_property(_get_WindowHeight)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        CurrentView = hints.normal_property(_get_CurrentView)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Document(self) -> hints.Incomplete: ...
        Document = hints.normal_property(_get_Document)
        def ApplyTheme(self, ThemeName: hints.Incomplete) -> hints.Hresult: ...
        def _get_WebOptions(self) -> hints.Annotated['_WebOptions', hints.FirstComItfOf['WebOptions']]: ...
        WebOptions = hints.normal_property(_get_WebOptions)
        def _get_ConnectionString(self) -> hints.Incomplete: ...
        def _set_ConnectionString(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ConnectionString = hints.normal_property(_get_ConnectionString, _set_ConnectionString)
        def _get_FieldListConnection(self) -> hints.Incomplete: ...
        FieldListConnection = hints.normal_property(_get_FieldListConnection)
        def _get_MailEnvelope(self) -> hints.Incomplete: ...
        MailEnvelope = hints.normal_property(_get_MailEnvelope)
        def _get_CurrentSelection(self) -> hints.Incomplete: ...
        CurrentSelection = hints.normal_property(_get_CurrentSelection)
        def _get_MSODSC(self) -> hints.Incomplete: ...
        MSODSC = hints.normal_property(_get_MSODSC)
        def _get_RemovePersonalInformation(self) -> hints.Incomplete: ...
        def _set_RemovePersonalInformation(self, pf: hints.Incomplete) -> hints.Hresult: ...
        RemovePersonalInformation = hints.normal_property(_get_RemovePersonalInformation, _set_RemovePersonalInformation)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


DataAccessPage._com_interfaces_ = [_DataAccessPage]

DataAccessPages._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(POINTER(DataAccessPage)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for DataAccessPages implementation
# class DataAccessPages_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, var):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acNew = 0  # Constant c_short


class CurrentData(CoClass):
    _reg_clsid_ = GUID('{08F6C819-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _CurrentData(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9212BA73-3E79-11D1-98BD-006008197D41}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_AllTables(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllTables']]: ...
        AllTables = hints.normal_property(_get_AllTables)
        def _get_AllQueries(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllQueries']]: ...
        AllQueries = hints.normal_property(_get_AllQueries)
        def _get_AllViews(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllViews']]: ...
        AllViews = hints.normal_property(_get_AllViews)
        def _get_AllStoredProcedures(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllStoredProcedures']]: ...
        AllStoredProcedures = hints.normal_property(_get_AllStoredProcedures)
        def _get_AllDatabaseDiagrams(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllDatabaseDiagrams']]: ...
        AllDatabaseDiagrams = hints.normal_property(_get_AllDatabaseDiagrams)
        def _get_AllFunctions(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllFunctions']]: ...
        AllFunctions = hints.normal_property(_get_AllFunctions)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


CurrentData._com_interfaces_ = [_CurrentData]


class ToggleButton(CoClass):
    _reg_clsid_ = GUID('{3B06E961-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _ToggleButton(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E962-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_OptionValue(self) -> hints.Incomplete: ...
        def _set_OptionValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OptionValue = hints.normal_property(_get_OptionValue, _set_OptionValue)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TripleState(self) -> hints.Incomplete: ...
        def _set_TripleState(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TripleState = hints.normal_property(_get_TripleState, _set_TripleState)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_HoverColor(self) -> hints.Incomplete: ...
        def _set_HoverColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverColor = hints.normal_property(_get_HoverColor, _set_HoverColor)
        def _get_HoverThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverThemeColorIndex = hints.normal_property(_get_HoverThemeColorIndex, _set_HoverThemeColorIndex)
        def _get_HoverTint(self) -> hints.Incomplete: ...
        def _set_HoverTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverTint = hints.normal_property(_get_HoverTint, _set_HoverTint)
        def _get_HoverShade(self) -> hints.Incomplete: ...
        def _set_HoverShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverShade = hints.normal_property(_get_HoverShade, _set_HoverShade)
        def _get_HoverForeColor(self) -> hints.Incomplete: ...
        def _set_HoverForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeColor = hints.normal_property(_get_HoverForeColor, _set_HoverForeColor)
        def _get_HoverForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeThemeColorIndex = hints.normal_property(_get_HoverForeThemeColorIndex, _set_HoverForeThemeColorIndex)
        def _get_HoverForeTint(self) -> hints.Incomplete: ...
        def _set_HoverForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeTint = hints.normal_property(_get_HoverForeTint, _set_HoverForeTint)
        def _get_HoverForeShade(self) -> hints.Incomplete: ...
        def _set_HoverForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeShade = hints.normal_property(_get_HoverForeShade, _set_HoverForeShade)
        def _get_PressedColor(self) -> hints.Incomplete: ...
        def _set_PressedColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedColor = hints.normal_property(_get_PressedColor, _set_PressedColor)
        def _get_PressedThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedThemeColorIndex = hints.normal_property(_get_PressedThemeColorIndex, _set_PressedThemeColorIndex)
        def _get_PressedTint(self) -> hints.Incomplete: ...
        def _set_PressedTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedTint = hints.normal_property(_get_PressedTint, _set_PressedTint)
        def _get_PressedShade(self) -> hints.Incomplete: ...
        def _set_PressedShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedShade = hints.normal_property(_get_PressedShade, _set_PressedShade)
        def _get_PressedForeColor(self) -> hints.Incomplete: ...
        def _set_PressedForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeColor = hints.normal_property(_get_PressedForeColor, _set_PressedForeColor)
        def _get_PressedForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeThemeColorIndex = hints.normal_property(_get_PressedForeThemeColorIndex, _set_PressedForeThemeColorIndex)
        def _get_PressedForeTint(self) -> hints.Incomplete: ...
        def _set_PressedForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeTint = hints.normal_property(_get_PressedForeTint, _set_PressedForeTint)
        def _get_PressedForeShade(self) -> hints.Incomplete: ...
        def _set_PressedForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeShade = hints.normal_property(_get_PressedForeShade, _set_PressedForeShade)
        def _get_UseTheme(self) -> hints.Incomplete: ...
        def _set_UseTheme(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseTheme = hints.normal_property(_get_UseTheme, _set_UseTheme)
        def _get_Shape(self) -> hints.Incomplete: ...
        def _set_Shape(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shape = hints.normal_property(_get_Shape, _set_Shape)
        def _get_Bevel(self) -> hints.Incomplete: ...
        def _set_Bevel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bevel = hints.normal_property(_get_Bevel, _set_Bevel)
        def _get_Glow(self) -> hints.Incomplete: ...
        def _set_Glow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Glow = hints.normal_property(_get_Glow, _set_Glow)
        def _get_Shadow(self) -> hints.Incomplete: ...
        def _set_Shadow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shadow = hints.normal_property(_get_Shadow, _set_Shadow)
        def _get_SoftEdges(self) -> hints.Incomplete: ...
        def _set_SoftEdges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SoftEdges = hints.normal_property(_get_SoftEdges, _set_SoftEdges)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_QuickStyle(self) -> hints.Incomplete: ...
        def _set_QuickStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyle = hints.normal_property(_get_QuickStyle, _set_QuickStyle)
        def _get_QuickStyleMask(self) -> hints.Incomplete: ...
        def _set_QuickStyleMask(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyleMask = hints.normal_property(_get_QuickStyleMask, _set_QuickStyleMask)
        def _get_Gradient(self) -> hints.Incomplete: ...
        def _set_Gradient(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Gradient = hints.normal_property(_get_Gradient, _set_Gradient)


class _ToggleButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E434F-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


class DispToggleButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705266-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


ToggleButton._com_interfaces_ = [_ToggleButton]
ToggleButton._outgoing_interfaces_ = [DispToggleButtonEvents, _ToggleButtonEvents]
DB_BOOLEAN = 1  # Constant c_int
acSaveForm = 4  # Constant c_short
vbKeyDivide = 111  # Constant c_short


class SubReport(CoClass):
    _reg_clsid_ = GUID('{3B06E965-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispSubReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705278-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...


SubReport._com_interfaces_ = [_SubReport]
SubReport._outgoing_interfaces_ = [DispSubReportEvents, _SubReportEvents]
DB_BYTE = 2  # Constant c_int
acSaveFormAs = 5  # Constant c_short
vbKeyF1 = 112  # Constant c_short
DB_INTEGER = 3  # Constant c_int


class AllTables(CoClass):
    _reg_clsid_ = GUID('{08F6C81B-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class AllObjects(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DDBD4001-44D5-11D1-98C0-006008197D41}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, var: hints.Incomplete) -> 'AccessObject': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


AllTables._com_interfaces_ = [AllObjects]


class AllQueries(CoClass):
    _reg_clsid_ = GUID('{08F6C81C-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllQueries._com_interfaces_ = [AllObjects]


class AllViews(CoClass):
    _reg_clsid_ = GUID('{08F6C81E-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllViews._com_interfaces_ = [AllObjects]


class AllStoredProcedures(CoClass):
    _reg_clsid_ = GUID('{08F6C820-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllStoredProcedures._com_interfaces_ = [AllObjects]


class AllDatabaseDiagrams(CoClass):
    _reg_clsid_ = GUID('{08F6C821-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllDatabaseDiagrams._com_interfaces_ = [AllObjects]


class AllFunctions(CoClass):
    _reg_clsid_ = GUID('{08F6C822-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllFunctions._com_interfaces_ = [AllObjects]

_CurrentData._methods_ = [
    COMMETHOD(
        [dispid(2225), 'propget'],
        HRESULT,
        'AllTables',
        (['out', 'retval'], POINTER(POINTER(AllTables)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2226), 'propget'],
        HRESULT,
        'AllQueries',
        (['out', 'retval'], POINTER(POINTER(AllQueries)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2228), 'propget'],
        HRESULT,
        'AllViews',
        (['out', 'retval'], POINTER(POINTER(AllViews)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2229), 'propget'],
        HRESULT,
        'AllStoredProcedures',
        (['out', 'retval'], POINTER(POINTER(AllStoredProcedures)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2230), 'propget'],
        HRESULT,
        'AllDatabaseDiagrams',
        (['out', 'retval'], POINTER(POINTER(AllDatabaseDiagrams)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2422), 'propget'],
        HRESULT,
        'AllFunctions',
        (['out', 'retval'], POINTER(POINTER(AllFunctions)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _CurrentData implementation
# class _CurrentData_Impl(object):
#     @property
#     def AllTables(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllQueries(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllViews(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllStoredProcedures(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllDatabaseDiagrams(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllFunctions(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acSaveRecord = 4  # Constant c_short
vbKeyF2 = 113  # Constant c_short


class _ToggleButtonInOptionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E435F-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


_ToggleButtonInOptionEvents._methods_ = [
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _ToggleButtonInOptionEvents implementation
# class _ToggleButtonInOptionEvents_Impl(object):
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#


class DispPageEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705282-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


DispPageEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class DefaultWebOptions(CoClass):
    _reg_clsid_ = GUID('{416ED4F1-AB31-11D1-BF72-0060083E43CF}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _DefaultWebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{416ED4F0-AB31-11D1-BF72-0060083E43CF}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_HyperlinkColor(self) -> hints.Incomplete: ...
        def _set_HyperlinkColor(self, pl: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkColor = hints.normal_property(_get_HyperlinkColor, _set_HyperlinkColor)
        def _get_FollowedHyperlinkColor(self) -> hints.Incomplete: ...
        def _set_FollowedHyperlinkColor(self, pl: hints.Incomplete) -> hints.Hresult: ...
        FollowedHyperlinkColor = hints.normal_property(_get_FollowedHyperlinkColor, _set_FollowedHyperlinkColor)
        def _get_UnderlineHyperlinks(self) -> hints.Incomplete: ...
        def _set_UnderlineHyperlinks(self, pf: hints.Incomplete) -> hints.Hresult: ...
        UnderlineHyperlinks = hints.normal_property(_get_UnderlineHyperlinks, _set_UnderlineHyperlinks)
        def _get_OrganizeInFolder(self) -> hints.Incomplete: ...
        def _set_OrganizeInFolder(self, pf: hints.Incomplete) -> hints.Hresult: ...
        OrganizeInFolder = hints.normal_property(_get_OrganizeInFolder, _set_OrganizeInFolder)
        def _get_UseLongFileNames(self) -> hints.Incomplete: ...
        def _set_UseLongFileNames(self, pf: hints.Incomplete) -> hints.Hresult: ...
        UseLongFileNames = hints.normal_property(_get_UseLongFileNames, _set_UseLongFileNames)
        def _get_CheckIfOfficeIsHTMLEditor(self) -> hints.Incomplete: ...
        def _set_CheckIfOfficeIsHTMLEditor(self, pf: hints.Incomplete) -> hints.Hresult: ...
        CheckIfOfficeIsHTMLEditor = hints.normal_property(_get_CheckIfOfficeIsHTMLEditor, _set_CheckIfOfficeIsHTMLEditor)
        def _get_DownloadComponents(self) -> hints.Incomplete: ...
        def _set_DownloadComponents(self, pf: hints.Incomplete) -> hints.Hresult: ...
        DownloadComponents = hints.normal_property(_get_DownloadComponents, _set_DownloadComponents)
        def _get_LocationOfComponents(self) -> hints.Incomplete: ...
        def _set_LocationOfComponents(self, pstr: hints.Incomplete) -> hints.Hresult: ...
        LocationOfComponents = hints.normal_property(_get_LocationOfComponents, _set_LocationOfComponents)
        def _get_Encoding(self) -> hints.Incomplete: ...
        def _set_Encoding(self, penc: hints.Incomplete) -> hints.Hresult: ...
        Encoding = hints.normal_property(_get_Encoding, _set_Encoding)
        def _get_AlwaysSaveInDefaultEncoding(self) -> hints.Incomplete: ...
        def _set_AlwaysSaveInDefaultEncoding(self, pf: hints.Incomplete) -> hints.Hresult: ...
        AlwaysSaveInDefaultEncoding = hints.normal_property(_get_AlwaysSaveInDefaultEncoding, _set_AlwaysSaveInDefaultEncoding)
        def _get_FolderSuffix(self) -> hints.Incomplete: ...
        FolderSuffix = hints.normal_property(_get_FolderSuffix)
        def _get_TargetBrowser(self) -> hints.Incomplete: ...
        def _set_TargetBrowser(self, ptb: hints.Incomplete) -> hints.Hresult: ...
        TargetBrowser = hints.normal_property(_get_TargetBrowser, _set_TargetBrowser)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


DefaultWebOptions._com_interfaces_ = [_DefaultWebOptions]

DispToggleButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]
DB_LONG = 4  # Constant c_int
acUndo = 0  # Constant c_short
vbKeyF3 = 114  # Constant c_short
DB_CURRENCY = 5  # Constant c_int
acCut = 1  # Constant c_short
vbKeyF4 = 115  # Constant c_short

_DefaultWebOptions._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2279), 'propget'],
        HRESULT,
        'HyperlinkColor',
        (['out', 'retval'], POINTER(AcColorIndex), 'pl')
    ),
    COMMETHOD(
        [dispid(2279), 'propput'],
        HRESULT,
        'HyperlinkColor',
        (['in'], AcColorIndex, 'pl')
    ),
    COMMETHOD(
        [dispid(2280), 'propget'],
        HRESULT,
        'FollowedHyperlinkColor',
        (['out', 'retval'], POINTER(AcColorIndex), 'pl')
    ),
    COMMETHOD(
        [dispid(2280), 'propput'],
        HRESULT,
        'FollowedHyperlinkColor',
        (['in'], AcColorIndex, 'pl')
    ),
    COMMETHOD(
        [dispid(2281), 'propget'],
        HRESULT,
        'UnderlineHyperlinks',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2281), 'propput'],
        HRESULT,
        'UnderlineHyperlinks',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2284), 'hidden', 'propget'],
        HRESULT,
        'OrganizeInFolder',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2284), 'hidden', 'propput'],
        HRESULT,
        'OrganizeInFolder',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2285), 'hidden', 'propget'],
        HRESULT,
        'UseLongFileNames',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2285), 'hidden', 'propput'],
        HRESULT,
        'UseLongFileNames',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2286), 'hidden', 'propget'],
        HRESULT,
        'CheckIfOfficeIsHTMLEditor',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2286), 'hidden', 'propput'],
        HRESULT,
        'CheckIfOfficeIsHTMLEditor',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2287), 'hidden', 'propget'],
        HRESULT,
        'DownloadComponents',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2287), 'hidden', 'propput'],
        HRESULT,
        'DownloadComponents',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2288), 'hidden', 'propget'],
        HRESULT,
        'LocationOfComponents',
        (['out', 'retval'], POINTER(BSTR), 'pstr')
    ),
    COMMETHOD(
        [dispid(2288), 'hidden', 'propput'],
        HRESULT,
        'LocationOfComponents',
        (['in'], BSTR, 'pstr')
    ),
    COMMETHOD(
        [dispid(2289), 'hidden', 'propget'],
        HRESULT,
        'Encoding',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding),
            'penc',
        )
    ),
    COMMETHOD(
        [dispid(2289), 'hidden', 'propput'],
        HRESULT,
        'Encoding',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding,
            'penc',
        )
    ),
    COMMETHOD(
        [dispid(2290), 'hidden', 'propget'],
        HRESULT,
        'AlwaysSaveInDefaultEncoding',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2290), 'hidden', 'propput'],
        HRESULT,
        'AlwaysSaveInDefaultEncoding',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2307), 'hidden', 'propget'],
        HRESULT,
        'FolderSuffix',
        (['out', 'retval'], POINTER(BSTR), 'pbstr')
    ),
    COMMETHOD(
        [dispid(2331), 'hidden', 'propget'],
        HRESULT,
        'TargetBrowser',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser),
            'ptb',
        )
    ),
    COMMETHOD(
        [dispid(2331), 'hidden', 'propput'],
        HRESULT,
        'TargetBrowser',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser,
            'ptb',
        )
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _DefaultWebOptions implementation
# class _DefaultWebOptions_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pl
#     def _set(self, pl):
#         '-no docstring-'
#     HyperlinkColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pl
#     def _set(self, pl):
#         '-no docstring-'
#     FollowedHyperlinkColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     UnderlineHyperlinks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     UseLongFileNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     CheckIfOfficeIsHTMLEditor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     DownloadComponents = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pstr
#     def _set(self, pstr):
#         '-no docstring-'
#     LocationOfComponents = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return penc
#     def _set(self, penc):
#         '-no docstring-'
#     Encoding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     AlwaysSaveInDefaultEncoding = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FolderSuffix(self):
#         '-no docstring-'
#         #return pbstr
#
#     def _get(self):
#         '-no docstring-'
#         #return ptb
#     def _set(self, ptb):
#         '-no docstring-'
#     TargetBrowser = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _CustomControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4352-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...


_CustomControlEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
]

################################################################
# code template for _CustomControlEvents implementation
# class _CustomControlEvents_Impl(object):
#     def Updated(self):
#         '-no docstring-'
#         #return Code
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
DB_SINGLE = 6  # Constant c_int


class _AutoCorrect(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{063A8DE5-E2C5-44EA-A90E-6D42207D25C8}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_DisplayAutoCorrectOptions(self) -> hints.Incomplete: ...
        def _set_DisplayAutoCorrectOptions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayAutoCorrectOptions = hints.normal_property(_get_DisplayAutoCorrectOptions, _set_DisplayAutoCorrectOptions)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_AutoCorrect._methods_ = [
    COMMETHOD(
        [dispid(2433), 'propget'],
        HRESULT,
        'DisplayAutoCorrectOptions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2433), 'propput'],
        HRESULT,
        'DisplayAutoCorrectOptions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _AutoCorrect implementation
# class _AutoCorrect_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayAutoCorrectOptions = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acCopy = 2  # Constant c_short

DispSubReportEvents._disp_methods_ = [
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]
DB_DOUBLE = 7  # Constant c_int
vbKeyF5 = 116  # Constant c_short
acPaste = 3  # Constant c_short
DB_DATE = 8  # Constant c_int
vbKeyF6 = 117  # Constant c_short
acDelete = 6  # Constant c_short
DB_TEXT = 10  # Constant c_int


class AdditionalData(CoClass):
    _reg_clsid_ = GUID('{DBC51761-A8ED-11D3-A0DD-00C04F68712B}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AdditionalData._com_interfaces_ = [_AdditionalData]
V_NULL = 1  # Constant c_short
vbKeyF7 = 118  # Constant c_short
V_EMPTY = 0  # Constant c_short
DB_LONGBINARY = 11  # Constant c_int
acSelectRecord = 8  # Constant c_short
V_INTEGER = 2  # Constant c_short


class AutoCorrect(CoClass):
    _reg_clsid_ = GUID('{4375351E-7052-40DF-B4D3-6095E7F8811B}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AutoCorrect._com_interfaces_ = [_AutoCorrect]
V_SINGLE = 4  # Constant c_short
acSelectAllRecords = 9  # Constant c_short
vbKeyF8 = 119  # Constant c_short


class AllReports(CoClass):
    _reg_clsid_ = GUID('{08F6C814-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllReports._com_interfaces_ = [AllObjects]
V_LONG = 3  # Constant c_short
DB_MEMO = 12  # Constant c_int
acObject = 14  # Constant c_short
V_CURRENCY = 6  # Constant c_short
DB_RELATIONUNIQUE = 1  # Constant c_int
vbKeyF9 = 120  # Constant c_short
V_DOUBLE = 5  # Constant c_short
acRefresh = 5  # Constant c_short


class _CustomControl(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E968-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Object(self) -> hints.Incomplete: ...
        Object = hints.normal_property(_get_Object)
        def _get_ObjectVerbs(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ObjectVerbs = hints.named_property('ObjectVerbs', _get_ObjectVerbs)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_OLEClass(self) -> hints.Incomplete: ...
        def _set_OLEClass(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLEClass = hints.normal_property(_get_OLEClass, _set_OLEClass)
        def _get_Verb(self) -> hints.Incomplete: ...
        def _set_Verb(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Verb = hints.normal_property(_get_Verb, _set_Verb)
        def _get_Class(self) -> hints.Incomplete: ...
        def _set_Class(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Class = hints.normal_property(_get_Class, _set_Class)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_OleData(self) -> hints.Incomplete: ...
        def _set_OleData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OleData = hints.normal_property(_get_OleData, _set_OleData)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_LpOleObject(self) -> hints.Incomplete: ...
        def _set_LpOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LpOleObject = hints.normal_property(_get_LpOleObject, _set_LpOleObject)
        def _get_ObjectVerbsCount(self) -> hints.Incomplete: ...
        def _set_ObjectVerbsCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectVerbsCount = hints.normal_property(_get_ObjectVerbsCount, _set_ObjectVerbsCount)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnUpdated(self) -> hints.Incomplete: ...
        def _set_OnUpdated(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdated = hints.normal_property(_get_OnUpdated, _set_OnUpdated)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_Default(self) -> hints.Incomplete: ...
        def _set_Default(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Default = hints.normal_property(_get_Default, _set_Default)
        def _get_Cancel(self) -> hints.Incomplete: ...
        def _set_Cancel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cancel = hints.normal_property(_get_Cancel, _set_Cancel)
        def _get_Custom(self) -> hints.Incomplete: ...
        def _set_Custom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Custom = hints.normal_property(_get_Custom, _set_Custom)
        def _get_About(self) -> hints.Incomplete: ...
        def _set_About(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        About = hints.normal_property(_get_About, _set_About)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnUpdatedMacro(self) -> hints.Incomplete: ...
        def _set_OnUpdatedMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdatedMacro = hints.normal_property(_get_OnUpdatedMacro, _set_OnUpdatedMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_VarOleObject(self) -> hints.Incomplete: ...
        def _set_VarOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VarOleObject = hints.normal_property(_get_VarOleObject, _set_VarOleObject)


_CustomControl._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2104), 'propget'],
        HRESULT,
        'Object',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2105), 'propget'],
        HRESULT,
        'ObjectVerbs',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(76), 'propget'],
        HRESULT,
        'OLEClass',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(76), 'propput'],
        HRESULT,
        'OLEClass',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propget'],
        HRESULT,
        'Verb',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propput'],
        HRESULT,
        'Verb',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propget'],
        HRESULT,
        'Class',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propput'],
        HRESULT,
        'Class',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(171), 'hidden', 'propget'],
        HRESULT,
        'OleData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(171), 'hidden', 'propput'],
        HRESULT,
        'OleData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propget'],
        HRESULT,
        'LpOleObject',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propput'],
        HRESULT,
        'LpOleObject',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propget'],
        HRESULT,
        'ObjectVerbsCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propput'],
        HRESULT,
        'ObjectVerbsCount',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propget'],
        HRESULT,
        'OnUpdated',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propput'],
        HRESULT,
        'OnUpdated',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(220), 'propget'],
        HRESULT,
        'Default',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(220), 'propput'],
        HRESULT,
        'Default',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(221), 'propget'],
        HRESULT,
        'Cancel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(221), 'propput'],
        HRESULT,
        'Cancel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(296), 'propget'],
        HRESULT,
        'Custom',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(296), 'propput'],
        HRESULT,
        'Custom',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(297), 'propget'],
        HRESULT,
        'About',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(297), 'propput'],
        HRESULT,
        'About',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propget'],
        HRESULT,
        'OnUpdatedMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propput'],
        HRESULT,
        'OnUpdatedMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propget'],
        HRESULT,
        'VarOleObject',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propput'],
        HRESULT,
        'VarOleObject',
        (['in'], VARIANT, 'pRet')
    ),
]

################################################################
# code template for _CustomControl implementation
# class _CustomControl_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Object(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ObjectVerbs(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLEClass = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Verb = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Class = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OleData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LpOleObject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectVerbsCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdated = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Default = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cancel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Custom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     About = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdatedMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VarOleObject = property(_get, _set, doc = _set.__doc__)
#
vbKeyF10 = 121  # Constant c_short
V_STRING = 8  # Constant c_short
DB_RELATIONDONTENFORCE = 2  # Constant c_int
acObjectVerb = 0  # Constant c_short
V_DATE = 7  # Constant c_short


class DependencyInfo(CoClass):
    _reg_clsid_ = GUID('{F8C9DCB3-4063-490E-A73C-3533207CBC26}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


DependencyInfo._com_interfaces_ = [_DependencyInfo]
DB_RELATIONINHERITED = 4  # Constant c_int
acObjectUpdate = 3  # Constant c_short
vbKeyF11 = 122  # Constant c_short
DB_BINARY = 9  # Constant c_short


class Line(CoClass):
    _reg_clsid_ = GUID('{3B06E94B-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Line(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E94C-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_LineSlant(self) -> hints.Incomplete: ...
        def _set_LineSlant(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LineSlant = hints.normal_property(_get_LineSlant, _set_LineSlant)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)


class _LineEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4343-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']


class DispLineEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705279-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []


Line._com_interfaces_ = [_Line]
Line._outgoing_interfaces_ = [DispLineEvents, _LineEvents]


class SmartTags(CoClass):
    _reg_clsid_ = GUID('{73778F0A-9743-4DF3-BBFA-941712488FEA}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


SmartTags._com_interfaces_ = [_SmartTags]
DB_NONULLS = 3  # Constant c_short
DB_RELATIONUPDATECASCADE = 256  # Constant c_int
acFormatRTF = 'Rich Text Format (*.rtf)'  # Constant STRING
DB_OLE = 11  # Constant c_short
vbKeyF12 = 123  # Constant c_short


class AllMacros(CoClass):
    _reg_clsid_ = GUID('{08F6C815-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllMacros._com_interfaces_ = [AllObjects]
DB_RELATIONDELETECASCADE = 4096  # Constant c_int
acFormatXLS = 'Microsoft Excel (*.xls)'  # Constant STRING
vbKeyF13 = 124  # Constant c_short

DispLineEvents._disp_methods_ = [
]


class _Textbox(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E946-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_FormatConditions(self) -> 'FormatConditions': ...
        FormatConditions = hints.normal_property(_get_FormatConditions)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_Format(self) -> hints.Incomplete: ...
        def _set_Format(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Format = hints.normal_property(_get_Format, _set_Format)
        def _get_DecimalPlaces(self) -> hints.Incomplete: ...
        def _set_DecimalPlaces(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DecimalPlaces = hints.normal_property(_get_DecimalPlaces, _set_DecimalPlaces)
        def _get_InputMask(self) -> hints.Incomplete: ...
        def _set_InputMask(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputMask = hints.normal_property(_get_InputMask, _set_InputMask)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_IMEHold(self) -> hints.Incomplete: ...
        def _set_IMEHold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEHold = hints.normal_property(_get_IMEHold, _set_IMEHold)
        def _get_FuriganaControl(self) -> hints.Incomplete: ...
        def _set_FuriganaControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FuriganaControl = hints.normal_property(_get_FuriganaControl, _set_FuriganaControl)
        def _get_PostalAddress(self) -> hints.Incomplete: ...
        def _set_PostalAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PostalAddress = hints.normal_property(_get_PostalAddress, _set_PostalAddress)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_EnterKeyBehavior(self) -> hints.Incomplete: ...
        def _set_EnterKeyBehavior(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EnterKeyBehavior = hints.normal_property(_get_EnterKeyBehavior, _set_EnterKeyBehavior)
        def _get_AllowAutoCorrect(self) -> hints.Incomplete: ...
        def _set_AllowAutoCorrect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowAutoCorrect = hints.normal_property(_get_AllowAutoCorrect, _set_AllowAutoCorrect)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Vertical(self) -> hints.Incomplete: ...
        def _set_Vertical(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Vertical = hints.normal_property(_get_Vertical, _set_Vertical)
        def _get_FELineBreak(self) -> hints.Incomplete: ...
        def _set_FELineBreak(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FELineBreak = hints.normal_property(_get_FELineBreak, _set_FELineBreak)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_FilterLookup(self) -> hints.Incomplete: ...
        def _set_FilterLookup(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterLookup = hints.normal_property(_get_FilterLookup, _set_FilterLookup)
        def _get_AutoTab(self) -> hints.Incomplete: ...
        def _set_AutoTab(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoTab = hints.normal_property(_get_AutoTab, _set_AutoTab)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_CanGrow(self) -> hints.Incomplete: ...
        def _set_CanGrow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanGrow = hints.normal_property(_get_CanGrow, _set_CanGrow)
        def _get_CanShrink(self) -> hints.Incomplete: ...
        def _set_CanShrink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanShrink = hints.normal_property(_get_CanShrink, _set_CanShrink)
        def _get_RunningSum(self) -> hints.Incomplete: ...
        def _set_RunningSum(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RunningSum = hints.normal_property(_get_RunningSum, _set_RunningSum)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_TextAlign(self) -> hints.Incomplete: ...
        def _set_TextAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlign = hints.normal_property(_get_TextAlign, _set_TextAlign)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Text(self) -> hints.Incomplete: ...
        def _set_Text(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Text = hints.normal_property(_get_Text, _set_Text)
        def _get_SelText(self) -> hints.Incomplete: ...
        def _set_SelText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelText = hints.normal_property(_get_SelText, _set_SelText)
        def _get_SelStart(self) -> hints.Incomplete: ...
        def _set_SelStart(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelStart = hints.normal_property(_get_SelStart, _set_SelStart)
        def _get_SelLength(self) -> hints.Incomplete: ...
        def _set_SelLength(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelLength = hints.normal_property(_get_SelLength, _set_SelLength)
        def _get_TextAlignGeneral(self) -> hints.Incomplete: ...
        def _set_TextAlignGeneral(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlignGeneral = hints.normal_property(_get_TextAlignGeneral, _set_TextAlignGeneral)
        def _get_Coltyp(self) -> hints.Incomplete: ...
        def _set_Coltyp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Coltyp = hints.normal_property(_get_Coltyp, _set_Coltyp)
        def _get_FormatPictureText(self) -> hints.Incomplete: ...
        def _set_FormatPictureText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormatPictureText = hints.normal_property(_get_FormatPictureText, _set_FormatPictureText)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnChange(self) -> hints.Incomplete: ...
        def _set_OnChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChange = hints.normal_property(_get_OnChange, _set_OnChange)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_KeyboardLanguage(self) -> hints.Incomplete: ...
        def _set_KeyboardLanguage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyboardLanguage = hints.normal_property(_get_KeyboardLanguage, _set_KeyboardLanguage)
        def _get_AllowedText(self) -> hints.Incomplete: ...
        def _set_AllowedText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowedText = hints.normal_property(_get_AllowedText, _set_AllowedText)
        def _get_ScrollBarAlign(self) -> hints.Incomplete: ...
        def _set_ScrollBarAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBarAlign = hints.normal_property(_get_ScrollBarAlign, _set_ScrollBarAlign)
        def _get_NumeralShapes(self) -> hints.Incomplete: ...
        def _set_NumeralShapes(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NumeralShapes = hints.normal_property(_get_NumeralShapes, _set_NumeralShapes)
        def _get_IMEMode(self) -> hints.Incomplete: ...
        def _set_IMEMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEMode = hints.normal_property(_get_IMEMode, _set_IMEMode)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_IMESentenceMode(self) -> hints.Incomplete: ...
        def _set_IMESentenceMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMESentenceMode = hints.normal_property(_get_IMESentenceMode, _set_IMESentenceMode)
        def _get_LeftMargin(self) -> hints.Incomplete: ...
        def _set_LeftMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftMargin = hints.normal_property(_get_LeftMargin, _set_LeftMargin)
        def _get_TopMargin(self) -> hints.Incomplete: ...
        def _set_TopMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopMargin = hints.normal_property(_get_TopMargin, _set_TopMargin)
        def _get_LineSpacing(self) -> hints.Incomplete: ...
        def _set_LineSpacing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LineSpacing = hints.normal_property(_get_LineSpacing, _set_LineSpacing)
        def _get_RightMargin(self) -> hints.Incomplete: ...
        def _set_RightMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightMargin = hints.normal_property(_get_RightMargin, _set_RightMargin)
        def _get_BottomMargin(self) -> hints.Incomplete: ...
        def _set_BottomMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomMargin = hints.normal_property(_get_BottomMargin, _set_BottomMargin)
        def _get_IsHyperlink(self) -> hints.Incomplete: ...
        def _set_IsHyperlink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsHyperlink = hints.normal_property(_get_IsHyperlink, _set_IsHyperlink)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnUndo(self) -> hints.Incomplete: ...
        def _set_OnUndo(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUndo = hints.normal_property(_get_OnUndo, _set_OnUndo)
        def _get_AsianLineBreak(self) -> hints.Incomplete: ...
        def _set_AsianLineBreak(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AsianLineBreak = hints.normal_property(_get_AsianLineBreak, _set_AsianLineBreak)
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_TextFormat(self) -> hints.Incomplete: ...
        def _set_TextFormat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFormat = hints.normal_property(_get_TextFormat, _set_TextFormat)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnChangeMacro(self) -> hints.Incomplete: ...
        def _set_OnChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChangeMacro = hints.normal_property(_get_OnChangeMacro, _set_OnChangeMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_DisplayAsHyperlink(self) -> hints.Incomplete: ...
        def _set_DisplayAsHyperlink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayAsHyperlink = hints.normal_property(_get_DisplayAsHyperlink, _set_DisplayAsHyperlink)
        def _get_ShowDatePicker(self) -> hints.Incomplete: ...
        def _set_ShowDatePicker(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowDatePicker = hints.normal_property(_get_ShowDatePicker, _set_ShowDatePicker)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class FormatConditions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E27A992E-A330-11D0-81DD-00C04FC2F51B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_FormatCondition': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def Add(self, Type: hints.Incomplete, Operator: hints.Incomplete = ..., Expression1: hints.Incomplete = ..., Expression2: hints.Incomplete = ...) -> '_FormatCondition': ...
        def Delete(self) -> hints.Hresult: ...
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...



_Textbox._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2203), 'propget'],
        HRESULT,
        'FormatConditions',
        (['out', 'retval'], POINTER(POINTER(FormatConditions)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(38), 'propget'],
        HRESULT,
        'Format',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(38), 'propput'],
        HRESULT,
        'Format',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(71), 'propget'],
        HRESULT,
        'DecimalPlaces',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(71), 'propput'],
        HRESULT,
        'DecimalPlaces',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(72), 'propget'],
        HRESULT,
        'InputMask',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(72), 'propput'],
        HRESULT,
        'InputMask',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propget'],
        HRESULT,
        'IMEHold',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propput'],
        HRESULT,
        'IMEHold',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(359), 'propget'],
        HRESULT,
        'FuriganaControl',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(359), 'propput'],
        HRESULT,
        'FuriganaControl',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(360), 'propget'],
        HRESULT,
        'PostalAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(360), 'propput'],
        HRESULT,
        'PostalAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(74), 'propget'],
        HRESULT,
        'EnterKeyBehavior',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(74), 'propput'],
        HRESULT,
        'EnterKeyBehavior',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(340), 'propget'],
        HRESULT,
        'AllowAutoCorrect',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(340), 'propput'],
        HRESULT,
        'AllowAutoCorrect',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(355), 'propget'],
        HRESULT,
        'Vertical',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(355), 'propput'],
        HRESULT,
        'Vertical',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(358), 'hidden', 'propget'],
        HRESULT,
        'FELineBreak',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(358), 'hidden', 'propput'],
        HRESULT,
        'FELineBreak',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(305), 'propget'],
        HRESULT,
        'FilterLookup',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(305), 'propput'],
        HRESULT,
        'FilterLookup',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(73), 'propget'],
        HRESULT,
        'AutoTab',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(73), 'propput'],
        HRESULT,
        'AutoTab',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propget'],
        HRESULT,
        'CanGrow',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propput'],
        HRESULT,
        'CanGrow',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propget'],
        HRESULT,
        'CanShrink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propput'],
        HRESULT,
        'CanShrink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(130), 'propget'],
        HRESULT,
        'RunningSum',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(130), 'propput'],
        HRESULT,
        'RunningSum',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propget'],
        HRESULT,
        'TextAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propput'],
        HRESULT,
        'TextAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(267), 'propget'],
        HRESULT,
        'Text',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(267), 'propput'],
        HRESULT,
        'Text',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(271), 'propget'],
        HRESULT,
        'SelText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(271), 'propput'],
        HRESULT,
        'SelText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(270), 'propget'],
        HRESULT,
        'SelStart',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(270), 'propput'],
        HRESULT,
        'SelStart',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(269), 'propget'],
        HRESULT,
        'SelLength',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(269), 'propput'],
        HRESULT,
        'SelLength',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(137), 'hidden', 'propget'],
        HRESULT,
        'TextAlignGeneral',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(137), 'hidden', 'propput'],
        HRESULT,
        'TextAlignGeneral',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(139), 'hidden', 'propget'],
        HRESULT,
        'Coltyp',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(139), 'hidden', 'propput'],
        HRESULT,
        'Coltyp',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(138), 'hidden', 'propget'],
        HRESULT,
        'FormatPictureText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(138), 'hidden', 'propput'],
        HRESULT,
        'FormatPictureText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propget'],
        HRESULT,
        'OnChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propput'],
        HRESULT,
        'OnChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propget'],
        HRESULT,
        'KeyboardLanguage',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propput'],
        HRESULT,
        'KeyboardLanguage',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propget'],
        HRESULT,
        'AllowedText',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propput'],
        HRESULT,
        'AllowedText',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propget'],
        HRESULT,
        'ScrollBarAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propput'],
        HRESULT,
        'ScrollBarAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propget'],
        HRESULT,
        'NumeralShapes',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propput'],
        HRESULT,
        'NumeralShapes',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propget'],
        HRESULT,
        'IMEMode',
        (['out', 'retval'], POINTER(AcImeMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propput'],
        HRESULT,
        'IMEMode',
        (['in'], AcImeMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(379), 'propget'],
        HRESULT,
        'IMESentenceMode',
        (['out', 'retval'], POINTER(AcImeSentenceMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(379), 'propput'],
        HRESULT,
        'IMESentenceMode',
        (['in'], AcImeSentenceMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(384), 'propget'],
        HRESULT,
        'LeftMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(384), 'propput'],
        HRESULT,
        'LeftMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propget'],
        HRESULT,
        'TopMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propput'],
        HRESULT,
        'TopMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(386), 'propget'],
        HRESULT,
        'LineSpacing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(386), 'propput'],
        HRESULT,
        'LineSpacing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propget'],
        HRESULT,
        'RightMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propput'],
        HRESULT,
        'RightMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propget'],
        HRESULT,
        'BottomMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propput'],
        HRESULT,
        'BottomMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(396), 'propget'],
        HRESULT,
        'IsHyperlink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(396), 'propput'],
        HRESULT,
        'IsHyperlink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propget'],
        HRESULT,
        'OnUndo',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propput'],
        HRESULT,
        'OnUndo',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(446), 'propget'],
        HRESULT,
        'AsianLineBreak',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(446), 'propput'],
        HRESULT,
        'AsianLineBreak',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(476), 'propget'],
        HRESULT,
        'TextFormat',
        (['out', 'retval'], POINTER(AcTextFormat), 'pRet')
    ),
    COMMETHOD(
        [dispid(476), 'propput'],
        HRESULT,
        'TextFormat',
        (['in'], AcTextFormat, 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propget'],
        HRESULT,
        'OnChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propput'],
        HRESULT,
        'OnChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(591), 'propget'],
        HRESULT,
        'DisplayAsHyperlink',
        (['out', 'retval'], POINTER(AcDisplayAsHyperlink), 'pRet')
    ),
    COMMETHOD(
        [dispid(591), 'propput'],
        HRESULT,
        'DisplayAsHyperlink',
        (['in'], AcDisplayAsHyperlink, 'pRet')
    ),
    COMMETHOD(
        [dispid(486), 'propget'],
        HRESULT,
        'ShowDatePicker',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(486), 'propput'],
        HRESULT,
        'ShowDatePicker',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Textbox implementation
# class _Textbox_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def FormatConditions(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Format = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DecimalPlaces = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputMask = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEHold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FuriganaControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PostalAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EnterKeyBehavior = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowAutoCorrect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Vertical = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FELineBreak = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterLookup = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoTab = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanGrow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanShrink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RunningSum = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Text = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelStart = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelLength = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlignGeneral = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Coltyp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormatPictureText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyboardLanguage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowedText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBarAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NumeralShapes = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMESentenceMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LineSpacing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsHyperlink = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUndo = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AsianLineBreak = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFormat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayAsHyperlink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowDatePicker = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
A_TABLE = 0  # Constant c_short
DB_RELATIONLEFT = 16777216  # Constant c_int
acFormatTXT = 'MS-DOS Text (*.txt)'  # Constant STRING
A_QUERY = 1  # Constant c_short
vbKeyF14 = 125  # Constant c_short
DB_RELATIONRIGHT = 33554432  # Constant c_int
acFormatHTML = 'HTML (*.html)'  # Constant STRING
vbKeyF15 = 126  # Constant c_short
A_FORM = 2  # Constant c_short

_Image._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propget'],
        HRESULT,
        'SizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propput'],
        HRESULT,
        'SizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propget'],
        HRESULT,
        'HyperlinkAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propput'],
        HRESULT,
        'HyperlinkAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propget'],
        HRESULT,
        'HyperlinkSubAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propput'],
        HRESULT,
        'HyperlinkSubAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(307), 'propget'],
        HRESULT,
        'ImageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(307), 'propput'],
        HRESULT,
        'ImageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(308), 'propget'],
        HRESULT,
        'ImageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(308), 'propput'],
        HRESULT,
        'ImageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Image implementation
# class _Image_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkSubAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ImageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ImageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#


class SmartTagProperty(CoClass):
    _reg_clsid_ = GUID('{6E03AD86-431E-4879-A572-EF0EBA2FA729}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _SmartTagProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{6A3308EA-73DF-436A-A826-41A1F02186C4}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def Delete(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


SmartTagProperty._com_interfaces_ = [_SmartTagProperty]
DB_ATTACHEXCLUSIVE = 65536  # Constant c_int
A_REPORT = 3  # Constant c_short
acFormatIIS = 'Microsoft IIS (*.htx; *.idc)'  # Constant STRING
A_MODULE = 5  # Constant c_short
vbKeyF16 = 127  # Constant c_short

DispSectionEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD([dispid(2486)], None, 'Paint'),
]
DB_ATTACHSAVEPWD = 131072  # Constant c_int
acFormatASP = 'Microsoft Active Server Pages (*.asp)'  # Constant STRING
A_MACRO = 4  # Constant c_short


class AllModules(CoClass):
    _reg_clsid_ = GUID('{08F6C816-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllModules._com_interfaces_ = [AllObjects]


class SmartTagProperties(CoClass):
    _reg_clsid_ = GUID('{4215CC2C-15B5-47A5-9B60-119BD269CB7E}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _SmartTagProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3A6A13FF-1162-461D-899C-768D025119FB}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_SmartTagProperty': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def Add(self, Name: hints.Incomplete, Value: hints.Incomplete) -> '_SmartTagProperty': ...
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


SmartTagProperties._com_interfaces_ = [_SmartTagProperties]
DB_SYSTEMOBJECT = -2147483646  # Constant c_int
acFormatDAP = 'Microsoft Access Data Access Page (*.htm; *.html)'  # Constant STRING
A_FORMBAR = 0  # Constant c_short


class SmartTag(CoClass):
    _reg_clsid_ = GUID('{EF1A0B1D-AD6D-48E6-9905-BEE2A5D38DF9}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _SmartTag(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9D2AB5D3-CD72-4A9A-A72E-2B3492CBD0AE}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> '_SmartTagProperties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_SmartTagActions(self) -> '_SmartTagActions': ...
        SmartTagActions = hints.normal_property(_get_SmartTagActions)
        def _get_XML(self) -> hints.Incomplete: ...
        XML = hints.normal_property(_get_XML)
        def Delete(self) -> hints.Hresult: ...
        def _get_IsMissing(self) -> hints.Incomplete: ...
        IsMissing = hints.normal_property(_get_IsMissing)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


SmartTag._com_interfaces_ = [_SmartTag]
A_EDITMENU = 1  # Constant c_short
DB_ATTACHEDTABLE = 1073741824  # Constant c_int
acFormatSNP = 'Snapshot Format (*.snp)'  # Constant STRING
A_FILE = 0  # Constant c_short


class PaletteButton(CoClass):
    _reg_clsid_ = GUID('{9CD4A762-A6A9-11CE-A686-00AA003F0F07}')
    _idlflags_ = ['hidden', 'control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _PaletteButton(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9CD4A760-A6A9-11CE-A686-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_OptionValue(self) -> hints.Incomplete: ...
        def _set_OptionValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OptionValue = hints.normal_property(_get_OptionValue, _set_OptionValue)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TripleState(self) -> hints.Incomplete: ...
        def _set_TripleState(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TripleState = hints.normal_property(_get_TripleState, _set_TripleState)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)


class _PaletteButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{A843CCD0-6E2C-11CF-A219-00A0C90542FF}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


class DispPaletteButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527F-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


PaletteButton._com_interfaces_ = [_PaletteButton]
PaletteButton._outgoing_interfaces_ = [DispPaletteButtonEvents, _PaletteButtonEvents]

DispAttachmentEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD([dispid(2483)], None, 'AttachmentCurrent'),
]
DB_ATTACHEDODBC = 536870912  # Constant c_int
acFormatPDF = 'PDF Format (*.pdf)'  # Constant STRING

_Attachment._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'hidden', 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(481), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(481), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(480), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(480), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(482), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(482), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propget'],
        HRESULT,
        'OnChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propput'],
        HRESULT,
        'OnChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(484), 'propget'],
        HRESULT,
        'OnAttachmentCurrent',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(484), 'propput'],
        HRESULT,
        'OnAttachmentCurrent',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(528), 'hidden', 'propget'],
        HRESULT,
        'OnDirtyMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(528), 'hidden', 'propput'],
        HRESULT,
        'OnDirtyMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propget'],
        HRESULT,
        'OnChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propput'],
        HRESULT,
        'OnChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(558), 'hidden', 'propget'],
        HRESULT,
        'OnAttachmentCurrentMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(558), 'hidden', 'propput'],
        HRESULT,
        'OnAttachmentCurrentMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(479), 'propget'],
        HRESULT,
        'DisplayAs',
        (['out', 'retval'], POINTER(AcDisplayAs), 'pRet')
    ),
    COMMETHOD(
        [dispid(479), 'propput'],
        HRESULT,
        'DisplayAs',
        (['in'], AcDisplayAs, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD([dispid(2476)], HRESULT, 'Forward'),
    COMMETHOD([dispid(2477)], HRESULT, 'Back'),
    COMMETHOD(
        [dispid(2478), 'propget'],
        HRESULT,
        'AttachmentCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2479), 'propget'],
        HRESULT,
        'CurrentAttachment',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2479), 'propput'],
        HRESULT,
        'CurrentAttachment',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2480), 'propget'],
        HRESULT,
        'FileName',
        (['in', 'optional'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2481), 'propget'],
        HRESULT,
        'FileType',
        (['in', 'optional'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2482), 'propget'],
        HRESULT,
        'FileURL',
        (['in', 'optional'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(575), 'propget'],
        HRESULT,
        'DefaultPicture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(575), 'propput'],
        HRESULT,
        'DefaultPicture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2501), 'hidden', 'propget'],
        HRESULT,
        'FileData',
        (['in', 'optional'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2502), 'hidden', 'propget'],
        HRESULT,
        'PictureDisp',
        (['in', 'optional'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(693), 'propget'],
        HRESULT,
        'DefaultPictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(693), 'propput'],
        HRESULT,
        'DefaultPictureType',
        (['in'], c_ubyte, 'pRet')
    ),
]

################################################################
# code template for _Attachment implementation
# class _Attachment_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnAttachmentCurrent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirtyMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnAttachmentCurrentMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayAs = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def Forward(self):
#         '-no docstring-'
#         #return 
#
#     def Back(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def AttachmentCount(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentAttachment = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FileName(self, var):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def FileType(self, var):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def FileURL(self, var):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultPicture = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FileData(self, var):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def PictureDisp(self, var):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultPictureType = property(_get, _set, doc = _set.__doc__)
#
A_RECORDSMENU = 3  # Constant c_short
A_SAVEFORM = 2  # Constant c_short
DB_HIDDENOBJECT = 1  # Constant c_int
acFormatXPS = 'XPS Format (*.xps)'  # Constant STRING
A_NEW = 0  # Constant c_short


class CurrentProject(CoClass):
    _reg_clsid_ = GUID('{08F6C811-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _CurrentProject(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9212BA71-3E79-11D1-98BD-006008197D41}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_AllForms(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllForms']]: ...
        AllForms = hints.normal_property(_get_AllForms)
        def _get_AllReports(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllReports']]: ...
        AllReports = hints.normal_property(_get_AllReports)
        def _get_AllMacros(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllMacros']]: ...
        AllMacros = hints.normal_property(_get_AllMacros)
        def _get_AllModules(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllModules']]: ...
        AllModules = hints.normal_property(_get_AllModules)
        def _get_AllDataAccessPages(self) -> hints.Annotated['AllObjects', hints.FirstComItfOf['AllDataAccessPages']]: ...
        AllDataAccessPages = hints.normal_property(_get_AllDataAccessPages)
        def _get_ProjectType(self) -> hints.Incomplete: ...
        ProjectType = hints.normal_property(_get_ProjectType)
        def _get_BaseConnectionString(self) -> hints.Incomplete: ...
        BaseConnectionString = hints.normal_property(_get_BaseConnectionString)
        def _get_IsConnected(self) -> hints.Incomplete: ...
        IsConnected = hints.normal_property(_get_IsConnected)
        def OpenConnection(self, BaseConnectionString: hints.Incomplete = ..., UserID: hints.Incomplete = ..., Password: hints.Incomplete = ...) -> hints.Hresult: ...
        def CloseConnection(self) -> hints.Hresult: ...
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Path(self) -> hints.Incomplete: ...
        Path = hints.normal_property(_get_Path)
        def _get_FullName(self) -> hints.Incomplete: ...
        FullName = hints.normal_property(_get_FullName)
        def _get_Connection(self) -> hints.Incomplete: ...
        Connection = hints.normal_property(_get_Connection)
        def _get_Properties(self) -> 'AccessObjectProperties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_RemovePersonalInformation(self) -> hints.Incomplete: ...
        def _set_RemovePersonalInformation(self, pf: hints.Incomplete) -> hints.Hresult: ...
        RemovePersonalInformation = hints.normal_property(_get_RemovePersonalInformation, _set_RemovePersonalInformation)
        def _get_FileFormat(self) -> hints.Incomplete: ...
        FileFormat = hints.normal_property(_get_FileFormat)
        def _get_AccessConnection(self) -> hints.Incomplete: ...
        AccessConnection = hints.normal_property(_get_AccessConnection)
        def UpdateDependencyInfo(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_ImportExportSpecifications(self) -> 'ImportExportSpecifications': ...
        ImportExportSpecifications = hints.normal_property(_get_ImportExportSpecifications)
        def _get_IsTrusted(self) -> hints.Incomplete: ...
        IsTrusted = hints.normal_property(_get_IsTrusted)
        def _get_WebSite(self) -> hints.Incomplete: ...
        WebSite = hints.normal_property(_get_WebSite)
        def _get_IsWeb(self) -> hints.Incomplete: ...
        IsWeb = hints.normal_property(_get_IsWeb)
        def _get_Resources(self) -> 'SharedResources': ...
        Resources = hints.normal_property(_get_Resources)
        def AddSharedImage(self, SharedImageName: hints.Incomplete, FileName: hints.Incomplete) -> hints.Hresult: ...
        def _get_IsSQLBackend(self) -> hints.Incomplete: ...
        IsSQLBackend = hints.normal_property(_get_IsSQLBackend)


CurrentProject._com_interfaces_ = [_CurrentProject]
A_SAVERECORD = 4  # Constant c_short
DB_TABLE = 1  # Constant c_int
acFormatXLSB = 'Microsoft Excel Binary Workbook (*.xlsb)'  # Constant STRING
A_SAVEFORMAS = 3  # Constant c_short
DB_QUERYDEF = 5  # Constant c_int
acFormatXLSX = 'Microsoft Excel Workbook (*.xlsx)'  # Constant STRING

_SubFormEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]

################################################################
# code template for _SubFormEvents implementation
# class _SubFormEvents_Impl(object):
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#

DispPaletteButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]


class FormOld(CoClass):
    _reg_clsid_ = GUID('{483615A0-74BE-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


FormOld._com_interfaces_ = [_Form]
FormOld._outgoing_interfaces_ = [_FormEvents]
DB_QSELECT = 0  # Constant c_int
acSecFrmRptReadDef = 4  # Constant c_int
A_UNDO = 0  # Constant c_short


class AllForms(CoClass):
    _reg_clsid_ = GUID('{08F6C813-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllForms._com_interfaces_ = [AllObjects]


class AllDataAccessPages(CoClass):
    _reg_clsid_ = GUID('{08F6C818-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AllDataAccessPages._com_interfaces_ = [AllObjects]


class AccessObjectProperties(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{0921F331-A7C9-11D1-9944-006008197D41}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'AccessObjectProperty': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def Add(self, PropertyName: hints.Incomplete, Value: hints.Incomplete) -> hints.Hresult: ...
        def Remove(self, Item: hints.Incomplete) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...




class ImportExportSpecifications(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{77DC8648-F725-4371-88C3-6EB6C4894CA4}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'ImportExportSpecification': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def Add(self, Name: hints.Incomplete, SpecificationDefinition: hints.Incomplete) -> 'ImportExportSpecification': ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_CurrentProject._methods_ = [
    COMMETHOD(
        [dispid(2219), 'propget'],
        HRESULT,
        'AllForms',
        (['out', 'retval'], POINTER(POINTER(AllForms)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2220), 'propget'],
        HRESULT,
        'AllReports',
        (['out', 'retval'], POINTER(POINTER(AllReports)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2221), 'propget'],
        HRESULT,
        'AllMacros',
        (['out', 'retval'], POINTER(POINTER(AllMacros)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2222), 'propget'],
        HRESULT,
        'AllModules',
        (['out', 'retval'], POINTER(POINTER(AllModules)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2224), 'hidden', 'propget'],
        HRESULT,
        'AllDataAccessPages',
        (['out', 'retval'], POINTER(POINTER(AllDataAccessPages)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2271), 'propget'],
        HRESULT,
        'ProjectType',
        (['out', 'retval'], POINTER(AcProjectType), 'pacProjType')
    ),
    COMMETHOD(
        [dispid(2267), 'propget'],
        HRESULT,
        'BaseConnectionString',
        (['out', 'retval'], POINTER(BSTR), 'pbstrADOConnectString')
    ),
    COMMETHOD(
        [dispid(2269), 'propget'],
        HRESULT,
        'IsConnected',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfConnected')
    ),
    COMMETHOD(
        [dispid(2272)],
        HRESULT,
        'OpenConnection',
        (['in', 'optional'], VARIANT, 'BaseConnectionString'),
        (['in', 'optional'], VARIANT, 'UserID'),
        (['in', 'optional'], VARIANT, 'Password')
    ),
    COMMETHOD([dispid(2270)], HRESULT, 'CloseConnection'),
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2275), 'propget'],
        HRESULT,
        'Path',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2260), 'propget'],
        HRESULT,
        'FullName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2274), 'propget'],
        HRESULT,
        'Connection',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(AccessObjectProperties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2367), 'propget'],
        HRESULT,
        'RemovePersonalInformation',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2367), 'propput'],
        HRESULT,
        'RemovePersonalInformation',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2377), 'propget'],
        HRESULT,
        'FileFormat',
        (['out', 'retval'], POINTER(AcFileFormat), 'pRet')
    ),
    COMMETHOD(
        [dispid(2428), 'propget'],
        HRESULT,
        'AccessConnection',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'pRet',
        )
    ),
    COMMETHOD([dispid(2447)], HRESULT, 'UpdateDependencyInfo'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2454), 'propget'],
        HRESULT,
        'ImportExportSpecifications',
        (
            ['out', 'retval'],
            POINTER(POINTER(ImportExportSpecifications)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2469), 'propget'],
        HRESULT,
        'IsTrusted',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfTrusted')
    ),
    COMMETHOD(
        [dispid(2591), 'propget'],
        HRESULT,
        'WebSite',
        (['out', 'retval'], POINTER(BSTR), 'pbstrWebSite')
    ),
    COMMETHOD(
        [dispid(2595), 'propget'],
        HRESULT,
        'IsWeb',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfWebDb')
    ),
    COMMETHOD(
        [dispid(2589), 'propget'],
        HRESULT,
        'Resources',
        (['out', 'retval'], POINTER(POINTER(SharedResources)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2590)],
        HRESULT,
        'AddSharedImage',
        (['in'], BSTR, 'SharedImageName'),
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD(
        [dispid(2647), 'propget'],
        HRESULT,
        'IsSQLBackend',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfSqlDb')
    ),
]

################################################################
# code template for _CurrentProject implementation
# class _CurrentProject_Impl(object):
#     @property
#     def AllForms(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllReports(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllMacros(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllModules(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AllDataAccessPages(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ProjectType(self):
#         '-no docstring-'
#         #return pacProjType
#
#     @property
#     def BaseConnectionString(self):
#         '-no docstring-'
#         #return pbstrADOConnectString
#
#     @property
#     def IsConnected(self):
#         '-no docstring-'
#         #return pfConnected
#
#     def OpenConnection(self, BaseConnectionString, UserID, Password):
#         '-no docstring-'
#         #return 
#
#     def CloseConnection(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Path(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def FullName(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Connection(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FileFormat(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AccessConnection(self):
#         '-no docstring-'
#         #return pRet
#
#     def UpdateDependencyInfo(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ImportExportSpecifications(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def IsTrusted(self):
#         '-no docstring-'
#         #return pfTrusted
#
#     @property
#     def WebSite(self):
#         '-no docstring-'
#         #return pbstrWebSite
#
#     @property
#     def IsWeb(self):
#         '-no docstring-'
#         #return pfWebDb
#
#     @property
#     def Resources(self):
#         '-no docstring-'
#         #return pRet
#
#     def AddSharedImage(self, SharedImageName, FileName):
#         '-no docstring-'
#         #return 
#
#     @property
#     def IsSQLBackend(self):
#         '-no docstring-'
#         #return pfSqlDb
#
A_UNDOFIELD = 1  # Constant c_short
DB_QACTION = 240  # Constant c_int
acSecFrmRptWriteDef = 65548  # Constant c_int
DB_QCROSSTAB = 16  # Constant c_int
acSecFrmRptExecute = 256  # Constant c_int
A_CUT = 2  # Constant c_short
DB_QDELETE = 32  # Constant c_int
acSecMacReadDef = 10  # Constant c_int
A_COPY = 3  # Constant c_short
DB_QUPDATE = 48  # Constant c_int
acSecMacWriteDef = 65542  # Constant c_int


class _DesignerReceiver(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4D2A337B-259D-44A6-A5C6-81A629228CCF}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def SetReady(self) -> hints.Hresult: ...
        def RefreshRibbon(self) -> hints.Hresult: ...
        def LaunchBuilder(self, builder: hints.Incomplete, bstrBuilderValue: hints.Incomplete) -> hints.Incomplete: ...
        def RetrievePropertyValues(self, propertytype: hints.Incomplete, inputData: hints.Incomplete = ...) -> hints.Incomplete: ...
        def RecordSourceUpdated(self, bstrRecordSource: hints.Incomplete) -> hints.Hresult: ...
        def GetEmbeddedRecordSourceSQL(self) -> hints.Incomplete: ...
        def SetEmbeddedRecordSourceSQL(self, bstrRecordSource: hints.Incomplete) -> hints.Incomplete: ...
        def QuickCreateView(self, bstrViewName: hints.Incomplete, viewtype: hints.Incomplete, bstrRecordSource: hints.Incomplete, fStandalone: hints.Incomplete) -> hints.Hresult: ...
        def IsExpressionValid(self, bstrExpression: hints.Incomplete) -> hints.Incomplete: ...
        def NotifyControlIDChanged(self, bstrOldCtrlID: hints.Incomplete, bstrNewCtrlID: hints.Incomplete) -> hints.Hresult: ...
        def RetrieveControlSourcesInfo(self, bstrRecordSource: hints.Incomplete) -> hints.Incomplete: ...
        def OpenAccessObject(self, accessObjectType: hints.Incomplete, accessObjectName: hints.Incomplete, fDesignMode: hints.Incomplete) -> hints.Hresult: ...
        def DeleteAccessObject(self, accessObjectType: hints.Incomplete, accessObjectName: hints.Incomplete, pdispDependentObjectTypeNamePairArray: hints.Incomplete) -> hints.Incomplete: ...
        def DuplicateAccessObject(self, accessObjectType: hints.Incomplete, accessObjectName: hints.Incomplete) -> hints.Hresult: ...
        def RetrieveRecordSourceInfo(self, bstrRecordSource: hints.Incomplete) -> hints.Incomplete: ...
        def RetrieveViewInfo(self, bstrViewName: hints.Incomplete) -> hints.Incomplete: ...
        def GetEmbeddedObject(self, handlerType: hints.Incomplete, bstrCtrl: hints.Incomplete, bstrProperty: hints.Incomplete) -> hints.Incomplete: ...
        def SaveEmbeddedObject(self, handlerType: hints.Incomplete, bstrCtrl: hints.Incomplete, bstrProperty: hints.Incomplete, bstrExpression: hints.Incomplete) -> hints.Hresult: ...
        def DeleteEmbeddedObject(self, handlerType: hints.Incomplete, bstrCtrl: hints.Incomplete, bstrProperty: hints.Incomplete) -> hints.Hresult: ...
        def GetFormBodyAndCss(self, bstrFormName: hints.Incomplete) -> hints.Incomplete: ...
        def IsValidAccessObjectName(self, accessObjectType: hints.Incomplete, varName: hints.Incomplete) -> hints.Incomplete: ...
        def NotifyToUpdateView(self, iId: hints.Incomplete) -> hints.Hresult: ...


_DesignerReceiver._methods_ = [
    COMMETHOD([dispid(2602), 'hidden', 'nonbrowsable'], HRESULT, 'SetReady'),
    COMMETHOD(
        [dispid(2601), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RefreshRibbon',
    ),
    COMMETHOD(
        [dispid(2603), 'hidden', 'nonbrowsable'],
        HRESULT,
        'LaunchBuilder',
        (['in'], c_short, 'builder'),
        (['in'], BSTR, 'bstrBuilderValue'),
        (['out', 'retval'], POINTER(VARIANT), 'pBuilderResult')
    ),
    COMMETHOD(
        [dispid(2604), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RetrievePropertyValues',
        (['in'], c_short, 'propertytype'),
        (['in', 'optional'], VARIANT, 'inputData'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2605), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RecordSourceUpdated',
        (['in'], BSTR, 'bstrRecordSource')
    ),
    COMMETHOD(
        [dispid(2633), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetEmbeddedRecordSourceSQL',
        (['out', 'retval'], POINTER(BSTR), 'pbstrRecordSourceSQL')
    ),
    COMMETHOD(
        [dispid(2634), 'hidden', 'nonbrowsable'],
        HRESULT,
        'SetEmbeddedRecordSourceSQL',
        (['in'], BSTR, 'bstrRecordSource'),
        (['out', 'retval'], POINTER(BSTR), 'pbstrRecordSourceGUID')
    ),
    COMMETHOD(
        [dispid(2607), 'hidden', 'nonbrowsable'],
        HRESULT,
        'QuickCreateView',
        (['in'], BSTR, 'bstrViewName'),
        (['in'], c_short, 'viewtype'),
        (['in'], BSTR, 'bstrRecordSource'),
        (['in'], VARIANT_BOOL, 'fStandalone')
    ),
    COMMETHOD(
        [dispid(2608), 'hidden', 'nonbrowsable'],
        HRESULT,
        'IsExpressionValid',
        (['in'], BSTR, 'bstrExpression'),
        (['out', 'retval'], POINTER(VARIANT), 'pResult')
    ),
    COMMETHOD(
        [dispid(2617), 'hidden', 'nonbrowsable'],
        HRESULT,
        'NotifyControlIDChanged',
        (['in'], BSTR, 'bstrOldCtrlID'),
        (['in'], BSTR, 'bstrNewCtrlID')
    ),
    COMMETHOD(
        [dispid(2619), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RetrieveControlSourcesInfo',
        (['in'], BSTR, 'bstrRecordSource'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2622), 'hidden', 'nonbrowsable'],
        HRESULT,
        'OpenAccessObject',
        (['in'], c_int, 'accessObjectType'),
        (['in'], BSTR, 'accessObjectName'),
        (['in'], VARIANT_BOOL, 'fDesignMode')
    ),
    COMMETHOD(
        [dispid(2620), 'hidden', 'nonbrowsable'],
        HRESULT,
        'DeleteAccessObject',
        (['in'], c_int, 'accessObjectType'),
        (['in'], BSTR, 'accessObjectName'),
        (['in'], POINTER(IDispatch), 'pdispDependentObjectTypeNamePairArray'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfDeleteDesignerControl')
    ),
    COMMETHOD(
        [dispid(2646), 'hidden', 'nonbrowsable'],
        HRESULT,
        'DuplicateAccessObject',
        (['in'], c_int, 'accessObjectType'),
        (['in'], BSTR, 'accessObjectName')
    ),
    COMMETHOD(
        [dispid(2635), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RetrieveRecordSourceInfo',
        (['in'], BSTR, 'bstrRecordSource'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2636), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RetrieveViewInfo',
        (['in'], BSTR, 'bstrViewName'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2638), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetEmbeddedObject',
        (['in'], c_int, 'handlerType'),
        (['in'], BSTR, 'bstrCtrl'),
        (['in'], BSTR, 'bstrProperty'),
        (['out', 'retval'], POINTER(BSTR), 'pbstrExpression')
    ),
    COMMETHOD(
        [dispid(2640), 'hidden', 'nonbrowsable'],
        HRESULT,
        'SaveEmbeddedObject',
        (['in'], c_int, 'handlerType'),
        (['in'], BSTR, 'bstrCtrl'),
        (['in'], BSTR, 'bstrProperty'),
        (['in'], BSTR, 'bstrExpression')
    ),
    COMMETHOD(
        [dispid(2639), 'hidden', 'nonbrowsable'],
        HRESULT,
        'DeleteEmbeddedObject',
        (['in'], c_int, 'handlerType'),
        (['in'], BSTR, 'bstrCtrl'),
        (['in'], BSTR, 'bstrProperty')
    ),
    COMMETHOD(
        [dispid(2641), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetFormBodyAndCss',
        (['in'], BSTR, 'bstrFormName'),
        (['out', 'retval'], POINTER(VARIANT), 'pFormBodyAndCss')
    ),
    COMMETHOD(
        [dispid(2645), 'hidden', 'nonbrowsable'],
        HRESULT,
        'IsValidAccessObjectName',
        (['in'], c_int, 'accessObjectType'),
        (['in'], VARIANT, 'varName'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfReturn')
    ),
    COMMETHOD(
        [dispid(2648), 'hidden', 'nonbrowsable'],
        HRESULT,
        'NotifyToUpdateView',
        (['in'], c_int, 'iId')
    ),
]

################################################################
# code template for _DesignerReceiver implementation
# class _DesignerReceiver_Impl(object):
#     def SetReady(self):
#         '-no docstring-'
#         #return 
#
#     def RefreshRibbon(self):
#         '-no docstring-'
#         #return 
#
#     def LaunchBuilder(self, builder, bstrBuilderValue):
#         '-no docstring-'
#         #return pBuilderResult
#
#     def RetrievePropertyValues(self, propertytype, inputData):
#         '-no docstring-'
#         #return pRet
#
#     def RecordSourceUpdated(self, bstrRecordSource):
#         '-no docstring-'
#         #return 
#
#     def GetEmbeddedRecordSourceSQL(self):
#         '-no docstring-'
#         #return pbstrRecordSourceSQL
#
#     def SetEmbeddedRecordSourceSQL(self, bstrRecordSource):
#         '-no docstring-'
#         #return pbstrRecordSourceGUID
#
#     def QuickCreateView(self, bstrViewName, viewtype, bstrRecordSource, fStandalone):
#         '-no docstring-'
#         #return 
#
#     def IsExpressionValid(self, bstrExpression):
#         '-no docstring-'
#         #return pResult
#
#     def NotifyControlIDChanged(self, bstrOldCtrlID, bstrNewCtrlID):
#         '-no docstring-'
#         #return 
#
#     def RetrieveControlSourcesInfo(self, bstrRecordSource):
#         '-no docstring-'
#         #return pRet
#
#     def OpenAccessObject(self, accessObjectType, accessObjectName, fDesignMode):
#         '-no docstring-'
#         #return 
#
#     def DeleteAccessObject(self, accessObjectType, accessObjectName, pdispDependentObjectTypeNamePairArray):
#         '-no docstring-'
#         #return pfDeleteDesignerControl
#
#     def DuplicateAccessObject(self, accessObjectType, accessObjectName):
#         '-no docstring-'
#         #return 
#
#     def RetrieveRecordSourceInfo(self, bstrRecordSource):
#         '-no docstring-'
#         #return pRet
#
#     def RetrieveViewInfo(self, bstrViewName):
#         '-no docstring-'
#         #return pRet
#
#     def GetEmbeddedObject(self, handlerType, bstrCtrl, bstrProperty):
#         '-no docstring-'
#         #return pbstrExpression
#
#     def SaveEmbeddedObject(self, handlerType, bstrCtrl, bstrProperty, bstrExpression):
#         '-no docstring-'
#         #return 
#
#     def DeleteEmbeddedObject(self, handlerType, bstrCtrl, bstrProperty):
#         '-no docstring-'
#         #return 
#
#     def GetFormBodyAndCss(self, bstrFormName):
#         '-no docstring-'
#         #return pFormBodyAndCss
#
#     def IsValidAccessObjectName(self, accessObjectType, varName):
#         '-no docstring-'
#         #return pfReturn
#
#     def NotifyToUpdateView(self, iId):
#         '-no docstring-'
#         #return 
#
DB_QAPPEND = 64  # Constant c_int
acSecMacExecute = 8  # Constant c_int
A_PASTE = 4  # Constant c_short


class CodeProject(CoClass):
    _reg_clsid_ = GUID('{9212BA72-3E79-11D1-98BD-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


CodeProject._com_interfaces_ = [_CurrentProject]
DB_QMAKETABLE = 80  # Constant c_int
acSecModReadDef = 2  # Constant c_int
A_DELETE = 6  # Constant c_short
acSecModWriteDef = 65542  # Constant c_int
DB_QDDL = 96  # Constant c_int


class ReportOld(CoClass):
    _reg_clsid_ = GUID('{27CE30A0-91FF-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Report(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3E8B6B00-91FF-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_PageHeader(self) -> hints.Incomplete: ...
        def _set_PageHeader(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageHeader = hints.normal_property(_get_PageHeader, _set_PageHeader)
        def _get_PageFooter(self) -> hints.Incomplete: ...
        def _set_PageFooter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageFooter = hints.normal_property(_get_PageFooter, _set_PageFooter)
        def _get_DateGrouping(self) -> hints.Incomplete: ...
        def _set_DateGrouping(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DateGrouping = hints.normal_property(_get_DateGrouping, _set_DateGrouping)
        def _get_GrpKeepTogether(self) -> hints.Incomplete: ...
        def _set_GrpKeepTogether(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GrpKeepTogether = hints.normal_property(_get_GrpKeepTogether, _set_GrpKeepTogether)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_PicturePages(self) -> hints.Incomplete: ...
        def _set_PicturePages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePages = hints.normal_property(_get_PicturePages, _set_PicturePages)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_HasData(self) -> hints.Incomplete: ...
        def _set_HasData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasData = hints.normal_property(_get_HasData, _set_HasData)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_PrintSection(self) -> hints.Incomplete: ...
        def _set_PrintSection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintSection = hints.normal_property(_get_PrintSection, _set_PrintSection)
        def _get_NextRecord(self) -> hints.Incomplete: ...
        def _set_NextRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NextRecord = hints.normal_property(_get_NextRecord, _set_NextRecord)
        def _get_MoveLayout(self) -> hints.Incomplete: ...
        def _set_MoveLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MoveLayout = hints.normal_property(_get_MoveLayout, _set_MoveLayout)
        def _get_FormatCount(self) -> hints.Incomplete: ...
        def _set_FormatCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormatCount = hints.normal_property(_get_FormatCount, _set_FormatCount)
        def _get_PrintCount(self) -> hints.Incomplete: ...
        def _set_PrintCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintCount = hints.normal_property(_get_PrintCount, _set_PrintCount)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_CurrentX(self) -> hints.Incomplete: ...
        def _set_CurrentX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentX = hints.normal_property(_get_CurrentX, _set_CurrentX)
        def _get_CurrentY(self) -> hints.Incomplete: ...
        def _set_CurrentY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentY = hints.normal_property(_get_CurrentY, _set_CurrentY)
        def _get_ScaleHeight(self) -> hints.Incomplete: ...
        def _set_ScaleHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleHeight = hints.normal_property(_get_ScaleHeight, _set_ScaleHeight)
        def _get_ScaleLeft(self) -> hints.Incomplete: ...
        def _set_ScaleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleLeft = hints.normal_property(_get_ScaleLeft, _set_ScaleLeft)
        def _get_ScaleMode(self) -> hints.Incomplete: ...
        def _set_ScaleMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleMode = hints.normal_property(_get_ScaleMode, _set_ScaleMode)
        def _get_ScaleTop(self) -> hints.Incomplete: ...
        def _set_ScaleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleTop = hints.normal_property(_get_ScaleTop, _set_ScaleTop)
        def _get_ScaleWidth(self) -> hints.Incomplete: ...
        def _set_ScaleWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleWidth = hints.normal_property(_get_ScaleWidth, _set_ScaleWidth)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_DrawMode(self) -> hints.Incomplete: ...
        def _set_DrawMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawMode = hints.normal_property(_get_DrawMode, _set_DrawMode)
        def _get_DrawStyle(self) -> hints.Incomplete: ...
        def _set_DrawStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawStyle = hints.normal_property(_get_DrawStyle, _set_DrawStyle)
        def _get_DrawWidth(self) -> hints.Incomplete: ...
        def _set_DrawWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawWidth = hints.normal_property(_get_DrawWidth, _set_DrawWidth)
        def _get_FillColor(self) -> hints.Incomplete: ...
        def _set_FillColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillColor = hints.normal_property(_get_FillColor, _set_FillColor)
        def _get_FillStyle(self) -> hints.Incomplete: ...
        def _set_FillStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillStyle = hints.normal_property(_get_FillStyle, _set_FillStyle)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnNoData(self) -> hints.Incomplete: ...
        def _set_OnNoData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNoData = hints.normal_property(_get_OnNoData, _set_OnNoData)
        def _get_OnPage(self) -> hints.Incomplete: ...
        def _set_OnPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPage = hints.normal_property(_get_OnPage, _set_OnPage)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def Circle(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, radius: hints.Incomplete, color: hints.Incomplete, start: hints.Incomplete, end: hints.Incomplete, aspect: hints.Incomplete) -> hints.Hresult: ...
        def Line(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def PSet(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def Scale(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete) -> hints.Hresult: ...
        def TextWidth(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def TextHeight(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def Print(self, Expr: hints.Incomplete) -> hints.Hresult: ...
        def _get_Section(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        Section = hints.named_property('Section', _get_Section)
        def _get_GroupLevel(self, Index: hints.Incomplete) -> hints.Annotated['_GroupLevel', hints.FirstComItfOf['GroupLevel']]: ...
        GroupLevel = hints.named_property('GroupLevel', _get_GroupLevel)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)


ReportOld._com_interfaces_ = [_Report]
ReportOld._outgoing_interfaces_ = [_ReportEvents]
A_SELECTRECORD = 7  # Constant c_short
DB_QSQLPASSTHROUGH = 112  # Constant c_int
acMenuUngray = 0  # Constant c_short


class _SqmProxyReceiver(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F7CF612C-79E8-46EE-AE58-E589E5B7D6A0}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def SetDataPoint(self, id: hints.Incomplete, dwValue: hints.Incomplete) -> hints.Hresult: ...
        def SetDataPointMax(self, id: hints.Incomplete, dwValue: hints.Incomplete) -> hints.Hresult: ...
        def SetDataPointMin(self, id: hints.Incomplete, dwValue: hints.Incomplete) -> hints.Hresult: ...
        def CreateStream(self, id: hints.Incomplete, Type: hints.Incomplete, Width: hints.Incomplete, maxRows: hints.Incomplete) -> hints.Hresult: ...
        def AddStreamData1(self, id: hints.Incomplete, dw1: hints.Incomplete) -> hints.Hresult: ...
        def AddStreamData2(self, id: hints.Incomplete, dw1: hints.Incomplete, dw2: hints.Incomplete) -> hints.Hresult: ...
        def AddStreamData8(self, id: hints.Incomplete, dw1: hints.Incomplete, dw2: hints.Incomplete, dw3: hints.Incomplete, dw4: hints.Incomplete, dw5: hints.Incomplete, dw6: hints.Incomplete, dw7: hints.Incomplete, dw8: hints.Incomplete) -> hints.Hresult: ...


_SqmProxyReceiver._methods_ = [
    COMMETHOD(
        [dispid(2623), 'hidden', 'nonbrowsable'],
        HRESULT,
        'SetDataPoint',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dwValue')
    ),
    COMMETHOD(
        [dispid(2624), 'hidden', 'nonbrowsable'],
        HRESULT,
        'SetDataPointMax',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dwValue')
    ),
    COMMETHOD(
        [dispid(2625), 'hidden', 'nonbrowsable'],
        HRESULT,
        'SetDataPointMin',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dwValue')
    ),
    COMMETHOD(
        [dispid(2626), 'hidden', 'nonbrowsable'],
        HRESULT,
        'CreateStream',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'Type'),
        (['in'], c_uint, 'Width'),
        (['in'], c_uint, 'maxRows')
    ),
    COMMETHOD(
        [dispid(2627), 'hidden', 'nonbrowsable'],
        HRESULT,
        'AddStreamData1',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dw1')
    ),
    COMMETHOD(
        [dispid(2628), 'hidden', 'nonbrowsable'],
        HRESULT,
        'AddStreamData2',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dw1'),
        (['in'], c_uint, 'dw2')
    ),
    COMMETHOD(
        [dispid(2629), 'hidden', 'nonbrowsable'],
        HRESULT,
        'AddStreamData8',
        (['in'], c_uint, 'id'),
        (['in'], c_uint, 'dw1'),
        (['in'], c_uint, 'dw2'),
        (['in'], c_uint, 'dw3'),
        (['in'], c_uint, 'dw4'),
        (['in'], c_uint, 'dw5'),
        (['in'], c_uint, 'dw6'),
        (['in'], c_uint, 'dw7'),
        (['in'], c_uint, 'dw8')
    ),
]

################################################################
# code template for _SqmProxyReceiver implementation
# class _SqmProxyReceiver_Impl(object):
#     def SetDataPoint(self, id, dwValue):
#         '-no docstring-'
#         #return 
#
#     def SetDataPointMax(self, id, dwValue):
#         '-no docstring-'
#         #return 
#
#     def SetDataPointMin(self, id, dwValue):
#         '-no docstring-'
#         #return 
#
#     def CreateStream(self, id, Type, Width, maxRows):
#         '-no docstring-'
#         #return 
#
#     def AddStreamData1(self, id, dw1):
#         '-no docstring-'
#         #return 
#
#     def AddStreamData2(self, id, dw1, dw2):
#         '-no docstring-'
#         #return 
#
#     def AddStreamData8(self, id, dw1, dw2, dw3, dw4, dw5, dw6, dw7, dw8):
#         '-no docstring-'
#         #return 
#
A_SELECTALLRECORDS = 8  # Constant c_short
acMenuGray = 1  # Constant c_short

AllObjects._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(POINTER(AccessObject)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for AllObjects implementation
# class AllObjects_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, var):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
DB_QSETOPERATION = 128  # Constant c_int


class CodeData(CoClass):
    _reg_clsid_ = GUID('{08F6C81A-3CFD-11D1-98BC-006008197D41}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


CodeData._com_interfaces_ = [_CurrentData]
A_OBJECT = 14  # Constant c_short
acMenuUncheck = 2  # Constant c_short
DB_QSPTBULK = 144  # Constant c_int
A_REFRESH = 2  # Constant c_short
acMenuCheck = 3  # Constant c_short
DB_UNIQUE = 1  # Constant c_int
A_OBJECTVERB = 0  # Constant c_short
acEffectNormal = 0  # Constant c_short
DB_PRIMARY = 2  # Constant c_int
A_OBJECTUPDATE = 3  # Constant c_short
acEffectRaised = 1  # Constant c_short
DB_PROHIBITNULL = 4  # Constant c_int
A_ANYWHERE = 0  # Constant c_short
acEffectSunken = 2  # Constant c_short
DB_IGNORENULL = 8  # Constant c_int


class MacroError(CoClass):
    _reg_clsid_ = GUID('{3F1B1773-65CB-4DB9-9FC6-ACED47DB285A}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _MacroError(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{22585BA1-7BD1-40AF-8095-E688176CDEB0}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Condition(self) -> hints.Incomplete: ...
        Condition = hints.normal_property(_get_Condition)
        def _get_ActionName(self) -> hints.Incomplete: ...
        ActionName = hints.normal_property(_get_ActionName)
        def _get_Arguments(self) -> hints.Incomplete: ...
        Arguments = hints.normal_property(_get_Arguments)
        def _get_Description(self) -> hints.Incomplete: ...
        Description = hints.normal_property(_get_Description)
        def _get_Number(self) -> hints.Incomplete: ...
        Number = hints.normal_property(_get_Number)
        def _get_MacroName(self) -> hints.Incomplete: ...
        MacroName = hints.normal_property(_get_MacroName)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


MacroError._com_interfaces_ = [_MacroError]
A_ENTIRE = 1  # Constant c_short
acEffectEtched = 3  # Constant c_short


class Rectangle(CoClass):
    _reg_clsid_ = GUID('{3B06E949-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Rectangle(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E94A-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)


class _RectangleEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4342-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


class DispRectangleEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705271-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


Rectangle._com_interfaces_ = [_Rectangle]
Rectangle._outgoing_interfaces_ = [DispRectangleEvents, _RectangleEvents]
DB_LANG_ARABIC = ';LANGID=0x0401;CP=1256;COUNTRY=0'  # Constant STRING

_LineEvents._methods_ = [
]

################################################################
# code template for _LineEvents implementation
# class _LineEvents_Impl(object):
acEffectShadow = 4  # Constant c_short


class _DummyEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{58BF3100-B580-11CF-89A8-00A0C9054129}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Initialize(self) -> hints.Hresult: ...
        def Terminate(self) -> hints.Hresult: ...


_DummyEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Initialize'),
    COMMETHOD([], HRESULT, 'Terminate'),
]

################################################################
# code template for _DummyEvents implementation
# class _DummyEvents_Impl(object):
#     def Initialize(self):
#         '-no docstring-'
#         #return 
#
#     def Terminate(self):
#         '-no docstring-'
#         #return 
#
A_START = 2  # Constant c_short
DB_LANG_CZECH = ';LANGID=0x0405;CP=1250;COUNTRY=0'  # Constant STRING
acEffectChisel = 5  # Constant c_short

_MacroError._methods_ = [
    COMMETHOD(
        [dispid(2470), 'propget'],
        HRESULT,
        'Condition',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2471), 'propget'],
        HRESULT,
        'ActionName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2472), 'propget'],
        HRESULT,
        'Arguments',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2473), 'propget'],
        HRESULT,
        'Description',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Number',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2474), 'propget'],
        HRESULT,
        'MacroName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _MacroError implementation
# class _MacroError_Impl(object):
#     @property
#     def Condition(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActionName(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Arguments(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Description(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Number(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def MacroName(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
A_UP = 0  # Constant c_short
DB_LANG_DUTCH = ';LANGID=0x0413;CP=1252;COUNTRY=0'  # Constant STRING


class GroupLevel(CoClass):
    _reg_clsid_ = GUID('{BC9E4356-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _GroupLevel(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDD27-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_SortOrder(self) -> hints.Incomplete: ...
        def _set_SortOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SortOrder = hints.normal_property(_get_SortOrder, _set_SortOrder)
        def _get_GroupHeader(self) -> hints.Incomplete: ...
        def _set_GroupHeader(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GroupHeader = hints.normal_property(_get_GroupHeader, _set_GroupHeader)
        def _get_GroupFooter(self) -> hints.Incomplete: ...
        def _set_GroupFooter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GroupFooter = hints.normal_property(_get_GroupFooter, _set_GroupFooter)
        def _get_GroupOn(self) -> hints.Incomplete: ...
        def _set_GroupOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GroupOn = hints.normal_property(_get_GroupOn, _set_GroupOn)
        def _get_GroupInterval(self) -> hints.Incomplete: ...
        def _set_GroupInterval(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GroupInterval = hints.normal_property(_get_GroupInterval, _set_GroupInterval)
        def _get_KeepTogether(self) -> hints.Incomplete: ...
        def _set_KeepTogether(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeepTogether = hints.normal_property(_get_KeepTogether, _set_KeepTogether)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


GroupLevel._com_interfaces_ = [_GroupLevel]

_Report._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propget'],
        HRESULT,
        'PageHeader',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propput'],
        HRESULT,
        'PageHeader',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propget'],
        HRESULT,
        'PageFooter',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propput'],
        HRESULT,
        'PageFooter',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propget'],
        HRESULT,
        'DateGrouping',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propput'],
        HRESULT,
        'DateGrouping',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propget'],
        HRESULT,
        'GrpKeepTogether',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propput'],
        HRESULT,
        'GrpKeepTogether',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propget'],
        HRESULT,
        'PicturePages',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propput'],
        HRESULT,
        'PicturePages',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propget'],
        HRESULT,
        'HasData',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propput'],
        HRESULT,
        'HasData',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propget'],
        HRESULT,
        'PrintSection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propput'],
        HRESULT,
        'PrintSection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propget'],
        HRESULT,
        'NextRecord',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propput'],
        HRESULT,
        'NextRecord',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propget'],
        HRESULT,
        'MoveLayout',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propput'],
        HRESULT,
        'MoveLayout',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propget'],
        HRESULT,
        'FormatCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propput'],
        HRESULT,
        'FormatCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propget'],
        HRESULT,
        'PrintCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propput'],
        HRESULT,
        'PrintCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propget'],
        HRESULT,
        'CurrentX',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propput'],
        HRESULT,
        'CurrentX',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propget'],
        HRESULT,
        'CurrentY',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propput'],
        HRESULT,
        'CurrentY',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propget'],
        HRESULT,
        'ScaleHeight',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propput'],
        HRESULT,
        'ScaleHeight',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propget'],
        HRESULT,
        'ScaleLeft',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propput'],
        HRESULT,
        'ScaleLeft',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propget'],
        HRESULT,
        'ScaleMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propput'],
        HRESULT,
        'ScaleMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propget'],
        HRESULT,
        'ScaleTop',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propput'],
        HRESULT,
        'ScaleTop',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propget'],
        HRESULT,
        'ScaleWidth',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propput'],
        HRESULT,
        'ScaleWidth',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propget'],
        HRESULT,
        'DrawMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propput'],
        HRESULT,
        'DrawMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propget'],
        HRESULT,
        'DrawStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propput'],
        HRESULT,
        'DrawStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propget'],
        HRESULT,
        'DrawWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propput'],
        HRESULT,
        'DrawWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propget'],
        HRESULT,
        'FillColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propput'],
        HRESULT,
        'FillColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propget'],
        HRESULT,
        'FillStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propput'],
        HRESULT,
        'FillStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propget'],
        HRESULT,
        'OnNoData',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propput'],
        HRESULT,
        'OnNoData',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propget'],
        HRESULT,
        'OnPage',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propput'],
        HRESULT,
        'OnPage',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2118)],
        HRESULT,
        'Circle',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_float, 'radius'),
        (['in'], c_int, 'color'),
        (['in'], c_float, 'start'),
        (['in'], c_float, 'end'),
        (['in'], c_float, 'aspect')
    ),
    COMMETHOD(
        [dispid(2152)],
        HRESULT,
        'Line',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2117)],
        HRESULT,
        'PSet',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2116)],
        HRESULT,
        'Scale',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2')
    ),
    COMMETHOD(
        [dispid(2114)],
        HRESULT,
        'TextWidth',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2115)],
        HRESULT,
        'TextHeight',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2153)],
        HRESULT,
        'Print',
        (['in'], BSTR, 'Expr')
    ),
    COMMETHOD(
        [dispid(2088), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2098), 'propget'],
        HRESULT,
        'GroupLevel',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(POINTER(GroupLevel)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
]

################################################################
# code template for _Report implementation
# class _Report_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageHeader = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageFooter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DateGrouping = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GrpKeepTogether = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintSection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NextRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MoveLayout = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormatCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNoData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     def Circle(self, flags, X, Y, radius, color, start, end, aspect):
#         '-no docstring-'
#         #return 
#
#     def Line(self, flags, x1, y1, x2, y2, color):
#         '-no docstring-'
#         #return 
#
#     def PSet(self, flags, X, Y, color):
#         '-no docstring-'
#         #return 
#
#     def Scale(self, flags, x1, y1, x2, y2):
#         '-no docstring-'
#         #return 
#
#     def TextWidth(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def TextHeight(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def Print(self, Expr):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def GroupLevel(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
acGridlinesNone = 0  # Constant c_short

_Hyperlink._methods_ = [
    COMMETHOD(
        [dispid(2182), 'propget'],
        HRESULT,
        'SubAddress',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2182), 'propput'],
        HRESULT,
        'SubAddress',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2183), 'propget'],
        HRESULT,
        'Address',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2183), 'propput'],
        HRESULT,
        'Address',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD([dispid(2184)], HRESULT, 'AddToFavorites'),
    COMMETHOD(
        [dispid(2185)],
        HRESULT,
        'Follow',
        (['in', 'optional'], VARIANT_BOOL, 'NewWindow', False),
        (['in', 'optional'], VARIANT_BOOL, 'AddHistory', True),
        (['in', 'optional'], VARIANT, 'ExtraInfo'),
        (
            ['in', 'optional'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtraInfoMethod,
            'Method',
            0
        ),
        (['in', 'optional'], BSTR, 'HeaderInfo', '')
    ),
    COMMETHOD(
        [dispid(2209), 'propget'],
        HRESULT,
        'EmailSubject',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2209), 'propput'],
        HRESULT,
        'EmailSubject',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2211), 'propget'],
        HRESULT,
        'ScreenTip',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2211), 'propput'],
        HRESULT,
        'ScreenTip',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2231), 'propget'],
        HRESULT,
        'TextToDisplay',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2231), 'propput'],
        HRESULT,
        'TextToDisplay',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2232)],
        HRESULT,
        'CreateNewDocument',
        (['in'], BSTR, 'FileName'),
        (['in'], VARIANT_BOOL, 'EditNow'),
        (['in'], VARIANT_BOOL, 'Overwrite')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _Hyperlink implementation
# class _Hyperlink_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     SubAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     Address = property(_get, _set, doc = _set.__doc__)
#
#     def AddToFavorites(self):
#         '-no docstring-'
#         #return 
#
#     def Follow(self, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     EmailSubject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     ScreenTip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     TextToDisplay = property(_get, _set, doc = _set.__doc__)
#
#     def CreateNewDocument(self, FileName, EditNow, Overwrite):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
DB_LANG_GENERAL = ';LANGID=0x0409;CP=1252;COUNTRY=0'  # Constant STRING


class WizHook(CoClass):
    _reg_clsid_ = GUID('{CB9D3172-4728-11D1-8334-006008197CC8}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _WizHook(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CB9D3171-4728-11D1-8334-006008197CC8}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _set_Key(self, rhs: hints.Incomplete) -> hints.Hresult: ...
        Key = hints.normal_property(fset=_set_Key)
        def NameFromActid(self, Actid: hints.Incomplete) -> hints.Incomplete: ...
        def ArgsOfActid(self, Actid: hints.Incomplete) -> hints.Incomplete: ...
        def OpenScript(self, Script: hints.Incomplete, Label: hints.Incomplete, OpenMode: hints.Incomplete, Extra: hints.Incomplete, Version: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def GetScriptString(self, HScr: hints.Incomplete, ScriptColumn: hints.Incomplete, Value: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def SaveScriptString(self, HScr: hints.Incomplete, ScriptColumn: hints.Incomplete, Value: hints.Incomplete) -> hints.Incomplete: ...
        def GlobalProcExists(self, Name: hints.Incomplete) -> hints.Incomplete: ...
        def TableFieldHasUniqueIndex(self, Table: hints.Incomplete, Columns: hints.Incomplete) -> hints.Incomplete: ...
        def BracketString(self, String: hints.Incomplete, flags: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def WizHelp(self, HelpFile: hints.Incomplete, wCmd: hints.Incomplete, ContextID: hints.Incomplete) -> hints.Incomplete: ...
        def OpenPictureFile(self, File: hints.Incomplete, Cancelled: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def EnglishPictToLocal(self, In: hints.Incomplete, Out: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def TranslateExpression(self, In: hints.Incomplete, Out: hints.Incomplete, ParseFlags: hints.Incomplete, TranslateFlags: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def FileExists(self, File: hints.Incomplete) -> hints.Incomplete: ...
        def FullPath(self, RelativePath: hints.Incomplete, FullPath: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def SplitPath(self, Path: hints.Incomplete, Drive: hints.Incomplete, Dir: hints.Incomplete, File: hints.Incomplete, Ext: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def TwipsFromFont(self, FontName: hints.Incomplete, Size: hints.Incomplete, Weight: hints.Incomplete, Italic: hints.Incomplete, Underline: hints.Incomplete, Cch: hints.Incomplete, Caption: hints.Incomplete, MaxWidthCch: hints.Incomplete, dx: hints.Incomplete, dy: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def ObjTypOfRecordSource(self, RecordSource: hints.Incomplete) -> hints.Incomplete: ...
        def IsValidIdent(self, Identifier: hints.Incomplete) -> hints.Incomplete: ...
        def SortStringArray(self, Array: hints.Incomplete) -> hints.Incomplete: ...
        def AnalyzeTable(self, Workspace: hints.Incomplete, Database: hints.Incomplete, Table: hints.Incomplete, ReturnDebugInfo: hints.Incomplete, Results: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def AnalyzeQuery(self, Workspace: hints.Incomplete, Database: hints.Incomplete, Query: hints.Incomplete, Results: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def GetFileName(self, hwndOwner: hints.Incomplete, AppName: hints.Incomplete, DlgTitle: hints.Incomplete, OpenTitle: hints.Incomplete, File: hints.Incomplete, InitialDir: hints.Incomplete, Filter: hints.Incomplete, FilterIndex: hints.Incomplete, View: hints.Incomplete, flags: hints.Incomplete, fOpen: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def CreateDataPageControl(self, DpName: hints.Incomplete, CtlName: hints.Incomplete, Typ: hints.Incomplete, Section: hints.Incomplete, SectionType: hints.Incomplete, AppletCode: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, dx: hints.Incomplete, dy: hints.Incomplete) -> hints.Hresult: ...
        def KnownWizLeaks(self, fStart: hints.Incomplete) -> hints.Hresult: ...
        def SetVbaPassword(self, bstrDbName: hints.Incomplete, bstrConnect: hints.Incomplete, bstrPasswd: hints.Incomplete) -> hints.Incomplete: ...
        def LocalFont(self) -> hints.Incomplete: ...
        def SaveObject(self, bstrName: hints.Incomplete, objtyp: hints.Incomplete) -> hints.Hresult: ...
        def CurrentLangID(self) -> hints.Incomplete: ...
        def KeyboardLangID(self) -> hints.Incomplete: ...
        def AccessUserDataDir(self) -> hints.Incomplete: ...
        def OfficeAddInDir(self) -> hints.Incomplete: ...
        def EmbedFileOnDataPage(self, DpName: hints.Incomplete, FileToInsert: hints.Incomplete) -> hints.Incomplete: ...
        def _get_DbcVbProject(self) -> hints.Incomplete: ...
        DbcVbProject = hints.normal_property(_get_DbcVbProject)
        def ReportLeaksToFile(self, fRptToFile: hints.Incomplete, bstrFileOut: hints.Incomplete) -> hints.Hresult: ...
        def _get_IsMatchToDbcConnectString(self, bstrConnectionString: hints.Incomplete) -> hints.Incomplete: ...
        IsMatchToDbcConnectString = hints.named_property('IsMatchToDbcConnectString', _get_IsMatchToDbcConnectString)
        def LoadImexSpecSolution(self, bstrFilename: hints.Incomplete) -> hints.Hresult: ...
        def SetDpBlockKeyInput(self, fBlockKeys: hints.Incomplete) -> hints.Hresult: ...
        def FirstDbcDataObject(self, Name: hints.Incomplete, ObjType: hints.Incomplete, Attribs: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def CloseCurrentDatabase(self) -> hints.Incomplete: ...
        def AccessWizFilePath(self, bstrWhich: hints.Incomplete) -> hints.Incomplete: ...
        def HideDates(self) -> hints.Incomplete: ...
        def GetColumns(self, bstrBase: hints.Incomplete) -> hints.Incomplete: ...
        def GetFileOdso(self, bstrExt: hints.Incomplete, bstrFilename: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def GetInfoForColumns(self, bstrBase: hints.Incomplete) -> hints.Incomplete: ...
        def GetFileName2(self, hwndOwner: hints.Incomplete, AppName: hints.Incomplete, DlgTitle: hints.Incomplete, OpenTitle: hints.Incomplete, File: hints.Incomplete, InitialDir: hints.Incomplete, Filter: hints.Incomplete, FilterIndex: hints.Incomplete, View: hints.Incomplete, flags: hints.Incomplete, fOpen: hints.Incomplete, fFileSystem: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def FGetMSDE(self, fBlockKeys: hints.Incomplete) -> hints.Incomplete: ...
        def WizMsgBox(self, bstrText: hints.Incomplete, bstrCaption: hints.Incomplete, wStyle: hints.Incomplete, idHelpID: hints.Incomplete, bstrHelpFileName: hints.Incomplete) -> hints.Incomplete: ...
        def AdpUIDPwd(self, pbstrUID: hints.Incomplete, pbstrPwd: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def SetWizGlob(self, lWhich: hints.Incomplete, vValue: hints.Incomplete) -> hints.Hresult: ...
        def GetWizGlob(self, lWhich: hints.Incomplete) -> hints.Incomplete: ...
        def WizCopyCmdbars(self, bstrADPName: hints.Incomplete) -> hints.Hresult: ...
        def GetCurrentView(self, bstrTableName: hints.Incomplete) -> hints.Incomplete: ...
        def FIsFEWch(self, wch: hints.Incomplete) -> hints.Incomplete: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def GetAccWizRCPath(self) -> hints.Incomplete: ...
        def FCreateNameMap(self, objtyp: hints.Incomplete, bstrObjName: hints.Incomplete) -> hints.Incomplete: ...
        def GetAdeRegistryPath(self) -> hints.Incomplete: ...
        def ExecuteTempImexSpec(self, bstrSpecXML: hints.Incomplete) -> hints.Hresult: ...
        def FCacheStatus(self) -> hints.Incomplete: ...
        def CacheStatus(self, bstrStatus: hints.Incomplete) -> hints.Hresult: ...
        def SetDefaultSpecName(self, bstrSpecName: hints.Incomplete) -> hints.Hresult: ...
        def GetImexTblName(self) -> hints.Incomplete: ...
        def GetLinkedListProperty(self, bstrTableName: hints.Incomplete, bstrPropertyName: hints.Incomplete, fServer: hints.Incomplete) -> hints.Incomplete: ...
        def OpenEmScript(self, pProperty: hints.Incomplete, OpenMode: hints.Incomplete, Extra: hints.Incomplete, Version: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def GetDisabledExtensions(self) -> hints.Incomplete: ...
        def GetObjPubOption(self, bstrObjectName: hints.Incomplete, iobjtyp: hints.Incomplete, fTablesAsClient: hints.Incomplete) -> hints.Incomplete: ...
        def FIsPublishedXasTable(self, bstrObjectName: hints.Incomplete) -> hints.Incomplete: ...
        def FIsXasDb(self) -> hints.Incomplete: ...
        def FIsValidXasObjectName(self, bstrObjectName: hints.Incomplete, iobjtyp: hints.Incomplete) -> hints.Incomplete: ...
        def LoadResourceLibrary(self, bstrObjectName: hints.Incomplete) -> hints.Incomplete: ...
        def FWizReadFile(self, hFile: hints.Incomplete, nNumberOfBytesToRead: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def FWizWriteFile(self, hFile: hints.Incomplete, lpBuffer: hints.Incomplete, nNumberOfBytesToWrite: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def FWizCloseHandle(self, hFile: hints.Incomplete) -> hints.Incomplete: ...
        def FWizCreateFile(self, bstrFilename: hints.Incomplete, dwDesiredAccess: hints.Incomplete, dwShareMode: hints.Incomplete, dwCreationDisposition: hints.Incomplete, dwFlagsAndAttributes: hints.Incomplete) -> hints.Incomplete: ...
        def FWizDeleteFile(self, bstrFilename: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetProfileString(self, lpAppName: hints.Incomplete, lpKeyName: hints.Incomplete, lpDefault: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def IWizLStrlen(self, lpString: hints.Incomplete) -> hints.Incomplete: ...
        def FWizLStrcpyn(self, lpString2: hints.Incomplete, iMaxLength: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizWNetGetUniversalName(self, lpLocalPath: hints.Incomplete, dwInfoLevel: hints.Incomplete, lpBufferSize: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def FWizGetComputerName(self, nSize: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def DWizGetVersion(self) -> hints.Incomplete: ...
        def DWizGetShortPathName(self, lpszLongPath: hints.Incomplete, cchBuffer: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizGetTickCount(self) -> hints.Incomplete: ...
        def DWizGetTempPath(self) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizGetTempFileName(self, lpPathName: hints.Incomplete, lpPrefixString: hints.Incomplete, uUnique: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizGetSystemDefaultLCID(self) -> hints.Incomplete: ...
        def DWizGetUserDefaultLCID(self) -> hints.Incomplete: ...
        def DWizGetLocaleInfo(self, Locale: hints.Incomplete, LCType: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizMulDiv(self, nNumber: hints.Incomplete, nNumerator: hints.Incomplete, nDenominator: hints.Incomplete) -> hints.Incomplete: ...
        def FWizGlobalAlloc(self, uFlags: hints.Incomplete, dwBytes: hints.Incomplete) -> hints.Incomplete: ...
        def WizGlobalFree(self, hMem: hints.Incomplete) -> hints.Hresult: ...
        def FWizGlobalLock(self, hMem: hints.Incomplete) -> hints.Incomplete: ...
        def WizGlobalUnlock(self, hMem: hints.Incomplete) -> hints.Hresult: ...
        def DWizFreeLibrary(self, hLibModule: hints.Incomplete) -> hints.Incomplete: ...
        def FWizLoadResource(self, hModule: hints.Incomplete, hResInfo: hints.Incomplete) -> hints.Incomplete: ...
        def FWizFindResource(self, hModule: hints.Incomplete, lpName: hints.Incomplete, lpType: hints.Incomplete) -> hints.Incomplete: ...
        def FWizLockResource(self, hResData: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSizeofResource(self, hModule: hints.Incomplete, hResInfo: hints.Incomplete) -> hints.Incomplete: ...
        def DWizMultiByteToWideChar(self, CodePage: hints.Incomplete, dwFlags: hints.Incomplete, lpMultiByteStr: hints.Incomplete, cbMultiByte: hints.Incomplete, lpWideCharStr: hints.Incomplete, cchWideChar: hints.Incomplete) -> hints.Incomplete: ...
        def DWizMultiByteToWideCharV2(self, CodePage: hints.Incomplete, dwFlags: hints.Incomplete, lpMultiByteStr: hints.Incomplete, cbMultiByte: hints.Incomplete, lpWideCharStr: hints.Incomplete, cchWideChar: hints.Incomplete) -> hints.Incomplete: ...
        def FWizIsCharsetWide(self) -> hints.Incomplete: ...
        def DWizGetACP(self) -> hints.Incomplete: ...
        def WizRtlMoveMemory(self, Destination: hints.Incomplete, Source: hints.Incomplete, Length: hints.Incomplete) -> hints.Hresult: ...
        def WizRtlMoveMemory2(self, Source: hints.Incomplete, Length: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetDC(self, Hwnd: hints.Incomplete) -> hints.Incomplete: ...
        def DWizReleaseDC(self, Hwnd: hints.Incomplete, hdc: hints.Incomplete) -> hints.Incomplete: ...
        def FWizDeleteDC(self, hdc: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetDeviceCaps(self, hdc: hints.Incomplete, nIndex: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSelectObject(self, hdc: hints.Incomplete, h: hints.Incomplete) -> hints.Incomplete: ...
        def FWizDeleteObject(self, ho: hints.Incomplete) -> hints.Incomplete: ...
        def FWizGetTextMetrics(self, hdc: hints.Incomplete, typTM: hints.Incomplete) -> hints.Incomplete: ...
        def FWizGetTextExtentPoint32(self, hdc: hints.Incomplete, lpString: hints.Incomplete, c: hints.Incomplete, psizl: hints.Incomplete) -> hints.Incomplete: ...
        def FWizIsWindow(self, Hwnd: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetActiveWindow(self) -> hints.Incomplete: ...
        def DWizGetSystemMetrics(self, nIndex: hints.Incomplete) -> hints.Incomplete: ...
        def FWizSetForegroundWindow(self, Hwnd: hints.Incomplete) -> hints.Incomplete: ...
        def WizGetWindowRect(self, Hwnd: hints.Incomplete, lpRect: hints.Incomplete) -> hints.Hresult: ...
        def DWizSendMessage(self, Hwnd: hints.Incomplete, Msg: hints.Incomplete, wParam: hints.Incomplete, lParam: hints.Incomplete) -> hints.Incomplete: ...
        def WizMsgWaitForMultipleObjectsEx(self, nCount: hints.Incomplete, dwMilliseconds: hints.Incomplete, dwWakeMask: hints.Incomplete, dwFlags: hints.Incomplete) -> hints.Hresult: ...
        def FWizIsCharAlphaA(self, ch: hints.Incomplete) -> hints.Incomplete: ...
        def FWizIsCharAlphaW(self, ch: hints.Incomplete) -> hints.Incomplete: ...
        def FWizIsCharAlphaNumericA(self, ch: hints.Incomplete) -> hints.Incomplete: ...
        def FWizIsCharAlphaNumericW(self, ch: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetClassName(self, Hwnd: hints.Incomplete, lpClassName: hints.Incomplete) -> hints.Incomplete: ...
        def DWizGetWindow(self, Hwnd: hints.Incomplete, nCmd: hints.Incomplete) -> hints.Incomplete: ...
        def FWizSHGetPathFromIDList(self, csidl: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizCreateFontIndirect(self, lpLogFont: hints.Incomplete) -> hints.Incomplete: ...
        def DWizCreateDC(self, lpszDriver: hints.Incomplete) -> hints.Incomplete: ...
        def FWizChooseFont(self, lpChooseFont: hints.Incomplete) -> hints.Incomplete: ...
        def FWizTranslateCharsetInfo(self, lpSrc: hints.Incomplete, lpCs: hints.Incomplete, dwFlags: hints.Incomplete) -> hints.Incomplete: ...
        def WizVariantChangeType(self, pvarSrc: hints.Incomplete, llcid: hints.Incomplete, wFlags: hints.Incomplete, vt: hints.Incomplete) -> hints.Incomplete: ...
        def WizTapiRequestMakeCall(self, lpszDestAddress: hints.Incomplete) -> hints.Incomplete: ...
        def DWizNetShareEnum(self, lpServerName: hints.Incomplete, dwLevel: hints.Incomplete, cbBuffer: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def WizNetApiBufferFree(self, lpBuffer: hints.Incomplete) -> hints.Hresult: ...
        def DWizEnumFontFamilies(self, hdc: hints.Incomplete, lpszFamily: hints.Incomplete, lpEnumFontFamProc: hints.Incomplete, lParam: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSQLBrowseConnect(self, hdbc: hints.Incomplete, szConnStrIn: hints.Incomplete, cbConnStrIn: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def DWizSQLAllocEnv(self) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizSQLAllocConnect(self, henv: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def DWizSQLDisconnect(self, hdbc: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSQLFreeConnect(self, hdbc: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSQLFreeEnv(self, henv: hints.Incomplete) -> hints.Incomplete: ...
        def DWizSQLError(self, henv: hints.Incomplete, hdbc: hints.Incomplete, hstmt: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def WizEnableWindow(self, Hwnd: hints.Incomplete, bEnable: hints.Incomplete) -> hints.Hresult: ...
        def DWizWNetGetUser(self, lpName: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


WizHook._com_interfaces_ = [_WizHook]
A_DOWN = 1  # Constant c_short
acGridlinesHoriz = 1  # Constant c_short
DB_LANG_GREEK = ';LANGID=0x0408;CP=1253;COUNTRY=0'  # Constant STRING
A_CURRENT = 1  # Constant c_short
acGridlinesVert = 2  # Constant c_short
DB_LANG_HEBREW = ';LANGID=0x040D;CP=1255;COUNTRY=0'  # Constant STRING
acGridlinesBoth = 3  # Constant c_short


class _AccessProperty(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Property):
    _case_insensitive_ = True
    _iid_ = GUID('{331FDD00-CF31-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Category(self) -> hints.Incomplete: ...
        Category = hints.normal_property(_get_Category)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_WizHook._methods_ = [
    COMMETHOD(
        [dispid(2237), 'hidden', 'propput'],
        HRESULT,
        'Key',
        (['in'], c_int, 'rhs')
    ),
    COMMETHOD(
        [dispid(2234), 'hidden'],
        HRESULT,
        'NameFromActid',
        (['in'], c_int, 'Actid'),
        (['out', 'retval'], POINTER(BSTR), 'Name')
    ),
    COMMETHOD(
        [dispid(2236), 'hidden'],
        HRESULT,
        'ArgsOfActid',
        (['in'], c_int, 'Actid'),
        (['out', 'retval'], POINTER(c_int), 'CArgs')
    ),
    COMMETHOD(
        [dispid(2238), 'hidden'],
        HRESULT,
        'OpenScript',
        (['in'], BSTR, 'Script'),
        (['in'], BSTR, 'Label'),
        (['in'], c_int, 'OpenMode'),
        (['in', 'out'], POINTER(c_int), 'Extra'),
        (['in', 'out'], POINTER(c_int), 'Version'),
        (['out', 'retval'], POINTER(c_int), 'HScr')
    ),
    COMMETHOD(
        [dispid(2239), 'hidden'],
        HRESULT,
        'GetScriptString',
        (['in'], c_int, 'HScr'),
        (['in'], c_int, 'ScriptColumn'),
        (['in', 'out'], POINTER(BSTR), 'Value'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2240), 'hidden'],
        HRESULT,
        'SaveScriptString',
        (['in'], c_int, 'HScr'),
        (['in'], c_int, 'ScriptColumn'),
        (['in'], BSTR, 'Value'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2241), 'hidden'],
        HRESULT,
        'GlobalProcExists',
        (['in'], BSTR, 'Name'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2242), 'hidden'],
        HRESULT,
        'TableFieldHasUniqueIndex',
        (['in'], BSTR, 'Table'),
        (['in'], BSTR, 'Columns'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2243), 'hidden'],
        HRESULT,
        'BracketString',
        (['in', 'out'], POINTER(BSTR), 'String'),
        (['in'], c_int, 'flags'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2244), 'hidden'],
        HRESULT,
        'WizHelp',
        (['in'], BSTR, 'HelpFile'),
        (['in'], c_int, 'wCmd'),
        (['in'], c_int, 'ContextID'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2245), 'hidden'],
        HRESULT,
        'OpenPictureFile',
        (['in', 'out'], POINTER(BSTR), 'File'),
        (['in', 'out'], POINTER(VARIANT_BOOL), 'Cancelled'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2246), 'hidden'],
        HRESULT,
        'EnglishPictToLocal',
        (['in'], BSTR, 'In'),
        (['in', 'out'], POINTER(BSTR), 'Out'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2247), 'hidden'],
        HRESULT,
        'TranslateExpression',
        (['in'], BSTR, 'In'),
        (['in', 'out'], POINTER(BSTR), 'Out'),
        (['in'], c_int, 'ParseFlags'),
        (['in'], c_int, 'TranslateFlags'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2248), 'hidden'],
        HRESULT,
        'FileExists',
        (['in'], BSTR, 'File'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2249), 'hidden'],
        HRESULT,
        'FullPath',
        (['in'], BSTR, 'RelativePath'),
        (['in', 'out'], POINTER(BSTR), 'FullPath'),
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2250), 'hidden'],
        HRESULT,
        'SplitPath',
        (['in'], BSTR, 'Path'),
        (['in', 'out'], POINTER(BSTR), 'Drive'),
        (['in', 'out'], POINTER(BSTR), 'Dir'),
        (['in', 'out'], POINTER(BSTR), 'File'),
        (['in', 'out'], POINTER(BSTR), 'Ext')
    ),
    COMMETHOD(
        [dispid(2251), 'hidden'],
        HRESULT,
        'TwipsFromFont',
        (['in'], BSTR, 'FontName'),
        (['in'], c_int, 'Size'),
        (['in'], c_int, 'Weight'),
        (['in'], VARIANT_BOOL, 'Italic'),
        (['in'], VARIANT_BOOL, 'Underline'),
        (['in'], c_int, 'Cch'),
        (['in'], BSTR, 'Caption'),
        (['in'], c_int, 'MaxWidthCch'),
        (['in', 'out'], POINTER(c_int), 'dx'),
        (['in', 'out'], POINTER(c_int), 'dy'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2252), 'hidden'],
        HRESULT,
        'ObjTypOfRecordSource',
        (['in'], BSTR, 'RecordSource'),
        (['out', 'retval'], POINTER(c_short), 'pobjtyp')
    ),
    COMMETHOD(
        [dispid(2253), 'hidden'],
        HRESULT,
        'IsValidIdent',
        (['in'], BSTR, 'Identifier'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2254), 'hidden'],
        HRESULT,
        'SortStringArray',
        (['in', 'out'], POINTER(_midlSAFEARRAY(BSTR)), 'Array')
    ),
    COMMETHOD(
        [dispid(2255), 'hidden'],
        HRESULT,
        'AnalyzeTable',
        (
            ['in'],
            POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Workspace),
            'Workspace',
        ),
        (
            ['in'],
            POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Database),
            'Database',
        ),
        (['in'], BSTR, 'Table'),
        (['in'], VARIANT_BOOL, 'ReturnDebugInfo'),
        (['in', 'out'], POINTER(BSTR), 'Results'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2256), 'hidden'],
        HRESULT,
        'AnalyzeQuery',
        (
            ['in'],
            POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Workspace),
            'Workspace',
        ),
        (
            ['in'],
            POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Database),
            'Database',
        ),
        (['in'], BSTR, 'Query'),
        (['in', 'out'], POINTER(BSTR), 'Results'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2261), 'hidden'],
        HRESULT,
        'GetFileName',
        (['in'], c_int, 'hwndOwner'),
        (['in'], BSTR, 'AppName'),
        (['in'], BSTR, 'DlgTitle'),
        (['in'], BSTR, 'OpenTitle'),
        (['in', 'out'], POINTER(BSTR), 'File'),
        (['in'], BSTR, 'InitialDir'),
        (['in'], BSTR, 'Filter'),
        (['in'], c_int, 'FilterIndex'),
        (['in'], c_int, 'View'),
        (['in'], c_int, 'flags'),
        (['in'], VARIANT_BOOL, 'fOpen'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2265), 'hidden'],
        HRESULT,
        'CreateDataPageControl',
        (['in'], BSTR, 'DpName'),
        (['in'], BSTR, 'CtlName'),
        (['in'], c_int, 'Typ'),
        (['in'], BSTR, 'Section'),
        (['in'], c_int, 'SectionType'),
        (['in'], BSTR, 'AppletCode'),
        (['in'], c_int, 'X'),
        (['in'], c_int, 'Y'),
        (['in'], c_int, 'dx'),
        (['in'], c_int, 'dy')
    ),
    COMMETHOD(
        [dispid(2273), 'hidden'],
        HRESULT,
        'KnownWizLeaks',
        (['in'], VARIANT_BOOL, 'fStart')
    ),
    COMMETHOD(
        [dispid(2294), 'hidden'],
        HRESULT,
        'SetVbaPassword',
        (['in'], BSTR, 'bstrDbName'),
        (['in'], BSTR, 'bstrConnect'),
        (['in'], BSTR, 'bstrPasswd'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2295), 'hidden'],
        HRESULT,
        'LocalFont',
        (['out', 'retval'], POINTER(BSTR), 'FontName')
    ),
    COMMETHOD(
        [dispid(2296), 'hidden'],
        HRESULT,
        'SaveObject',
        (['in'], BSTR, 'bstrName'),
        (['in'], c_short, 'objtyp')
    ),
    COMMETHOD(
        [dispid(2299), 'hidden'],
        HRESULT,
        'CurrentLangID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2300), 'hidden'],
        HRESULT,
        'KeyboardLangID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2302), 'hidden'],
        HRESULT,
        'AccessUserDataDir',
        (['out', 'retval'], POINTER(BSTR), 'Path')
    ),
    COMMETHOD(
        [dispid(2303), 'hidden'],
        HRESULT,
        'OfficeAddInDir',
        (['out', 'retval'], POINTER(BSTR), 'Path')
    ),
    COMMETHOD(
        [dispid(2305), 'hidden'],
        HRESULT,
        'EmbedFileOnDataPage',
        (['in'], BSTR, 'DpName'),
        (['in'], BSTR, 'FileToInsert'),
        (['out', 'retval'], POINTER(BSTR), 'FileToUse')
    ),
    COMMETHOD(
        [dispid(2306), 'hidden', 'propget'],
        HRESULT,
        'DbcVbProject',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3._VBProject)),
            'VbProject',
        )
    ),
    COMMETHOD(
        [dispid(2292), 'hidden'],
        HRESULT,
        'ReportLeaksToFile',
        (['in'], VARIANT_BOOL, 'fRptToFile'),
        (['in'], BSTR, 'bstrFileOut')
    ),
    COMMETHOD(
        [dispid(2291), 'hidden', 'propget'],
        HRESULT,
        'IsMatchToDbcConnectString',
        (['in'], BSTR, 'bstrConnectionString'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2282), 'hidden'],
        HRESULT,
        'LoadImexSpecSolution',
        (['in'], BSTR, 'bstrFilename')
    ),
    COMMETHOD(
        [dispid(2283), 'hidden'],
        HRESULT,
        'SetDpBlockKeyInput',
        (['in'], VARIANT_BOOL, 'fBlockKeys')
    ),
    COMMETHOD(
        [dispid(2323), 'hidden'],
        HRESULT,
        'FirstDbcDataObject',
        (['in', 'out'], POINTER(BSTR), 'Name'),
        (['in', 'out'], POINTER(AcObjectType), 'ObjType'),
        (['in', 'out'], POINTER(c_int), 'Attribs'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2324), 'hidden'],
        HRESULT,
        'CloseCurrentDatabase',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2330), 'hidden'],
        HRESULT,
        'AccessWizFilePath',
        (['in'], BSTR, 'bstrWhich'),
        (['out', 'retval'], POINTER(BSTR), 'Path')
    ),
    COMMETHOD(
        [dispid(2333), 'hidden'],
        HRESULT,
        'HideDates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2338), 'hidden'],
        HRESULT,
        'GetColumns',
        (['in'], BSTR, 'bstrBase'),
        (['out', 'retval'], POINTER(BSTR), 'bstrColumns')
    ),
    COMMETHOD(
        [dispid(2339), 'hidden'],
        HRESULT,
        'GetFileOdso',
        (['in'], BSTR, 'bstrExt'),
        (['in', 'out'], POINTER(BSTR), 'bstrFilename'),
        (['out', 'retval'], POINTER(c_int), 'plKind')
    ),
    COMMETHOD(
        [dispid(2366), 'hidden'],
        HRESULT,
        'GetInfoForColumns',
        (['in'], BSTR, 'bstrBase'),
        (['out', 'retval'], POINTER(BSTR), 'bstrColumns')
    ),
    COMMETHOD(
        [dispid(2368), 'hidden'],
        HRESULT,
        'GetFileName2',
        (['in'], c_int, 'hwndOwner'),
        (['in'], BSTR, 'AppName'),
        (['in'], BSTR, 'DlgTitle'),
        (['in'], BSTR, 'OpenTitle'),
        (['in', 'out'], POINTER(BSTR), 'File'),
        (['in'], BSTR, 'InitialDir'),
        (['in'], BSTR, 'Filter'),
        (['in'], c_int, 'FilterIndex'),
        (['in'], c_int, 'View'),
        (['in'], c_int, 'flags'),
        (['in'], VARIANT_BOOL, 'fOpen'),
        (['in'], VARIANT, 'fFileSystem'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2411), 'hidden'],
        HRESULT,
        'FGetMSDE',
        (['in'], VARIANT_BOOL, 'fBlockKeys'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2416), 'hidden'],
        HRESULT,
        'WizMsgBox',
        (['in'], BSTR, 'bstrText'),
        (['in'], BSTR, 'bstrCaption'),
        (['in'], c_int, 'wStyle'),
        (['in'], c_int, 'idHelpID'),
        (['in'], BSTR, 'bstrHelpFileName'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2417), 'hidden'],
        HRESULT,
        'AdpUIDPwd',
        (['in', 'out'], POINTER(BSTR), 'pbstrUID'),
        (['in', 'out'], POINTER(BSTR), 'pbstrPwd'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fIntegrated')
    ),
    COMMETHOD(
        [dispid(2419), 'hidden'],
        HRESULT,
        'SetWizGlob',
        (['in'], c_int, 'lWhich'),
        (['in'], VARIANT, 'vValue')
    ),
    COMMETHOD(
        [dispid(2420), 'hidden'],
        HRESULT,
        'GetWizGlob',
        (['in'], c_int, 'lWhich'),
        (['out', 'retval'], POINTER(VARIANT), 'vValue')
    ),
    COMMETHOD(
        [dispid(2421), 'hidden'],
        HRESULT,
        'WizCopyCmdbars',
        (['in'], BSTR, 'bstrADPName')
    ),
    COMMETHOD(
        [dispid(2426), 'hidden'],
        HRESULT,
        'GetCurrentView',
        (['in'], BSTR, 'bstrTableName'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2427), 'hidden'],
        HRESULT,
        'FIsFEWch',
        (['in'], c_int, 'wch'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fIsFE')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2450), 'hidden'],
        HRESULT,
        'GetAccWizRCPath',
        (['out', 'retval'], POINTER(BSTR), 'Path')
    ),
    COMMETHOD(
        [dispid(2451), 'hidden'],
        HRESULT,
        'FCreateNameMap',
        (['in'], c_short, 'objtyp'),
        (['in'], BSTR, 'bstrObjName'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2458), 'hidden'],
        HRESULT,
        'GetAdeRegistryPath',
        (['out', 'retval'], POINTER(BSTR), 'RegPath')
    ),
    COMMETHOD(
        [dispid(2461), 'hidden'],
        HRESULT,
        'ExecuteTempImexSpec',
        (['in'], BSTR, 'bstrSpecXML')
    ),
    COMMETHOD(
        [dispid(2463), 'hidden'],
        HRESULT,
        'FCacheStatus',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'FCacheStatus')
    ),
    COMMETHOD(
        [dispid(2464), 'hidden'],
        HRESULT,
        'CacheStatus',
        (['in'], BSTR, 'bstrStatus')
    ),
    COMMETHOD(
        [dispid(2465), 'hidden'],
        HRESULT,
        'SetDefaultSpecName',
        (['in'], BSTR, 'bstrSpecName')
    ),
    COMMETHOD(
        [dispid(2466), 'hidden'],
        HRESULT,
        'GetImexTblName',
        (['out', 'retval'], POINTER(BSTR), 'pbstrTblName')
    ),
    COMMETHOD(
        [dispid(2467), 'hidden'],
        HRESULT,
        'GetLinkedListProperty',
        (['in'], BSTR, 'bstrTableName'),
        (['in'], BSTR, 'bstrPropertyName'),
        (['in'], VARIANT_BOOL, 'fServer'),
        (['out', 'retval'], POINTER(BSTR), 'pbstrPropertyValue')
    ),
    COMMETHOD(
        [dispid(2504), 'hidden'],
        HRESULT,
        'OpenEmScript',
        (['in'], POINTER(_AccessProperty), 'pProperty'),
        (['in'], c_int, 'OpenMode'),
        (['in', 'out'], POINTER(c_int), 'Extra'),
        (['in', 'out'], POINTER(c_int), 'Version'),
        (['out', 'retval'], POINTER(c_int), 'HScr')
    ),
    COMMETHOD(
        [dispid(2542), 'hidden'],
        HRESULT,
        'GetDisabledExtensions',
        (['out', 'retval'], POINTER(BSTR), 'Exts')
    ),
    COMMETHOD(
        [dispid(2592), 'hidden'],
        HRESULT,
        'GetObjPubOption',
        (['in'], BSTR, 'bstrObjectName'),
        (['in'], AcObjectType, 'iobjtyp'),
        (['in'], VARIANT_BOOL, 'fTablesAsClient'),
        (['out', 'retval'], POINTER(c_int), 'pObjPubOpt')
    ),
    COMMETHOD(
        [dispid(2593), 'hidden'],
        HRESULT,
        'FIsPublishedXasTable',
        (['in'], BSTR, 'bstrObjectName'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2595), 'hidden'],
        HRESULT,
        'FIsXasDb',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2597), 'hidden'],
        HRESULT,
        'FIsValidXasObjectName',
        (['in'], BSTR, 'bstrObjectName'),
        (['in'], AcObjectType, 'iobjtyp'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2637), 'hidden'],
        HRESULT,
        'LoadResourceLibrary',
        (['in'], BSTR, 'bstrObjectName'),
        (['out', 'retval'], POINTER(VARIANT), 'HDll')
    ),
    COMMETHOD(
        [dispid(2669), 'hidden'],
        HRESULT,
        'FWizReadFile',
        (
            ['in'],
            comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_HANDLE,
            'hFile',
        ),
        (['out'], POINTER(BSTR), 'lpBuffer'),
        (['in'], c_int, 'nNumberOfBytesToRead'),
        (['out'], POINTER(c_int), 'lpNumberOfBytesRead'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2670), 'hidden'],
        HRESULT,
        'FWizWriteFile',
        (
            ['in'],
            comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_HANDLE,
            'hFile',
        ),
        (['in'], POINTER(BSTR), 'lpBuffer'),
        (['in'], c_int, 'nNumberOfBytesToWrite'),
        (['out'], POINTER(c_int), 'lpNumberOfBytesWritten'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2673), 'hidden'],
        HRESULT,
        'FWizCloseHandle',
        (
            ['in'],
            comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.OLE_HANDLE,
            'hFile',
        ),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2671), 'hidden'],
        HRESULT,
        'FWizCreateFile',
        (['in'], BSTR, 'bstrFilename'),
        (['in'], c_int, 'dwDesiredAccess'),
        (['in'], c_int, 'dwShareMode'),
        (['in'], c_int, 'dwCreationDisposition'),
        (['in'], c_int, 'dwFlagsAndAttributes'),
        (['out', 'retval'], POINTER(VARIANT), 'fRet')
    ),
    COMMETHOD(
        [dispid(2672), 'hidden'],
        HRESULT,
        'FWizDeleteFile',
        (['in'], BSTR, 'bstrFilename'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'fRet')
    ),
    COMMETHOD(
        [dispid(2674), 'hidden'],
        HRESULT,
        'DWizGetProfileString',
        (['in'], BSTR, 'lpAppName'),
        (['in'], BSTR, 'lpKeyName'),
        (['in'], BSTR, 'lpDefault'),
        (['out'], POINTER(BSTR), 'lpReturnedString'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2675), 'hidden'],
        HRESULT,
        'IWizLStrlen',
        (['in'], BSTR, 'lpString'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2676), 'hidden'],
        HRESULT,
        'FWizLStrcpyn',
        (['out'], POINTER(BSTR), 'lpString1'),
        (['in'], VARIANT, 'lpString2'),
        (['in'], c_int, 'iMaxLength'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2677), 'hidden'],
        HRESULT,
        'DWizWNetGetUniversalName',
        (['in'], BSTR, 'lpLocalPath'),
        (['in'], c_int, 'dwInfoLevel'),
        (['out'], POINTER(BSTR), 'lpBuffer'),
        (['in', 'out'], POINTER(c_int), 'lpBufferSize'),
        (['out', 'retval'], POINTER(c_int), 'lpRet')
    ),
    COMMETHOD(
        [dispid(2678), 'hidden'],
        HRESULT,
        'FWizGetComputerName',
        (['out'], POINTER(BSTR), 'lpBuffer'),
        (['in', 'out'], POINTER(c_int), 'nSize'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2679), 'hidden'],
        HRESULT,
        'DWizGetVersion',
        (['out', 'retval'], POINTER(c_int), 'pVersion')
    ),
    COMMETHOD(
        [dispid(2680), 'hidden'],
        HRESULT,
        'DWizGetShortPathName',
        (['in'], BSTR, 'lpszLongPath'),
        (['out'], POINTER(BSTR), 'lpszShortPath'),
        (['in'], c_int, 'cchBuffer'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2681), 'hidden'],
        HRESULT,
        'DWizGetTickCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2682), 'hidden'],
        HRESULT,
        'DWizGetTempPath',
        (['out'], POINTER(BSTR), 'lpBuffer'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2683), 'hidden'],
        HRESULT,
        'DWizGetTempFileName',
        (['in'], BSTR, 'lpPathName'),
        (['in'], BSTR, 'lpPrefixString'),
        (['in'], c_int, 'uUnique'),
        (['out'], POINTER(BSTR), 'lpTempFileName'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2684), 'hidden'],
        HRESULT,
        'DWizGetSystemDefaultLCID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2685), 'hidden'],
        HRESULT,
        'DWizGetUserDefaultLCID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2686), 'hidden'],
        HRESULT,
        'DWizGetLocaleInfo',
        (['in'], c_int, 'Locale'),
        (['in'], c_int, 'LCType'),
        (['out'], POINTER(BSTR), 'lpLCData'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2687), 'hidden'],
        HRESULT,
        'DWizMulDiv',
        (['in'], c_int, 'nNumber'),
        (['in'], c_int, 'nNumerator'),
        (['in'], c_int, 'nDenominator'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2688), 'hidden'],
        HRESULT,
        'FWizGlobalAlloc',
        (['in'], c_int, 'uFlags'),
        (['in'], c_int, 'dwBytes'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2689), 'hidden'],
        HRESULT,
        'WizGlobalFree',
        (['in'], POINTER(VARIANT), 'hMem')
    ),
    COMMETHOD(
        [dispid(2690), 'hidden'],
        HRESULT,
        'FWizGlobalLock',
        (['in'], POINTER(VARIANT), 'hMem'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2691), 'hidden'],
        HRESULT,
        'WizGlobalUnlock',
        (['in'], POINTER(VARIANT), 'hMem')
    ),
    COMMETHOD(
        [dispid(2692), 'hidden'],
        HRESULT,
        'DWizFreeLibrary',
        (['in'], POINTER(VARIANT), 'hLibModule'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2693), 'hidden'],
        HRESULT,
        'FWizLoadResource',
        (['in'], POINTER(VARIANT), 'hModule'),
        (['in'], POINTER(VARIANT), 'hResInfo'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2694), 'hidden'],
        HRESULT,
        'FWizFindResource',
        (['in'], POINTER(VARIANT), 'hModule'),
        (['in'], BSTR, 'lpName'),
        (['in'], BSTR, 'lpType'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2695), 'hidden'],
        HRESULT,
        'FWizLockResource',
        (['in'], POINTER(VARIANT), 'hResData'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2696), 'hidden'],
        HRESULT,
        'DWizSizeofResource',
        (['in'], POINTER(VARIANT), 'hModule'),
        (['in'], POINTER(VARIANT), 'hResInfo'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2697), 'hidden'],
        HRESULT,
        'DWizMultiByteToWideChar',
        (['in'], c_int, 'CodePage'),
        (['in'], c_int, 'dwFlags'),
        (['in'], VARIANT, 'lpMultiByteStr'),
        (['in'], c_int, 'cbMultiByte'),
        (['in'], VARIANT, 'lpWideCharStr'),
        (['in'], c_int, 'cchWideChar'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2698), 'hidden'],
        HRESULT,
        'DWizMultiByteToWideCharV2',
        (['in'], c_int, 'CodePage'),
        (['in'], c_int, 'dwFlags'),
        (['in'], BSTR, 'lpMultiByteStr'),
        (['in'], c_int, 'cbMultiByte'),
        (['in'], BSTR, 'lpWideCharStr'),
        (['in'], c_int, 'cchWideChar'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2699), 'hidden'],
        HRESULT,
        'FWizIsCharsetWide',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2700), 'hidden'],
        HRESULT,
        'DWizGetACP',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2701), 'hidden'],
        HRESULT,
        'WizRtlMoveMemory',
        (['in'], POINTER(VARIANT), 'Destination'),
        (['in'], POINTER(VARIANT), 'Source'),
        (['in'], c_int, 'Length')
    ),
    COMMETHOD(
        [dispid(2740), 'hidden'],
        HRESULT,
        'WizRtlMoveMemory2',
        (['in'], VARIANT, 'Source'),
        (['in'], c_int, 'Length'),
        (['out', 'retval'], POINTER(VARIANT), 'Destination')
    ),
    COMMETHOD(
        [dispid(2702), 'hidden'],
        HRESULT,
        'DWizGetDC',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2703), 'hidden'],
        HRESULT,
        'DWizReleaseDC',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], POINTER(VARIANT), 'hdc'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2704), 'hidden'],
        HRESULT,
        'FWizDeleteDC',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2705), 'hidden'],
        HRESULT,
        'DWizGetDeviceCaps',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['in'], c_int, 'nIndex'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2706), 'hidden'],
        HRESULT,
        'DWizSelectObject',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['in'], POINTER(VARIANT), 'h'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2707), 'hidden'],
        HRESULT,
        'FWizDeleteObject',
        (['in'], POINTER(VARIANT), 'ho'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2708), 'hidden'],
        HRESULT,
        'FWizGetTextMetrics',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['in'], VARIANT, 'typTM'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2709), 'hidden'],
        HRESULT,
        'FWizGetTextExtentPoint32',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['in'], BSTR, 'lpString'),
        (['in'], c_int, 'c'),
        (['in'], VARIANT, 'psizl'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2711), 'hidden'],
        HRESULT,
        'FWizIsWindow',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2712), 'hidden'],
        HRESULT,
        'DWizGetActiveWindow',
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2713), 'hidden'],
        HRESULT,
        'DWizGetSystemMetrics',
        (['in'], c_int, 'nIndex'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2714), 'hidden'],
        HRESULT,
        'FWizSetForegroundWindow',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2715), 'hidden'],
        HRESULT,
        'WizGetWindowRect',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], POINTER(VARIANT), 'lpRect')
    ),
    COMMETHOD(
        [dispid(2716), 'hidden'],
        HRESULT,
        'DWizSendMessage',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], c_int, 'Msg'),
        (['in'], c_int, 'wParam'),
        (['in'], BSTR, 'lParam'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2717), 'hidden'],
        HRESULT,
        'WizMsgWaitForMultipleObjectsEx',
        (['in'], c_int, 'nCount'),
        (['in'], c_int, 'dwMilliseconds'),
        (['in'], c_int, 'dwWakeMask'),
        (['in'], c_int, 'dwFlags')
    ),
    COMMETHOD(
        [dispid(2718), 'hidden'],
        HRESULT,
        'FWizIsCharAlphaA',
        (['in'], c_int, 'ch'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2719), 'hidden'],
        HRESULT,
        'FWizIsCharAlphaW',
        (['in'], c_int, 'ch'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2720), 'hidden'],
        HRESULT,
        'FWizIsCharAlphaNumericA',
        (['in'], c_int, 'ch'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2721), 'hidden'],
        HRESULT,
        'FWizIsCharAlphaNumericW',
        (['in'], c_int, 'ch'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2722), 'hidden'],
        HRESULT,
        'DWizGetClassName',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], POINTER(BSTR), 'lpClassName'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2723), 'hidden'],
        HRESULT,
        'DWizGetWindow',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], c_int, 'nCmd'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2724), 'hidden'],
        HRESULT,
        'FWizSHGetPathFromIDList',
        (['in'], c_int, 'csidl'),
        (['out'], POINTER(BSTR), 'pszPath'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2725), 'hidden'],
        HRESULT,
        'DWizCreateFontIndirect',
        (['in'], POINTER(VARIANT), 'lpLogFont'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2726), 'hidden'],
        HRESULT,
        'DWizCreateDC',
        (['in'], BSTR, 'lpszDriver'),
        (['out', 'retval'], POINTER(VARIANT), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2727), 'hidden'],
        HRESULT,
        'FWizChooseFont',
        (['in'], POINTER(VARIANT), 'lpChooseFont'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2728), 'hidden'],
        HRESULT,
        'FWizTranslateCharsetInfo',
        (['in'], c_int, 'lpSrc'),
        (['in'], VARIANT, 'lpCs'),
        (['in'], c_int, 'dwFlags'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2729), 'hidden'],
        HRESULT,
        'WizVariantChangeType',
        (['out'], POINTER(VARIANT), 'pvargDest'),
        (['in'], POINTER(VARIANT), 'pvarSrc'),
        (['in'], c_int, 'llcid'),
        (['in'], c_int, 'wFlags'),
        (['in'], c_int, 'vt')
    ),
    COMMETHOD(
        [dispid(2730), 'hidden'],
        HRESULT,
        'WizTapiRequestMakeCall',
        (['in'], BSTR, 'lpszDestAddress'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2731), 'hidden'],
        HRESULT,
        'DWizNetShareEnum',
        (['in'], BSTR, 'lpServerName'),
        (['in'], c_int, 'dwLevel'),
        (['out'], POINTER(VARIANT), 'lpBuffer'),
        (['in'], c_int, 'cbBuffer'),
        (['out'], POINTER(c_int), 'lpEntriesRead'),
        (['out'], POINTER(c_int), 'lpTotalEntries'),
        (['out'], POINTER(c_int), 'lpResumeHandle'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2732), 'hidden'],
        HRESULT,
        'WizNetApiBufferFree',
        (['in'], POINTER(VARIANT), 'lpBuffer')
    ),
    COMMETHOD(
        [dispid(2710), 'hidden'],
        HRESULT,
        'DWizEnumFontFamilies',
        (['in'], POINTER(VARIANT), 'hdc'),
        (['in'], BSTR, 'lpszFamily'),
        (['in'], POINTER(VARIANT), 'lpEnumFontFamProc'),
        (['in'], c_int, 'lParam'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2733), 'hidden'],
        HRESULT,
        'DWizSQLBrowseConnect',
        (['in'], POINTER(VARIANT), 'hdbc'),
        (['in'], BSTR, 'szConnStrIn'),
        (['in'], c_int, 'cbConnStrIn'),
        (['out'], POINTER(BSTR), 'szConnStrOut'),
        (['out'], POINTER(c_int), 'pcbConnStrOut'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2734), 'hidden'],
        HRESULT,
        'DWizSQLAllocEnv',
        (['out'], POINTER(VARIANT), 'phenv'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2735), 'hidden'],
        HRESULT,
        'DWizSQLAllocConnect',
        (['in'], POINTER(VARIANT), 'henv'),
        (['out'], POINTER(VARIANT), 'phdbc'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2736), 'hidden'],
        HRESULT,
        'DWizSQLDisconnect',
        (['in'], POINTER(VARIANT), 'hdbc'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2737), 'hidden'],
        HRESULT,
        'DWizSQLFreeConnect',
        (['in'], POINTER(VARIANT), 'hdbc'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2738), 'hidden'],
        HRESULT,
        'DWizSQLFreeEnv',
        (['in'], POINTER(VARIANT), 'henv'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2739), 'hidden'],
        HRESULT,
        'DWizSQLError',
        (['in'], POINTER(VARIANT), 'henv'),
        (['in'], POINTER(VARIANT), 'hdbc'),
        (['in'], POINTER(VARIANT), 'hstmt'),
        (['out'], POINTER(BSTR), 'szSqlState'),
        (['out'], POINTER(c_int), 'pfNativeError'),
        (['out'], POINTER(BSTR), 'szErrorMsg'),
        (['out'], POINTER(c_int), 'pcbErrorMsg'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2741), 'hidden'],
        HRESULT,
        'WizEnableWindow',
        (['in'], POINTER(VARIANT), 'Hwnd'),
        (['in'], VARIANT_BOOL, 'bEnable')
    ),
    COMMETHOD(
        [dispid(2742), 'hidden'],
        HRESULT,
        'DWizWNetGetUser',
        (['in'], BSTR, 'lpName'),
        (['out'], POINTER(BSTR), 'lpUserName'),
        (['out', 'retval'], POINTER(c_int), 'pfRet')
    ),
]

################################################################
# code template for _WizHook implementation
# class _WizHook_Impl(object):
#     def _set(self, rhs):
#         '-no docstring-'
#     Key = property(fset = _set, doc = _set.__doc__)
#
#     def NameFromActid(self, Actid):
#         '-no docstring-'
#         #return Name
#
#     def ArgsOfActid(self, Actid):
#         '-no docstring-'
#         #return CArgs
#
#     def OpenScript(self, Script, Label, OpenMode):
#         '-no docstring-'
#         #return Extra, Version, HScr
#
#     def GetScriptString(self, HScr, ScriptColumn):
#         '-no docstring-'
#         #return Value, pRet
#
#     def SaveScriptString(self, HScr, ScriptColumn, Value):
#         '-no docstring-'
#         #return pRet
#
#     def GlobalProcExists(self, Name):
#         '-no docstring-'
#         #return pRet
#
#     def TableFieldHasUniqueIndex(self, Table, Columns):
#         '-no docstring-'
#         #return pRet
#
#     def BracketString(self, flags):
#         '-no docstring-'
#         #return String, pRet
#
#     def WizHelp(self, HelpFile, wCmd, ContextID):
#         '-no docstring-'
#         #return pRet
#
#     def OpenPictureFile(self):
#         '-no docstring-'
#         #return File, Cancelled, pRet
#
#     def EnglishPictToLocal(self, In):
#         '-no docstring-'
#         #return Out, pRet
#
#     def TranslateExpression(self, In, ParseFlags, TranslateFlags):
#         '-no docstring-'
#         #return Out, pRet
#
#     def FileExists(self, File):
#         '-no docstring-'
#         #return pRet
#
#     def FullPath(self, RelativePath):
#         '-no docstring-'
#         #return FullPath, pRet
#
#     def SplitPath(self, Path):
#         '-no docstring-'
#         #return Drive, Dir, File, Ext
#
#     def TwipsFromFont(self, FontName, Size, Weight, Italic, Underline, Cch, Caption, MaxWidthCch):
#         '-no docstring-'
#         #return dx, dy, pRet
#
#     def ObjTypOfRecordSource(self, RecordSource):
#         '-no docstring-'
#         #return pobjtyp
#
#     def IsValidIdent(self, Identifier):
#         '-no docstring-'
#         #return pRet
#
#     def SortStringArray(self):
#         '-no docstring-'
#         #return Array
#
#     def AnalyzeTable(self, Workspace, Database, Table, ReturnDebugInfo):
#         '-no docstring-'
#         #return Results, pRet
#
#     def AnalyzeQuery(self, Workspace, Database, Query):
#         '-no docstring-'
#         #return Results, pRet
#
#     def GetFileName(self, hwndOwner, AppName, DlgTitle, OpenTitle, InitialDir, Filter, FilterIndex, View, flags, fOpen):
#         '-no docstring-'
#         #return File, pRet
#
#     def CreateDataPageControl(self, DpName, CtlName, Typ, Section, SectionType, AppletCode, X, Y, dx, dy):
#         '-no docstring-'
#         #return 
#
#     def KnownWizLeaks(self, fStart):
#         '-no docstring-'
#         #return 
#
#     def SetVbaPassword(self, bstrDbName, bstrConnect, bstrPasswd):
#         '-no docstring-'
#         #return pRet
#
#     def LocalFont(self):
#         '-no docstring-'
#         #return FontName
#
#     def SaveObject(self, bstrName, objtyp):
#         '-no docstring-'
#         #return 
#
#     def CurrentLangID(self):
#         '-no docstring-'
#         #return pRet
#
#     def KeyboardLangID(self):
#         '-no docstring-'
#         #return pRet
#
#     def AccessUserDataDir(self):
#         '-no docstring-'
#         #return Path
#
#     def OfficeAddInDir(self):
#         '-no docstring-'
#         #return Path
#
#     def EmbedFileOnDataPage(self, DpName, FileToInsert):
#         '-no docstring-'
#         #return FileToUse
#
#     @property
#     def DbcVbProject(self):
#         '-no docstring-'
#         #return VbProject
#
#     def ReportLeaksToFile(self, fRptToFile, bstrFileOut):
#         '-no docstring-'
#         #return 
#
#     @property
#     def IsMatchToDbcConnectString(self, bstrConnectionString):
#         '-no docstring-'
#         #return pRet
#
#     def LoadImexSpecSolution(self, bstrFilename):
#         '-no docstring-'
#         #return 
#
#     def SetDpBlockKeyInput(self, fBlockKeys):
#         '-no docstring-'
#         #return 
#
#     def FirstDbcDataObject(self):
#         '-no docstring-'
#         #return Name, ObjType, Attribs, pRet
#
#     def CloseCurrentDatabase(self):
#         '-no docstring-'
#         #return pRet
#
#     def AccessWizFilePath(self, bstrWhich):
#         '-no docstring-'
#         #return Path
#
#     def HideDates(self):
#         '-no docstring-'
#         #return pRet
#
#     def GetColumns(self, bstrBase):
#         '-no docstring-'
#         #return bstrColumns
#
#     def GetFileOdso(self, bstrExt):
#         '-no docstring-'
#         #return bstrFilename, plKind
#
#     def GetInfoForColumns(self, bstrBase):
#         '-no docstring-'
#         #return bstrColumns
#
#     def GetFileName2(self, hwndOwner, AppName, DlgTitle, OpenTitle, InitialDir, Filter, FilterIndex, View, flags, fOpen, fFileSystem):
#         '-no docstring-'
#         #return File, pRet
#
#     def FGetMSDE(self, fBlockKeys):
#         '-no docstring-'
#         #return pRet
#
#     def WizMsgBox(self, bstrText, bstrCaption, wStyle, idHelpID, bstrHelpFileName):
#         '-no docstring-'
#         #return pRet
#
#     def AdpUIDPwd(self):
#         '-no docstring-'
#         #return pbstrUID, pbstrPwd, fIntegrated
#
#     def SetWizGlob(self, lWhich, vValue):
#         '-no docstring-'
#         #return 
#
#     def GetWizGlob(self, lWhich):
#         '-no docstring-'
#         #return vValue
#
#     def WizCopyCmdbars(self, bstrADPName):
#         '-no docstring-'
#         #return 
#
#     def GetCurrentView(self, bstrTableName):
#         '-no docstring-'
#         #return pRet
#
#     def FIsFEWch(self, wch):
#         '-no docstring-'
#         #return fIsFE
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def GetAccWizRCPath(self):
#         '-no docstring-'
#         #return Path
#
#     def FCreateNameMap(self, objtyp, bstrObjName):
#         '-no docstring-'
#         #return pRet
#
#     def GetAdeRegistryPath(self):
#         '-no docstring-'
#         #return RegPath
#
#     def ExecuteTempImexSpec(self, bstrSpecXML):
#         '-no docstring-'
#         #return 
#
#     def FCacheStatus(self):
#         '-no docstring-'
#         #return FCacheStatus
#
#     def CacheStatus(self, bstrStatus):
#         '-no docstring-'
#         #return 
#
#     def SetDefaultSpecName(self, bstrSpecName):
#         '-no docstring-'
#         #return 
#
#     def GetImexTblName(self):
#         '-no docstring-'
#         #return pbstrTblName
#
#     def GetLinkedListProperty(self, bstrTableName, bstrPropertyName, fServer):
#         '-no docstring-'
#         #return pbstrPropertyValue
#
#     def OpenEmScript(self, pProperty, OpenMode):
#         '-no docstring-'
#         #return Extra, Version, HScr
#
#     def GetDisabledExtensions(self):
#         '-no docstring-'
#         #return Exts
#
#     def GetObjPubOption(self, bstrObjectName, iobjtyp, fTablesAsClient):
#         '-no docstring-'
#         #return pObjPubOpt
#
#     def FIsPublishedXasTable(self, bstrObjectName):
#         '-no docstring-'
#         #return fRet
#
#     def FIsXasDb(self):
#         '-no docstring-'
#         #return fRet
#
#     def FIsValidXasObjectName(self, bstrObjectName, iobjtyp):
#         '-no docstring-'
#         #return fRet
#
#     def LoadResourceLibrary(self, bstrObjectName):
#         '-no docstring-'
#         #return HDll
#
#     def FWizReadFile(self, hFile, nNumberOfBytesToRead):
#         '-no docstring-'
#         #return lpBuffer, lpNumberOfBytesRead, fRet
#
#     def FWizWriteFile(self, hFile, lpBuffer, nNumberOfBytesToWrite):
#         '-no docstring-'
#         #return lpNumberOfBytesWritten, fRet
#
#     def FWizCloseHandle(self, hFile):
#         '-no docstring-'
#         #return fRet
#
#     def FWizCreateFile(self, bstrFilename, dwDesiredAccess, dwShareMode, dwCreationDisposition, dwFlagsAndAttributes):
#         '-no docstring-'
#         #return fRet
#
#     def FWizDeleteFile(self, bstrFilename):
#         '-no docstring-'
#         #return fRet
#
#     def DWizGetProfileString(self, lpAppName, lpKeyName, lpDefault):
#         '-no docstring-'
#         #return lpReturnedString, pRet
#
#     def IWizLStrlen(self, lpString):
#         '-no docstring-'
#         #return pRet
#
#     def FWizLStrcpyn(self, lpString2, iMaxLength):
#         '-no docstring-'
#         #return lpString1, pfRet
#
#     def DWizWNetGetUniversalName(self, lpLocalPath, dwInfoLevel):
#         '-no docstring-'
#         #return lpBuffer, lpBufferSize, lpRet
#
#     def FWizGetComputerName(self):
#         '-no docstring-'
#         #return lpBuffer, nSize, pfRet
#
#     def DWizGetVersion(self):
#         '-no docstring-'
#         #return pVersion
#
#     def DWizGetShortPathName(self, lpszLongPath, cchBuffer):
#         '-no docstring-'
#         #return lpszShortPath, pRet
#
#     def DWizGetTickCount(self):
#         '-no docstring-'
#         #return pRet
#
#     def DWizGetTempPath(self):
#         '-no docstring-'
#         #return lpBuffer, pRet
#
#     def DWizGetTempFileName(self, lpPathName, lpPrefixString, uUnique):
#         '-no docstring-'
#         #return lpTempFileName, pRet
#
#     def DWizGetSystemDefaultLCID(self):
#         '-no docstring-'
#         #return pRet
#
#     def DWizGetUserDefaultLCID(self):
#         '-no docstring-'
#         #return pRet
#
#     def DWizGetLocaleInfo(self, Locale, LCType):
#         '-no docstring-'
#         #return lpLCData, pRet
#
#     def DWizMulDiv(self, nNumber, nNumerator, nDenominator):
#         '-no docstring-'
#         #return pRet
#
#     def FWizGlobalAlloc(self, uFlags, dwBytes):
#         '-no docstring-'
#         #return pfRet
#
#     def WizGlobalFree(self, hMem):
#         '-no docstring-'
#         #return 
#
#     def FWizGlobalLock(self, hMem):
#         '-no docstring-'
#         #return pfRet
#
#     def WizGlobalUnlock(self, hMem):
#         '-no docstring-'
#         #return 
#
#     def DWizFreeLibrary(self, hLibModule):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizLoadResource(self, hModule, hResInfo):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizFindResource(self, hModule, lpName, lpType):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizLockResource(self, hResData):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSizeofResource(self, hModule, hResInfo):
#         '-no docstring-'
#         #return pRet
#
#     def DWizMultiByteToWideChar(self, CodePage, dwFlags, lpMultiByteStr, cbMultiByte, lpWideCharStr, cchWideChar):
#         '-no docstring-'
#         #return pRet
#
#     def DWizMultiByteToWideCharV2(self, CodePage, dwFlags, lpMultiByteStr, cbMultiByte, lpWideCharStr, cchWideChar):
#         '-no docstring-'
#         #return pRet
#
#     def FWizIsCharsetWide(self):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetACP(self):
#         '-no docstring-'
#         #return pRet
#
#     def WizRtlMoveMemory(self, Destination, Source, Length):
#         '-no docstring-'
#         #return 
#
#     def WizRtlMoveMemory2(self, Source, Length):
#         '-no docstring-'
#         #return Destination
#
#     def DWizGetDC(self, Hwnd):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizReleaseDC(self, Hwnd, hdc):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizDeleteDC(self, hdc):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetDeviceCaps(self, hdc, nIndex):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSelectObject(self, hdc, h):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizDeleteObject(self, ho):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizGetTextMetrics(self, hdc, typTM):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizGetTextExtentPoint32(self, hdc, lpString, c, psizl):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizIsWindow(self, Hwnd):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetActiveWindow(self):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetSystemMetrics(self, nIndex):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizSetForegroundWindow(self, Hwnd):
#         '-no docstring-'
#         #return pfRet
#
#     def WizGetWindowRect(self, Hwnd, lpRect):
#         '-no docstring-'
#         #return 
#
#     def DWizSendMessage(self, Hwnd, Msg, wParam, lParam):
#         '-no docstring-'
#         #return pfRet
#
#     def WizMsgWaitForMultipleObjectsEx(self, nCount, dwMilliseconds, dwWakeMask, dwFlags):
#         '-no docstring-'
#         #return 
#
#     def FWizIsCharAlphaA(self, ch):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizIsCharAlphaW(self, ch):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizIsCharAlphaNumericA(self, ch):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizIsCharAlphaNumericW(self, ch):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetClassName(self, Hwnd, lpClassName):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizGetWindow(self, Hwnd, nCmd):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizSHGetPathFromIDList(self, csidl):
#         '-no docstring-'
#         #return pszPath, pfRet
#
#     def DWizCreateFontIndirect(self, lpLogFont):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizCreateDC(self, lpszDriver):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizChooseFont(self, lpChooseFont):
#         '-no docstring-'
#         #return pfRet
#
#     def FWizTranslateCharsetInfo(self, lpSrc, lpCs, dwFlags):
#         '-no docstring-'
#         #return pfRet
#
#     def WizVariantChangeType(self, pvarSrc, llcid, wFlags, vt):
#         '-no docstring-'
#         #return pvargDest
#
#     def WizTapiRequestMakeCall(self, lpszDestAddress):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizNetShareEnum(self, lpServerName, dwLevel, cbBuffer):
#         '-no docstring-'
#         #return lpBuffer, lpEntriesRead, lpTotalEntries, lpResumeHandle, pfRet
#
#     def WizNetApiBufferFree(self, lpBuffer):
#         '-no docstring-'
#         #return 
#
#     def DWizEnumFontFamilies(self, hdc, lpszFamily, lpEnumFontFamProc, lParam):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSQLBrowseConnect(self, hdbc, szConnStrIn, cbConnStrIn):
#         '-no docstring-'
#         #return szConnStrOut, pcbConnStrOut, pfRet
#
#     def DWizSQLAllocEnv(self):
#         '-no docstring-'
#         #return phenv, pfRet
#
#     def DWizSQLAllocConnect(self, henv):
#         '-no docstring-'
#         #return phdbc, pfRet
#
#     def DWizSQLDisconnect(self, hdbc):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSQLFreeConnect(self, hdbc):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSQLFreeEnv(self, henv):
#         '-no docstring-'
#         #return pfRet
#
#     def DWizSQLError(self, henv, hdbc, hstmt):
#         '-no docstring-'
#         #return szSqlState, pfNativeError, szErrorMsg, pcbErrorMsg, pfRet
#
#     def WizEnableWindow(self, Hwnd, bEnable):
#         '-no docstring-'
#         #return 
#
#     def DWizWNetGetUser(self, lpName):
#         '-no docstring-'
#         #return lpUserName, pfRet
#
DB_LANG_HUNGARIAN = ';LANGID=0x040E;CP=1250;COUNTRY=0'  # Constant STRING
A_ALL = 0  # Constant c_short
acGridlinesBothV2 = -1  # Constant c_short
A_PREVIOUS = 0  # Constant c_short
DB_LANG_ICELANDIC = ';LANGID=0x040F;CP=1252;COUNTRY=0'  # Constant STRING

AccessObject._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2095), 'propget'],
        HRESULT,
        'Type',
        (['out', 'retval'], POINTER(AcObjectType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2257), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        'Attributes',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(AccessObjectProperties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2276), 'propget'],
        HRESULT,
        'IsLoaded',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2260), 'propget'],
        HRESULT,
        'FullName',
        (['out', 'retval'], POINTER(BSTR), 'pbstrFullName')
    ),
    COMMETHOD(
        [dispid(2260), 'propput'],
        HRESULT,
        'FullName',
        (['in'], BSTR, 'pbstrFullName')
    ),
    COMMETHOD(
        [dispid(2412), 'propget'],
        HRESULT,
        'DateCreated',
        (['out', 'retval'], POINTER(c_double), 'pDate')
    ),
    COMMETHOD(
        [dispid(2413), 'propget'],
        HRESULT,
        'DateModified',
        (['out', 'retval'], POINTER(c_double), 'pDate')
    ),
    COMMETHOD(
        [dispid(2414), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(AcCurrentView), 'pCurView')
    ),
    COMMETHOD(
        [dispid(2434)],
        HRESULT,
        'IsDependentUpon',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2435)],
        HRESULT,
        'GetDependencyInfo',
        (['out', 'retval'], POINTER(POINTER(_DependencyInfo)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2596), 'propget'],
        HRESULT,
        'IsWeb',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfWebObj')
    ),
]

################################################################
# code template for AccessObject implementation
# class AccessObject_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def _Name(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Type(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Attributes(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def IsLoaded(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrFullName
#     def _set(self, pbstrFullName):
#         '-no docstring-'
#     FullName = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def DateCreated(self):
#         '-no docstring-'
#         #return pDate
#
#     @property
#     def DateModified(self):
#         '-no docstring-'
#         #return pDate
#
#     @property
#     def CurrentView(self):
#         '-no docstring-'
#         #return pCurView
#
#     def IsDependentUpon(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return pRet
#
#     def GetDependencyInfo(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def IsWeb(self):
#         '-no docstring-'
#         #return pfWebObj
#
acFilterByForm = 0  # Constant c_short
DB_LANG_NORDIC = ';LANGID=0x041D;CP=1252;COUNTRY=0'  # Constant STRING
acFilterAdvanced = 1  # Constant c_short
A_NEXT = 1  # Constant c_short
DB_LANG_NORWDAN = ';LANGID=0x0414;CP=1252;COUNTRY=0'  # Constant STRING
acServerFilterByForm = 2  # Constant c_short
A_FIRST = 2  # Constant c_short
DB_LANG_POLISH = ';LANGID=0x0415;CP=1250;COUNTRY=0'  # Constant STRING
acShowAllRecords = 0  # Constant c_short

_GroupLevel._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(174), 'propget'],
        HRESULT,
        'SortOrder',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(174), 'propput'],
        HRESULT,
        'SortOrder',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(175), 'propget'],
        HRESULT,
        'GroupHeader',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(175), 'propput'],
        HRESULT,
        'GroupHeader',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(176), 'propget'],
        HRESULT,
        'GroupFooter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(176), 'propput'],
        HRESULT,
        'GroupFooter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(177), 'propget'],
        HRESULT,
        'GroupOn',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(177), 'propput'],
        HRESULT,
        'GroupOn',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(178), 'propget'],
        HRESULT,
        'GroupInterval',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(178), 'propput'],
        HRESULT,
        'GroupInterval',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(75), 'propget'],
        HRESULT,
        'KeepTogether',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(75), 'propput'],
        HRESULT,
        'KeepTogether',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _GroupLevel implementation
# class _GroupLevel_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SortOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GroupHeader = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GroupFooter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GroupOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GroupInterval = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeepTogether = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
DB_LANG_CYRILLIC = ';LANGID=0x0419;CP=1251;COUNTRY=0'  # Constant STRING
A_LAST = 3  # Constant c_short
acApplyFilter = 1  # Constant c_short
DB_LANG_SPANISH = ';LANGID=0x040A;CP=1252;COUNTRY=0'  # Constant STRING
acCloseFilterWindow = 2  # Constant c_short
A_GOTO = 4  # Constant c_short
DB_LANG_SWEDFIN = ';LANGID=0x040B;CP=1252;COUNTRY=0'  # Constant STRING
acApplyServerFilter = 3  # Constant c_short


class Edge(CoClass):
    _reg_clsid_ = GUID('{3B06F000-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Edge(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06F001-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_ReadyState(self) -> hints.Incomplete: ...
        ReadyState = hints.normal_property(_get_ReadyState)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_ScrollTop(self) -> hints.Incomplete: ...
        def _set_ScrollTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollTop = hints.normal_property(_get_ScrollTop, _set_ScrollTop)
        def _get_ScrollLeft(self) -> hints.Incomplete: ...
        def _set_ScrollLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollLeft = hints.normal_property(_get_ScrollLeft, _set_ScrollLeft)
        def _get_LocationURL(self) -> hints.Incomplete: ...
        LocationURL = hints.normal_property(_get_LocationURL)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_OnBeforeNavigate(self) -> hints.Incomplete: ...
        def _set_OnBeforeNavigate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnBeforeNavigate = hints.normal_property(_get_OnBeforeNavigate, _set_OnBeforeNavigate)
        def _get_OnDocumentComplete(self) -> hints.Incomplete: ...
        def _set_OnDocumentComplete(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDocumentComplete = hints.normal_property(_get_OnDocumentComplete, _set_OnDocumentComplete)
        def _get_OnNavigateError(self) -> hints.Incomplete: ...
        def _set_OnNavigateError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNavigateError = hints.normal_property(_get_OnNavigateError, _set_OnNavigateError)
        def _get_OnUpdated(self) -> hints.Incomplete: ...
        def _set_OnUpdated(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdated = hints.normal_property(_get_OnUpdated, _set_OnUpdated)
        def _get_OnBeforeNavigateMacro(self) -> hints.Incomplete: ...
        def _set_OnBeforeNavigateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnBeforeNavigateMacro = hints.normal_property(_get_OnBeforeNavigateMacro, _set_OnBeforeNavigateMacro)
        def _get_OnDocumentCompleteMacro(self) -> hints.Incomplete: ...
        def _set_OnDocumentCompleteMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDocumentCompleteMacro = hints.normal_property(_get_OnDocumentCompleteMacro, _set_OnDocumentCompleteMacro)
        def _get_OnNavigateErrorMacro(self) -> hints.Incomplete: ...
        def _set_OnNavigateErrorMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNavigateErrorMacro = hints.normal_property(_get_OnNavigateErrorMacro, _set_OnNavigateErrorMacro)
        def _get_OnUpdatedMacro(self) -> hints.Incomplete: ...
        def _set_OnUpdatedMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdatedMacro = hints.normal_property(_get_OnUpdatedMacro, _set_OnUpdatedMacro)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def ExecuteJavascript(self, Script: hints.Incomplete) -> hints.Hresult: ...
        def RetrieveJavascriptValue(self, Expression: hints.Incomplete) -> hints.Incomplete: ...
        def Navigate(self, URL: hints.Incomplete) -> hints.Hresult: ...
        def Refresh(self) -> hints.Hresult: ...


class DispEdgeEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06F002-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def BeforeNavigate(self, URL: hints.Incomplete) -> hints.Incomplete: ...
        def DocumentComplete(self, URL: hints.Incomplete) -> hints.Incomplete: ...
        def NavigateError(self, URL: hints.Incomplete, StatusCode: hints.Incomplete) -> hints.Incomplete: ...


Edge._com_interfaces_ = [_Edge]
Edge._outgoing_interfaces_ = [DispEdgeEvents]
A_NEWREC = 5  # Constant c_short
DB_LANG_TURKISH = ';LANGID=0x041F;CP=1254;COUNTRY=0'  # Constant STRING
acCloseServerFilterWindow = 4  # Constant c_short
DB_VERSION10 = 1  # Constant c_int


class _Printer(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DBC5175F-A8ED-11D3-A0DD-00C04F68712B}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_ColorMode(self) -> hints.Incomplete: ...
        def _set_ColorMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColorMode = hints.normal_property(_get_ColorMode, _set_ColorMode)
        def _get_Copies(self) -> hints.Incomplete: ...
        def _set_Copies(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Copies = hints.normal_property(_get_Copies, _set_Copies)
        def _get_DeviceName(self) -> hints.Incomplete: ...
        DeviceName = hints.normal_property(_get_DeviceName)
        def _get_DriverName(self) -> hints.Incomplete: ...
        DriverName = hints.normal_property(_get_DriverName)
        def _get_Duplex(self) -> hints.Incomplete: ...
        def _set_Duplex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Duplex = hints.normal_property(_get_Duplex, _set_Duplex)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_PaperBin(self) -> hints.Incomplete: ...
        def _set_PaperBin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaperBin = hints.normal_property(_get_PaperBin, _set_PaperBin)
        def _get_PaperSize(self) -> hints.Incomplete: ...
        def _set_PaperSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaperSize = hints.normal_property(_get_PaperSize, _set_PaperSize)
        def _get_Port(self) -> hints.Incomplete: ...
        Port = hints.normal_property(_get_Port)
        def _get_PrintQuality(self) -> hints.Incomplete: ...
        def _set_PrintQuality(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintQuality = hints.normal_property(_get_PrintQuality, _set_PrintQuality)
        def _get_LeftMargin(self) -> hints.Incomplete: ...
        def _set_LeftMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftMargin = hints.normal_property(_get_LeftMargin, _set_LeftMargin)
        def _get_RightMargin(self) -> hints.Incomplete: ...
        def _set_RightMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightMargin = hints.normal_property(_get_RightMargin, _set_RightMargin)
        def _get_TopMargin(self) -> hints.Incomplete: ...
        def _set_TopMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopMargin = hints.normal_property(_get_TopMargin, _set_TopMargin)
        def _get_BottomMargin(self) -> hints.Incomplete: ...
        def _set_BottomMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomMargin = hints.normal_property(_get_BottomMargin, _set_BottomMargin)
        def _get_DataOnly(self) -> hints.Incomplete: ...
        def _set_DataOnly(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataOnly = hints.normal_property(_get_DataOnly, _set_DataOnly)
        def _get_ItemsAcross(self) -> hints.Incomplete: ...
        def _set_ItemsAcross(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ItemsAcross = hints.normal_property(_get_ItemsAcross, _set_ItemsAcross)
        def _get_RowSpacing(self) -> hints.Incomplete: ...
        def _set_RowSpacing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSpacing = hints.normal_property(_get_RowSpacing, _set_RowSpacing)
        def _get_ColumnSpacing(self) -> hints.Incomplete: ...
        def _set_ColumnSpacing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnSpacing = hints.normal_property(_get_ColumnSpacing, _set_ColumnSpacing)
        def _get_DefaultSize(self) -> hints.Incomplete: ...
        def _set_DefaultSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultSize = hints.normal_property(_get_DefaultSize, _set_DefaultSize)
        def _get_ItemSizeWidth(self) -> hints.Incomplete: ...
        def _set_ItemSizeWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ItemSizeWidth = hints.normal_property(_get_ItemSizeWidth, _set_ItemSizeWidth)
        def _get_ItemSizeHeight(self) -> hints.Incomplete: ...
        def _set_ItemSizeHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ItemSizeHeight = hints.normal_property(_get_ItemSizeHeight, _set_ItemSizeHeight)
        def _get_ItemLayout(self) -> hints.Incomplete: ...
        def _set_ItemLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ItemLayout = hints.normal_property(_get_ItemLayout, _set_ItemLayout)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...



_Printer._methods_ = [
    COMMETHOD(
        [dispid(2342), 'propget'],
        HRESULT,
        'ColorMode',
        (['out', 'retval'], POINTER(AcPrintColor), 'pRet')
    ),
    COMMETHOD(
        [dispid(2342), 'propput'],
        HRESULT,
        'ColorMode',
        (['in'], AcPrintColor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2343), 'propget'],
        HRESULT,
        'Copies',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2343), 'propput'],
        HRESULT,
        'Copies',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2344), 'propget'],
        HRESULT,
        'DeviceName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2345), 'propget'],
        HRESULT,
        'DriverName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2346), 'propget'],
        HRESULT,
        'Duplex',
        (['out', 'retval'], POINTER(AcPrintDuplex), 'pRet')
    ),
    COMMETHOD(
        [dispid(2346), 'propput'],
        HRESULT,
        'Duplex',
        (['in'], AcPrintDuplex, 'pRet')
    ),
    COMMETHOD(
        [dispid(2347), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(AcPrintOrientation), 'pRet')
    ),
    COMMETHOD(
        [dispid(2347), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], AcPrintOrientation, 'pRet')
    ),
    COMMETHOD(
        [dispid(2348), 'propget'],
        HRESULT,
        'PaperBin',
        (['out', 'retval'], POINTER(AcPrintPaperBin), 'pRet')
    ),
    COMMETHOD(
        [dispid(2348), 'propput'],
        HRESULT,
        'PaperBin',
        (['in'], AcPrintPaperBin, 'pRet')
    ),
    COMMETHOD(
        [dispid(2349), 'propget'],
        HRESULT,
        'PaperSize',
        (['out', 'retval'], POINTER(AcPrintPaperSize), 'pRet')
    ),
    COMMETHOD(
        [dispid(2349), 'propput'],
        HRESULT,
        'PaperSize',
        (['in'], AcPrintPaperSize, 'pRet')
    ),
    COMMETHOD(
        [dispid(2350), 'propget'],
        HRESULT,
        'Port',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2351), 'propget'],
        HRESULT,
        'PrintQuality',
        (['out', 'retval'], POINTER(AcPrintObjQuality), 'pRet')
    ),
    COMMETHOD(
        [dispid(2351), 'propput'],
        HRESULT,
        'PrintQuality',
        (['in'], AcPrintObjQuality, 'pRet')
    ),
    COMMETHOD(
        [dispid(2352), 'propget'],
        HRESULT,
        'LeftMargin',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2352), 'propput'],
        HRESULT,
        'LeftMargin',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2353), 'propget'],
        HRESULT,
        'RightMargin',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2353), 'propput'],
        HRESULT,
        'RightMargin',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2354), 'propget'],
        HRESULT,
        'TopMargin',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2354), 'propput'],
        HRESULT,
        'TopMargin',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2355), 'propget'],
        HRESULT,
        'BottomMargin',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2355), 'propput'],
        HRESULT,
        'BottomMargin',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2356), 'propget'],
        HRESULT,
        'DataOnly',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2356), 'propput'],
        HRESULT,
        'DataOnly',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2357), 'propget'],
        HRESULT,
        'ItemsAcross',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2357), 'propput'],
        HRESULT,
        'ItemsAcross',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2358), 'propget'],
        HRESULT,
        'RowSpacing',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2358), 'propput'],
        HRESULT,
        'RowSpacing',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2359), 'propget'],
        HRESULT,
        'ColumnSpacing',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2359), 'propput'],
        HRESULT,
        'ColumnSpacing',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2360), 'propget'],
        HRESULT,
        'DefaultSize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2360), 'propput'],
        HRESULT,
        'DefaultSize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2361), 'propget'],
        HRESULT,
        'ItemSizeWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2361), 'propput'],
        HRESULT,
        'ItemSizeWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2362), 'propget'],
        HRESULT,
        'ItemSizeHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2362), 'propput'],
        HRESULT,
        'ItemSizeHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2363), 'propget'],
        HRESULT,
        'ItemLayout',
        (['out', 'retval'], POINTER(AcPrintItemLayout), 'pRet')
    ),
    COMMETHOD(
        [dispid(2363), 'propput'],
        HRESULT,
        'ItemLayout',
        (['in'], AcPrintItemLayout, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _Printer implementation
# class _Printer_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColorMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Copies = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def DeviceName(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DriverName(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Duplex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaperBin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaperSize = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Port(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintQuality = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataOnly = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ItemsAcross = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSpacing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnSpacing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ItemSizeWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ItemSizeHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ItemLayout = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
A_NORMAL = 0  # Constant c_short
acShiftMask = 1  # Constant c_short
DB_ENCRYPT = 2  # Constant c_int

_SubForm._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(132), 'propget'],
        HRESULT,
        'SourceObject',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(132), 'propput'],
        HRESULT,
        'SourceObject',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propget'],
        HRESULT,
        'LinkChildFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propput'],
        HRESULT,
        'LinkChildFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propget'],
        HRESULT,
        'LinkMasterFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propput'],
        HRESULT,
        'LinkMasterFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propget'],
        HRESULT,
        'CanGrow',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propput'],
        HRESULT,
        'CanGrow',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propget'],
        HRESULT,
        'CanShrink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propput'],
        HRESULT,
        'CanShrink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(576), 'propget'],
        HRESULT,
        'FilterOnEmptyMaster',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(576), 'propput'],
        HRESULT,
        'FilterOnEmptyMaster',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _SubForm implementation
# class _SubForm_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceObject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkChildFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkMasterFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanGrow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanShrink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOnEmptyMaster = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
A_DESIGN = 1  # Constant c_short
acCtrlMask = 2  # Constant c_short
DB_DECRYPT = 4  # Constant c_int
A_PREVIEW = 2  # Constant c_short
acAltMask = 4  # Constant c_short
DB_VERSION11 = 8  # Constant c_int
A_FORMDS = 3  # Constant c_short
acLeftButton = 1  # Constant c_short
DB_VERSION20 = 16  # Constant c_int


class NavigationButton(CoClass):
    _reg_clsid_ = GUID('{3B06E993-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _NavigationButton(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E994-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_Transparent(self) -> hints.Incomplete: ...
        def _set_Transparent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Transparent = hints.normal_property(_get_Transparent, _set_Transparent)
        def _get_AutoRepeat(self) -> hints.Incomplete: ...
        def _set_AutoRepeat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoRepeat = hints.normal_property(_get_AutoRepeat, _set_AutoRepeat)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_OnPush(self) -> hints.Incomplete: ...
        def _set_OnPush(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPush = hints.normal_property(_get_OnPush, _set_OnPush)
        def _get_HyperlinkAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkAddress = hints.normal_property(_get_HyperlinkAddress, _set_HyperlinkAddress)
        def _get_HyperlinkSubAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkSubAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkSubAddress = hints.normal_property(_get_HyperlinkSubAddress, _set_HyperlinkSubAddress)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        Left = hints.normal_property(_get_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        Top = hints.normal_property(_get_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_CursorOnHover(self) -> hints.Incomplete: ...
        def _set_CursorOnHover(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CursorOnHover = hints.normal_property(_get_CursorOnHover, _set_CursorOnHover)
        def _get_PictureCaptionArrangement(self) -> hints.Incomplete: ...
        def _set_PictureCaptionArrangement(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureCaptionArrangement = hints.normal_property(_get_PictureCaptionArrangement, _set_PictureCaptionArrangement)
        def _get_Alignment(self) -> hints.Incomplete: ...
        def _set_Alignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Alignment = hints.normal_property(_get_Alignment, _set_Alignment)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_NavigationTargetName(self) -> hints.Incomplete: ...
        def _set_NavigationTargetName(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        NavigationTargetName = hints.normal_property(_get_NavigationTargetName, _set_NavigationTargetName)
        def _get_NavigationWhereClause(self) -> hints.Incomplete: ...
        def _set_NavigationWhereClause(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        NavigationWhereClause = hints.normal_property(_get_NavigationWhereClause, _set_NavigationWhereClause)
        def _get_ParentTab(self) -> hints.Annotated['_NavigationButton', hints.FirstComItfOf['NavigationButton']]: ...
        ParentTab = hints.normal_property(_get_ParentTab)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_HoverColor(self) -> hints.Incomplete: ...
        def _set_HoverColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverColor = hints.normal_property(_get_HoverColor, _set_HoverColor)
        def _get_HoverThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverThemeColorIndex = hints.normal_property(_get_HoverThemeColorIndex, _set_HoverThemeColorIndex)
        def _get_HoverTint(self) -> hints.Incomplete: ...
        def _set_HoverTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverTint = hints.normal_property(_get_HoverTint, _set_HoverTint)
        def _get_HoverShade(self) -> hints.Incomplete: ...
        def _set_HoverShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverShade = hints.normal_property(_get_HoverShade, _set_HoverShade)
        def _get_HoverForeColor(self) -> hints.Incomplete: ...
        def _set_HoverForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeColor = hints.normal_property(_get_HoverForeColor, _set_HoverForeColor)
        def _get_HoverForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeThemeColorIndex = hints.normal_property(_get_HoverForeThemeColorIndex, _set_HoverForeThemeColorIndex)
        def _get_HoverForeTint(self) -> hints.Incomplete: ...
        def _set_HoverForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeTint = hints.normal_property(_get_HoverForeTint, _set_HoverForeTint)
        def _get_HoverForeShade(self) -> hints.Incomplete: ...
        def _set_HoverForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeShade = hints.normal_property(_get_HoverForeShade, _set_HoverForeShade)
        def _get_PressedColor(self) -> hints.Incomplete: ...
        def _set_PressedColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedColor = hints.normal_property(_get_PressedColor, _set_PressedColor)
        def _get_PressedThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedThemeColorIndex = hints.normal_property(_get_PressedThemeColorIndex, _set_PressedThemeColorIndex)
        def _get_PressedTint(self) -> hints.Incomplete: ...
        def _set_PressedTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedTint = hints.normal_property(_get_PressedTint, _set_PressedTint)
        def _get_PressedShade(self) -> hints.Incomplete: ...
        def _set_PressedShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedShade = hints.normal_property(_get_PressedShade, _set_PressedShade)
        def _get_PressedForeColor(self) -> hints.Incomplete: ...
        def _set_PressedForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeColor = hints.normal_property(_get_PressedForeColor, _set_PressedForeColor)
        def _get_PressedForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeThemeColorIndex = hints.normal_property(_get_PressedForeThemeColorIndex, _set_PressedForeThemeColorIndex)
        def _get_PressedForeTint(self) -> hints.Incomplete: ...
        def _set_PressedForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeTint = hints.normal_property(_get_PressedForeTint, _set_PressedForeTint)
        def _get_PressedForeShade(self) -> hints.Incomplete: ...
        def _set_PressedForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeShade = hints.normal_property(_get_PressedForeShade, _set_PressedForeShade)
        def _get_Shape(self) -> hints.Incomplete: ...
        def _set_Shape(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shape = hints.normal_property(_get_Shape, _set_Shape)
        def _get_Bevel(self) -> hints.Incomplete: ...
        def _set_Bevel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bevel = hints.normal_property(_get_Bevel, _set_Bevel)
        def _get_Glow(self) -> hints.Incomplete: ...
        def _set_Glow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Glow = hints.normal_property(_get_Glow, _set_Glow)
        def _get_Shadow(self) -> hints.Incomplete: ...
        def _set_Shadow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shadow = hints.normal_property(_get_Shadow, _set_Shadow)
        def _get_SoftEdges(self) -> hints.Incomplete: ...
        def _set_SoftEdges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SoftEdges = hints.normal_property(_get_SoftEdges, _set_SoftEdges)
        def _get_QuickStyle(self) -> hints.Incomplete: ...
        def _set_QuickStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyle = hints.normal_property(_get_QuickStyle, _set_QuickStyle)
        def _get_QuickStyleMask(self) -> hints.Incomplete: ...
        def _set_QuickStyleMask(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        QuickStyleMask = hints.normal_property(_get_QuickStyleMask, _set_QuickStyleMask)
        def _get_Gradient(self) -> hints.Incomplete: ...
        def _set_Gradient(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Gradient = hints.normal_property(_get_Gradient, _set_Gradient)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)


class DispNavigationButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E996-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


NavigationButton._com_interfaces_ = [_NavigationButton]
NavigationButton._outgoing_interfaces_ = [DispNavigationButtonEvents]
acRightButton = 2  # Constant c_short
A_ADD = 0  # Constant c_short
DB_SORTARABIC = 267  # Constant c_int
acMiddleButton = 4  # Constant c_short

DispEdgeEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2076)],
        None,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2507)],
        None,
        'BeforeNavigate',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in'], POINTER(BSTR), 'URL')
    ),
    DISPMETHOD(
        [dispid(2528)],
        None,
        'DocumentComplete',
        (['in'], POINTER(VARIANT), 'URL')
    ),
    DISPMETHOD(
        [dispid(2510)],
        None,
        'NavigateError',
        (['in'], POINTER(BSTR), 'URL'),
        (['in'], POINTER(VARIANT), 'StatusCode')
    ),
]
A_EDIT = 1  # Constant c_short
DB_SORTCYRILLIC = 263  # Constant c_int


class Printers(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DBC51760-A8ED-11D3-A0DD-00C04F68712B}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_Printer': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Printers._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Printers implementation
# class Printers_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acOLEChanged = 0  # Constant c_short


class TempVars(CoClass):
    _reg_clsid_ = GUID('{6D40D9DE-2821-44A8-BAF3-8011E362CF59}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _TempVars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{9E3F602F-BA36-4865-B3CD-F2EB008F62DE}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_TempVar', hints.FirstComItfOf['TempVar']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def Add(self, Name: hints.Incomplete, Value: hints.Incomplete) -> hints.Hresult: ...
        def Remove(self, var: hints.Incomplete) -> hints.Hresult: ...
        def RemoveAll(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


TempVars._com_interfaces_ = [_TempVars]
A_READONLY = 2  # Constant c_short
DB_SORTCZECH = 264  # Constant c_int
acOLESaved = 1  # Constant c_short
DB_SORTDUTCH = 259  # Constant c_int

_Line._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(55), 'propget'],
        HRESULT,
        'LineSlant',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(55), 'propput'],
        HRESULT,
        'LineSlant',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Line implementation
# class _Line_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LineSlant = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
A_HIDDEN = 1  # Constant c_short
acOLEClosed = 2  # Constant c_short


class OptionButton(CoClass):
    _reg_clsid_ = GUID('{3B06E951-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _OptionButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4346-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


OptionButton._com_interfaces_ = [_OptionButton]
OptionButton._outgoing_interfaces_ = [DispOptionButtonEvents, _OptionButtonEvents]
DB_SORTGENERAL = 256  # Constant c_int


class TempVar(CoClass):
    _reg_clsid_ = GUID('{12DCE806-EA8A-46AA-88DF-C4486EDB78E3}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _TempVar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{FB74F43A-9732-4552-B1C2-269ABF082492}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get__Value(self) -> hints.Incomplete: ...
        def _set__Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Value = hints.normal_property(_get__Value, _set__Value)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


TempVar._com_interfaces_ = [_TempVar]

_TempVars._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(TempVar)), 'ppTempVar')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'Name'),
        (['in'], VARIANT, 'Value')
    ),
    COMMETHOD(
        [dispid(2192)],
        HRESULT,
        'Remove',
        (['in'], VARIANT, 'var')
    ),
    COMMETHOD([dispid(2488)], HRESULT, 'RemoveAll'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _TempVars implementation
# class _TempVars_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return ppTempVar
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Name, Value):
#         '-no docstring-'
#         #return 
#
#     def Remove(self, var):
#         '-no docstring-'
#         #return 
#
#     def RemoveAll(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
acOLERenamed = 3  # Constant c_short


class _Dummy(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8B06E320-B23C-11CF-89A8-00A0C9054129}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']


_Dummy._methods_ = [
]

################################################################
# code template for _Dummy implementation
# class _Dummy_Impl(object):
A_ICON = 2  # Constant c_short
DB_SORTGREEK = 269  # Constant c_int
A_DIALOG = 3  # Constant c_short
vbKeyLButton = 1  # Constant c_short
DB_SORTHEBREW = 268  # Constant c_int


class AccessObjectProperty(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1FE3E471-A7D0-11D1-9944-006008197D41}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get__Value(self) -> hints.Incomplete: ...
        _Value = hints.normal_property(_get__Value)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


AccessObjectProperties._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(AccessObjectProperty)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'PropertyName'),
        (['in'], VARIANT, 'Value')
    ),
    COMMETHOD(
        [dispid(2192)],
        HRESULT,
        'Remove',
        (['in'], VARIANT, 'Item')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for AccessObjectProperties implementation
# class AccessObjectProperties_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, PropertyName, Value):
#         '-no docstring-'
#         #return 
#
#     def Remove(self, Item):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_OptionButtonInOptionEvents._methods_ = [
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _OptionButtonInOptionEvents implementation
# class _OptionButtonInOptionEvents_Impl(object):
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
vbKeyRButton = 2  # Constant c_short


class _ToggleButtonInOption(CoClass):
    _reg_clsid_ = GUID('{BC9E435E-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


_ToggleButtonInOption._com_interfaces_ = [_ToggleButton]
_ToggleButtonInOption._outgoing_interfaces_ = [DispToggleButtonEvents, _ToggleButtonInOptionEvents]
A_PRINTALL = 0  # Constant c_short
DB_SORTHUNGARIAN = 265  # Constant c_int

DispOptionButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]
vbKeyCancel = 3  # Constant c_short
A_SELECTION = 1  # Constant c_short
DB_SORTICELANDIC = 262  # Constant c_int
vbKeyMButton = 4  # Constant c_short

_SmartTags._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_SmartTag)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'Name'),
        (['out', 'retval'], POINTER(POINTER(_SmartTag)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTags implementation
# class _SmartTags_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Name):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class References(CoClass):
    _reg_clsid_ = GUID('{EB106214-9C89-11CF-A2B3-00A0C90542FF}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _References(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EB106213-9C89-11CF-A2B3-00A0C90542FF}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Item(self, var: hints.Incomplete) -> 'Reference': ...
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def AddFromGuid(self, Guid: hints.Incomplete, Major: hints.Incomplete, Minor: hints.Incomplete) -> 'Reference': ...
        def AddFromFile(self, FileName: hints.Incomplete) -> 'Reference': ...
        def Remove(self, Reference: hints.Incomplete) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class _References_Events(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{F163F201-ADA2-11CF-89A9-00A0C9054129}')
    _idlflags_ = ['hidden', 'nonextensible']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def ItemAdded(self, Reference: hints.Incomplete) -> hints.Incomplete: ...
        def ItemRemoved(self, Reference: hints.Incomplete) -> hints.Incomplete: ...


References._com_interfaces_ = [_References]
References._outgoing_interfaces_ = [_References_Events]
DB_SORTNORWDAN = 261  # Constant c_int

_ReportEvents2._disp_methods_ = [
    DISPMETHOD(
        [dispid(2066)],
        None,
        'Open',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2070)], None, 'Close'),
    DISPMETHOD([dispid(2071)], None, 'Activate'),
    DISPMETHOD([dispid(2072)], None, 'Deactivate'),
    DISPMETHOD(
        [dispid(2083)],
        None,
        'Error',
        (['in', 'out'], POINTER(c_short), 'DataErr'),
        (['out'], POINTER(c_short), 'Response')
    ),
    DISPMETHOD(
        [dispid(2161)],
        None,
        'NoData',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2162)], None, 'Page'),
    DISPMETHOD([dispid(2058)], None, 'Current'),
    DISPMETHOD([dispid(2067)], None, 'Load'),
    DISPMETHOD([dispid(2068)], None, 'Resize'),
    DISPMETHOD(
        [dispid(2069)],
        None,
        'Unload',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD([dispid(2084)], None, 'Timer'),
    DISPMETHOD(
        [dispid(2155)],
        None,
        'Filter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FilterType')
    ),
    DISPMETHOD(
        [dispid(2156)],
        None,
        'ApplyFilter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'ApplyType')
    ),
    DISPMETHOD(
        [dispid(2401)],
        None,
        'MouseWheel',
        (['in'], VARIANT_BOOL, 'Page'),
        (['in'], c_int, 'Count')
    ),
]
A_PAGES = 2  # Constant c_short
vbKeyBack = 8  # Constant c_short

_PaletteButtonEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _PaletteButtonEvents implementation
# class _PaletteButtonEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
DB_SORTPDXINTL = 4096  # Constant c_int


class Reference(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{EB106212-9C89-11CF-A2B3-00A0C90542FF}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Collection(self) -> hints.Annotated['_References', hints.FirstComItfOf['References']]: ...
        Collection = hints.normal_property(_get_Collection)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Guid(self) -> hints.Incomplete: ...
        Guid = hints.normal_property(_get_Guid)
        def _get_Major(self) -> hints.Incomplete: ...
        Major = hints.normal_property(_get_Major)
        def _get_Minor(self) -> hints.Incomplete: ...
        Minor = hints.normal_property(_get_Minor)
        def _get_FullPath(self) -> hints.Incomplete: ...
        FullPath = hints.normal_property(_get_FullPath)
        def _get_BuiltIn(self) -> hints.Incomplete: ...
        BuiltIn = hints.normal_property(_get_BuiltIn)
        def _get_IsBroken(self) -> hints.Incomplete: ...
        IsBroken = hints.normal_property(_get_IsBroken)
        def _get_Kind(self) -> hints.Incomplete: ...
        Kind = hints.normal_property(_get_Kind)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_References_Events._disp_methods_ = [
    DISPMETHOD(
        [dispid(0)],
        None,
        'ItemAdded',
        ([], POINTER(Reference), 'Reference')
    ),
    DISPMETHOD(
        [dispid(1)],
        None,
        'ItemRemoved',
        ([], POINTER(Reference), 'Reference')
    ),
]

_PaletteButton._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propget'],
        HRESULT,
        'OptionValue',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propput'],
        HRESULT,
        'OptionValue',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propget'],
        HRESULT,
        'TripleState',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propput'],
        HRESULT,
        'TripleState',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
]

################################################################
# code template for _PaletteButton implementation
# class _PaletteButton_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OptionValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TripleState = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
A_HIGH = 0  # Constant c_short
vbKeyTab = 9  # Constant c_short


class Chart(CoClass):
    _reg_clsid_ = GUID('{3B06E997-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _IvyChart(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E998-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_RowSource(self) -> hints.Incomplete: ...
        def _set_RowSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSource = hints.normal_property(_get_RowSource, _set_RowSource)
        def _get_LinkChildFields(self) -> hints.Incomplete: ...
        def _set_LinkChildFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkChildFields = hints.normal_property(_get_LinkChildFields, _set_LinkChildFields)
        def _get_LinkMasterFields(self) -> hints.Incomplete: ...
        def _set_LinkMasterFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkMasterFields = hints.normal_property(_get_LinkMasterFields, _set_LinkMasterFields)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_ChartAxis(self) -> hints.Incomplete: ...
        def _set_ChartAxis(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartAxis = hints.normal_property(_get_ChartAxis, _set_ChartAxis)
        def _get_ChartLegend(self) -> hints.Incomplete: ...
        def _set_ChartLegend(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartLegend = hints.normal_property(_get_ChartLegend, _set_ChartLegend)
        def _get_ChartValues(self) -> hints.Incomplete: ...
        def _set_ChartValues(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartValues = hints.normal_property(_get_ChartValues, _set_ChartValues)
        def _get_HasLegend(self) -> hints.Incomplete: ...
        def _set_HasLegend(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasLegend = hints.normal_property(_get_HasLegend, _set_HasLegend)
        def _get_HasTitle(self) -> hints.Incomplete: ...
        def _set_HasTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasTitle = hints.normal_property(_get_HasTitle, _set_HasTitle)
        def _get_ChartTitle(self) -> hints.Incomplete: ...
        def _set_ChartTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitle = hints.normal_property(_get_ChartTitle, _set_ChartTitle)
        def _get_HasAxisTitles(self) -> hints.Incomplete: ...
        def _set_HasAxisTitles(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasAxisTitles = hints.normal_property(_get_HasAxisTitles, _set_HasAxisTitles)
        def _get_CategoryAxisTitle(self) -> hints.Incomplete: ...
        def _set_CategoryAxisTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisTitle = hints.normal_property(_get_CategoryAxisTitle, _set_CategoryAxisTitle)
        def _get_PrimaryValuesAxisTitle(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisTitle = hints.normal_property(_get_PrimaryValuesAxisTitle, _set_PrimaryValuesAxisTitle)
        def _get_SecondaryValuesAxisTitle(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisTitle = hints.normal_property(_get_SecondaryValuesAxisTitle, _set_SecondaryValuesAxisTitle)
        def _get_TransformedRowSource(self) -> hints.Incomplete: ...
        TransformedRowSource = hints.normal_property(_get_TransformedRowSource)
        def _get_ChartType(self) -> hints.Incomplete: ...
        def _set_ChartType(self, pChartType: hints.Incomplete) -> hints.Hresult: ...
        ChartType = hints.normal_property(_get_ChartType, _set_ChartType)
        def _get_LegendPosition(self) -> hints.Incomplete: ...
        def _set_LegendPosition(self, pLegendPosition: hints.Incomplete) -> hints.Hresult: ...
        LegendPosition = hints.normal_property(_get_LegendPosition, _set_LegendPosition)
        def _get_PrimaryValuesAxisMinimum(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisMinimum(self, pMin: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisMinimum = hints.normal_property(_get_PrimaryValuesAxisMinimum, _set_PrimaryValuesAxisMinimum)
        def _get_PrimaryValuesAxisMaximum(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisMaximum(self, pMax: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisMaximum = hints.normal_property(_get_PrimaryValuesAxisMaximum, _set_PrimaryValuesAxisMaximum)
        def _get_SecondaryValuesAxisMinimum(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisMinimum(self, pMin: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisMinimum = hints.normal_property(_get_SecondaryValuesAxisMinimum, _set_SecondaryValuesAxisMinimum)
        def _get_SecondaryValuesAxisMaximum(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisMaximum(self, pMax: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisMaximum = hints.normal_property(_get_SecondaryValuesAxisMaximum, _set_SecondaryValuesAxisMaximum)
        def _get_PrimaryValuesAxisRange(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisRange(self, pPrimaryValueAxisRange: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisRange = hints.normal_property(_get_PrimaryValuesAxisRange, _set_PrimaryValuesAxisRange)
        def _get_SecondaryValuesAxisRange(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisRange(self, pSecondaryValueAxisRange: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisRange = hints.normal_property(_get_SecondaryValuesAxisRange, _set_SecondaryValuesAxisRange)
        def _get_PrimaryValuesAxisFontSize(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisFontSize = hints.normal_property(_get_PrimaryValuesAxisFontSize, _set_PrimaryValuesAxisFontSize)
        def _get_PrimaryValuesAxisFontColor(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisFontColor = hints.normal_property(_get_PrimaryValuesAxisFontColor, _set_PrimaryValuesAxisFontColor)
        def _get_PrimaryValuesAxisThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisThemeColorIndex = hints.normal_property(_get_PrimaryValuesAxisThemeColorIndex, _set_PrimaryValuesAxisThemeColorIndex)
        def _get_PrimaryValuesAxisFontTint(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisFontTint = hints.normal_property(_get_PrimaryValuesAxisFontTint, _set_PrimaryValuesAxisFontTint)
        def _get_PrimaryValuesAxisFontShade(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisFontShade = hints.normal_property(_get_PrimaryValuesAxisFontShade, _set_PrimaryValuesAxisFontShade)
        def _get_SecondaryValuesAxisFontSize(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisFontSize = hints.normal_property(_get_SecondaryValuesAxisFontSize, _set_SecondaryValuesAxisFontSize)
        def _get_SecondaryValuesAxisThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisThemeColorIndex = hints.normal_property(_get_SecondaryValuesAxisThemeColorIndex, _set_SecondaryValuesAxisThemeColorIndex)
        def _get_SecondaryValuesAxisFontTint(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisFontTint = hints.normal_property(_get_SecondaryValuesAxisFontTint, _set_SecondaryValuesAxisFontTint)
        def _get_SecondaryValuesAxisFontShade(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisFontShade = hints.normal_property(_get_SecondaryValuesAxisFontShade, _set_SecondaryValuesAxisFontShade)
        def _get_SecondaryValuesAxisFontColor(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisFontColor = hints.normal_property(_get_SecondaryValuesAxisFontColor, _set_SecondaryValuesAxisFontColor)
        def _get_CategoryAxisFontSize(self) -> hints.Incomplete: ...
        def _set_CategoryAxisFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisFontSize = hints.normal_property(_get_CategoryAxisFontSize, _set_CategoryAxisFontSize)
        def _get_CategoryAxisFontColor(self) -> hints.Incomplete: ...
        def _set_CategoryAxisFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisFontColor = hints.normal_property(_get_CategoryAxisFontColor, _set_CategoryAxisFontColor)
        def _get_CategoryAxisThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_CategoryAxisThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisThemeColorIndex = hints.normal_property(_get_CategoryAxisThemeColorIndex, _set_CategoryAxisThemeColorIndex)
        def _get_CategoryAxisFontTint(self) -> hints.Incomplete: ...
        def _set_CategoryAxisFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisFontTint = hints.normal_property(_get_CategoryAxisFontTint, _set_CategoryAxisFontTint)
        def _get_CategoryAxisFontShade(self) -> hints.Incomplete: ...
        def _set_CategoryAxisFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CategoryAxisFontShade = hints.normal_property(_get_CategoryAxisFontShade, _set_CategoryAxisFontShade)
        def _get_ChartTitleFontColor(self) -> hints.Incomplete: ...
        def _set_ChartTitleFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleFontColor = hints.normal_property(_get_ChartTitleFontColor, _set_ChartTitleFontColor)
        def _get_ChartTitleThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ChartTitleThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleThemeColorIndex = hints.normal_property(_get_ChartTitleThemeColorIndex, _set_ChartTitleThemeColorIndex)
        def _get_ChartTitleFontTint(self) -> hints.Incomplete: ...
        def _set_ChartTitleFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleFontTint = hints.normal_property(_get_ChartTitleFontTint, _set_ChartTitleFontTint)
        def _get_ChartTitleFontShade(self) -> hints.Incomplete: ...
        def _set_ChartTitleFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleFontShade = hints.normal_property(_get_ChartTitleFontShade, _set_ChartTitleFontShade)
        def _get_ChartTitleFontSize(self) -> hints.Incomplete: ...
        def _set_ChartTitleFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleFontSize = hints.normal_property(_get_ChartTitleFontSize, _set_ChartTitleFontSize)
        def _get_ChartSeriesCollection(self) -> 'ChartSeriesCollection': ...
        ChartSeriesCollection = hints.normal_property(_get_ChartSeriesCollection)
        def _get_ChartAxisCollection(self) -> 'ChartAxisCollection': ...
        ChartAxisCollection = hints.normal_property(_get_ChartAxisCollection)
        def _get_ChartValuesCollection(self) -> 'ChartValuesCollection': ...
        ChartValuesCollection = hints.normal_property(_get_ChartValuesCollection)
        def _get_PrimaryValuesAxisFormat(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisFormat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisFormat = hints.normal_property(_get_PrimaryValuesAxisFormat, _set_PrimaryValuesAxisFormat)
        def _get_SecondaryValuesAxisFormat(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisFormat(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisFormat = hints.normal_property(_get_SecondaryValuesAxisFormat, _set_SecondaryValuesAxisFormat)
        def _get_PrimaryValuesAxisDisplayUnits(self) -> hints.Incomplete: ...
        def _set_PrimaryValuesAxisDisplayUnits(self, pPrimaryValueAxisDisplayUnits: hints.Incomplete) -> hints.Hresult: ...
        PrimaryValuesAxisDisplayUnits = hints.normal_property(_get_PrimaryValuesAxisDisplayUnits, _set_PrimaryValuesAxisDisplayUnits)
        def _get_SecondaryValuesAxisDisplayUnits(self) -> hints.Incomplete: ...
        def _set_SecondaryValuesAxisDisplayUnits(self, pSecondaryValueAxisDisplayUnits: hints.Incomplete) -> hints.Hresult: ...
        SecondaryValuesAxisDisplayUnits = hints.normal_property(_get_SecondaryValuesAxisDisplayUnits, _set_SecondaryValuesAxisDisplayUnits)
        def _get_ChartTitleFontName(self) -> hints.Incomplete: ...
        def _set_ChartTitleFontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartTitleFontName = hints.normal_property(_get_ChartTitleFontName, _set_ChartTitleFontName)
        def _get_LegendTextFontSize(self) -> hints.Incomplete: ...
        def _set_LegendTextFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LegendTextFontSize = hints.normal_property(_get_LegendTextFontSize, _set_LegendTextFontSize)
        def _get_LegendTextFontColor(self) -> hints.Incomplete: ...
        def _set_LegendTextFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LegendTextFontColor = hints.normal_property(_get_LegendTextFontColor, _set_LegendTextFontColor)
        def _get_LegendTextThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_LegendTextThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LegendTextThemeColorIndex = hints.normal_property(_get_LegendTextThemeColorIndex, _set_LegendTextThemeColorIndex)
        def _get_LegendTextFontTint(self) -> hints.Incomplete: ...
        def _set_LegendTextFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LegendTextFontTint = hints.normal_property(_get_LegendTextFontTint, _set_LegendTextFontTint)
        def _get_LegendTextFontShade(self) -> hints.Incomplete: ...
        def _set_LegendTextFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LegendTextFontShade = hints.normal_property(_get_LegendTextFontShade, _set_LegendTextFontShade)
        def _get_HasSubtitle(self) -> hints.Incomplete: ...
        def _set_HasSubtitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasSubtitle = hints.normal_property(_get_HasSubtitle, _set_HasSubtitle)
        def _get_ChartSubtitle(self) -> hints.Incomplete: ...
        def _set_ChartSubtitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitle = hints.normal_property(_get_ChartSubtitle, _set_ChartSubtitle)
        def _get_ChartSubtitleFontSize(self) -> hints.Incomplete: ...
        def _set_ChartSubtitleFontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitleFontSize = hints.normal_property(_get_ChartSubtitleFontSize, _set_ChartSubtitleFontSize)
        def _get_ChartSubtitleFontColor(self) -> hints.Incomplete: ...
        def _set_ChartSubtitleFontColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitleFontColor = hints.normal_property(_get_ChartSubtitleFontColor, _set_ChartSubtitleFontColor)
        def _get_ChartSubtitleThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ChartSubtitleThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitleThemeColorIndex = hints.normal_property(_get_ChartSubtitleThemeColorIndex, _set_ChartSubtitleThemeColorIndex)
        def _get_ChartSubtitleFontTint(self) -> hints.Incomplete: ...
        def _set_ChartSubtitleFontTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitleFontTint = hints.normal_property(_get_ChartSubtitleFontTint, _set_ChartSubtitleFontTint)
        def _get_ChartSubtitleFontShade(self) -> hints.Incomplete: ...
        def _set_ChartSubtitleFontShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ChartSubtitleFontShade = hints.normal_property(_get_ChartSubtitleFontShade, _set_ChartSubtitleFontShade)


class DispIvyChartEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E999-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


Chart._com_interfaces_ = [_IvyChart]
Chart._outgoing_interfaces_ = [DispIvyChartEvents]
DB_SORTPDXNOR = 4098  # Constant c_int

_References._methods_ = [
    COMMETHOD(
        [dispid(1610743808), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'retval')
    ),
    COMMETHOD(
        [dispid(0)],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'var'),
        (['out', 'retval'], POINTER(POINTER(Reference)), 'Reference')
    ),
    COMMETHOD(
        [dispid(1610743810), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'Count')
    ),
    COMMETHOD(
        [dispid(-4)],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'ppenum')
    ),
    COMMETHOD(
        [dispid(1610743812)],
        HRESULT,
        'AddFromGuid',
        (['in'], BSTR, 'Guid'),
        (['in'], c_int, 'Major'),
        (['in'], c_int, 'Minor'),
        (['out', 'retval'], POINTER(POINTER(Reference)), 'Reference')
    ),
    COMMETHOD(
        [dispid(1610743813)],
        HRESULT,
        'AddFromFile',
        (['in'], BSTR, 'FileName'),
        (['out', 'retval'], POINTER(POINTER(Reference)), 'Reference')
    ),
    COMMETHOD(
        [dispid(1610743814)],
        HRESULT,
        'Remove',
        (['in'], POINTER(Reference), 'Reference')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _References implementation
# class _References_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return retval
#
#     def Item(self, var):
#         '-no docstring-'
#         #return Reference
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return Count
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return ppenum
#
#     def AddFromGuid(self, Guid, Major, Minor):
#         '-no docstring-'
#         #return Reference
#
#     def AddFromFile(self, FileName):
#         '-no docstring-'
#         #return Reference
#
#     def Remove(self, Reference):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
A_MEDIUM = 1  # Constant c_short
vbKeyClear = 12  # Constant c_short


class ImportExportSpecification(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{55B0E0C9-C75D-4F42-AD20-6939C1D05B70}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Execute(self, Prompt: hints.Incomplete = ...) -> hints.Hresult: ...
        def Delete(self) -> hints.Hresult: ...
        def _get_XML(self) -> hints.Incomplete: ...
        def _set_XML(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        XML = hints.normal_property(_get_XML, _set_XML)
        def _get_Description(self) -> hints.Incomplete: ...
        def _set_Description(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Description = hints.normal_property(_get_Description, _set_Description)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ImportExportSpecifications._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(ImportExportSpecification)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2455)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'Name'),
        (['in'], BSTR, 'SpecificationDefinition'),
        (['out', 'retval'], POINTER(POINTER(ImportExportSpecification)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for ImportExportSpecifications implementation
# class ImportExportSpecifications_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Name, SpecificationDefinition):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
DB_SORTPDXSWE = 4097  # Constant c_int
vbKeyReturn = 13  # Constant c_short

_Edge._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2537), 'propget'],
        HRESULT,
        'ReadyState',
        (['out', 'retval'], POINTER(AcWebBrowserState), 'pRet')
    ),
    COMMETHOD(
        [dispid(2539), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(AcWebBrowserScrollBars), 'pRet')
    ),
    COMMETHOD(
        [dispid(2539), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], AcWebBrowserScrollBars, 'pRet')
    ),
    COMMETHOD(
        [dispid(2540), 'propget'],
        HRESULT,
        'ScrollTop',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2540), 'propput'],
        HRESULT,
        'ScrollTop',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2541), 'propget'],
        HRESULT,
        'ScrollLeft',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2541), 'propput'],
        HRESULT,
        'ScrollLeft',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(614), 'propget'],
        HRESULT,
        'LocationURL',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(810), 'propget'],
        HRESULT,
        'OnBeforeNavigate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(810), 'propput'],
        HRESULT,
        'OnBeforeNavigate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(608), 'propget'],
        HRESULT,
        'OnDocumentComplete',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(608), 'propput'],
        HRESULT,
        'OnDocumentComplete',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(610), 'propget'],
        HRESULT,
        'OnNavigateError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(610), 'propput'],
        HRESULT,
        'OnNavigateError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propget'],
        HRESULT,
        'OnUpdated',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propput'],
        HRESULT,
        'OnUpdated',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(607), 'hidden', 'propget'],
        HRESULT,
        'OnBeforeNavigateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(607), 'hidden', 'propput'],
        HRESULT,
        'OnBeforeNavigateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(609), 'hidden', 'propget'],
        HRESULT,
        'OnDocumentCompleteMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(609), 'hidden', 'propput'],
        HRESULT,
        'OnDocumentCompleteMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(611), 'hidden', 'propget'],
        HRESULT,
        'OnNavigateErrorMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(611), 'hidden', 'propput'],
        HRESULT,
        'OnNavigateErrorMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propget'],
        HRESULT,
        'OnUpdatedMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propput'],
        HRESULT,
        'OnUpdatedMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2665)],
        HRESULT,
        'ExecuteJavascript',
        (['in'], BSTR, 'Script')
    ),
    COMMETHOD(
        [dispid(2666)],
        HRESULT,
        'RetrieveJavascriptValue',
        (['in'], BSTR, 'Expression'),
        (['out', 'retval'], POINTER(BSTR), 'pValue')
    ),
    COMMETHOD(
        [dispid(2667)],
        HRESULT,
        'Navigate',
        (['in'], BSTR, 'URL')
    ),
    COMMETHOD([dispid(2668)], HRESULT, 'Refresh'),
]

################################################################
# code template for _Edge implementation
# class _Edge_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ReadyState(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollLeft = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LocationURL(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnBeforeNavigate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDocumentComplete = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNavigateError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdated = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnBeforeNavigateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDocumentCompleteMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNavigateErrorMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdatedMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def ExecuteJavascript(self, Script):
#         '-no docstring-'
#         #return 
#
#     def RetrieveJavascriptValue(self, Expression):
#         '-no docstring-'
#         #return pValue
#
#     def Navigate(self, URL):
#         '-no docstring-'
#         #return 
#
#     def Refresh(self):
#         '-no docstring-'
#         #return 
#
DB_SORTPOLISH = 266  # Constant c_int
A_LOW = 2  # Constant c_short
vbKeyShift = 16  # Constant c_short
DB_SORTSPANISH = 258  # Constant c_int
A_DRAFT = 3  # Constant c_short
vbKeyControl = 17  # Constant c_short
DB_SORTSWEDFIN = 260  # Constant c_int
A_PROMPT = 0  # Constant c_short
vbKeyMenu = 18  # Constant c_short


class Class(CoClass):
    _reg_clsid_ = GUID('{8B06E321-B23C-11CF-89A8-00A0C9054129}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


Class._com_interfaces_ = [_Dummy]
Class._outgoing_interfaces_ = [_DummyEvents]
DB_SORTTURKISH = 270  # Constant c_int
vbKeyPause = 19  # Constant c_short
DB_SORTUNDEFINED = -1  # Constant c_int
A_SAVE = 1  # Constant c_short
vbKeyCapital = 20  # Constant c_short


class Printer(CoClass):
    _reg_clsid_ = GUID('{DBC5175E-A8ED-11D3-A0DD-00C04F68712B}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


Printer._com_interfaces_ = [_Printer]
DB_FREELOCKS = 1  # Constant c_int
A_EXIT = 2  # Constant c_short
vbKeyEscape = 27  # Constant c_short


class FormOldV10(CoClass):
    _reg_clsid_ = GUID('{483615A0-74BE-101B-AF4E-00AA003F0F08}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Form2(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3F4A878E-C395-11D3-8D1F-0050048383FB}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_AllowFilters(self) -> hints.Incomplete: ...
        def _set_AllowFilters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFilters = hints.normal_property(_get_AllowFilters, _set_AllowFilters)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_DefaultView(self) -> hints.Incomplete: ...
        def _set_DefaultView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultView = hints.normal_property(_get_DefaultView, _set_DefaultView)
        def _get_ViewsAllowed(self) -> hints.Incomplete: ...
        def _set_ViewsAllowed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewsAllowed = hints.normal_property(_get_ViewsAllowed, _set_ViewsAllowed)
        def _get_AllowEditing(self) -> hints.Incomplete: ...
        def _set_AllowEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEditing = hints.normal_property(_get_AllowEditing, _set_AllowEditing)
        def _get_DefaultEditing(self) -> hints.Incomplete: ...
        def _set_DefaultEditing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultEditing = hints.normal_property(_get_DefaultEditing, _set_DefaultEditing)
        def _get_AllowEdits(self) -> hints.Incomplete: ...
        def _set_AllowEdits(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowEdits = hints.normal_property(_get_AllowEdits, _set_AllowEdits)
        def _get_AllowDeletions(self) -> hints.Incomplete: ...
        def _set_AllowDeletions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDeletions = hints.normal_property(_get_AllowDeletions, _set_AllowDeletions)
        def _get_AllowAdditions(self) -> hints.Incomplete: ...
        def _set_AllowAdditions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowAdditions = hints.normal_property(_get_AllowAdditions, _set_AllowAdditions)
        def _get_DataEntry(self) -> hints.Incomplete: ...
        def _set_DataEntry(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataEntry = hints.normal_property(_get_DataEntry, _set_DataEntry)
        def _get_AllowUpdating(self) -> hints.Incomplete: ...
        def _set_AllowUpdating(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowUpdating = hints.normal_property(_get_AllowUpdating, _set_AllowUpdating)
        def _get_RecordsetType(self) -> hints.Incomplete: ...
        def _set_RecordsetType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordsetType = hints.normal_property(_get_RecordsetType, _set_RecordsetType)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_ScrollBars(self) -> hints.Incomplete: ...
        def _set_ScrollBars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBars = hints.normal_property(_get_ScrollBars, _set_ScrollBars)
        def _get_RecordSelectors(self) -> hints.Incomplete: ...
        def _set_RecordSelectors(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSelectors = hints.normal_property(_get_RecordSelectors, _set_RecordSelectors)
        def _get_NavigationButtons(self) -> hints.Incomplete: ...
        def _set_NavigationButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NavigationButtons = hints.normal_property(_get_NavigationButtons, _set_NavigationButtons)
        def _get_DividingLines(self) -> hints.Incomplete: ...
        def _set_DividingLines(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DividingLines = hints.normal_property(_get_DividingLines, _set_DividingLines)
        def _get_AutoResize(self) -> hints.Incomplete: ...
        def _set_AutoResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoResize = hints.normal_property(_get_AutoResize, _set_AutoResize)
        def _get_AutoCenter(self) -> hints.Incomplete: ...
        def _set_AutoCenter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoCenter = hints.normal_property(_get_AutoCenter, _set_AutoCenter)
        def _get_PopUp(self) -> hints.Incomplete: ...
        def _set_PopUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PopUp = hints.normal_property(_get_PopUp, _set_PopUp)
        def _get_Modal(self) -> hints.Incomplete: ...
        def _set_Modal(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Modal = hints.normal_property(_get_Modal, _set_Modal)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_ControlBox(self) -> hints.Incomplete: ...
        def _set_ControlBox(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlBox = hints.normal_property(_get_ControlBox, _set_ControlBox)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_MinMaxButtons(self) -> hints.Incomplete: ...
        def _set_MinMaxButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinMaxButtons = hints.normal_property(_get_MinMaxButtons, _set_MinMaxButtons)
        def _get_CloseButton(self) -> hints.Incomplete: ...
        def _set_CloseButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CloseButton = hints.normal_property(_get_CloseButton, _set_CloseButton)
        def _get_WhatsThisButton(self) -> hints.Incomplete: ...
        def _set_WhatsThisButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WhatsThisButton = hints.normal_property(_get_WhatsThisButton, _set_WhatsThisButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_Cycle(self) -> hints.Incomplete: ...
        def _set_Cycle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Cycle = hints.normal_property(_get_Cycle, _set_Cycle)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenu(self) -> hints.Incomplete: ...
        def _set_ShortcutMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenu = hints.normal_property(_get_ShortcutMenu, _set_ShortcutMenu)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_RowHeight(self) -> hints.Incomplete: ...
        def _set_RowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowHeight = hints.normal_property(_get_RowHeight, _set_RowHeight)
        def _get_DatasheetFontName(self) -> hints.Incomplete: ...
        def _set_DatasheetFontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontName = hints.normal_property(_get_DatasheetFontName, _set_DatasheetFontName)
        def _get_DatasheetFontHeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontHeight = hints.normal_property(_get_DatasheetFontHeight, _set_DatasheetFontHeight)
        def _get_DatasheetFontWeight(self) -> hints.Incomplete: ...
        def _set_DatasheetFontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontWeight = hints.normal_property(_get_DatasheetFontWeight, _set_DatasheetFontWeight)
        def _get_DatasheetFontItalic(self) -> hints.Incomplete: ...
        def _set_DatasheetFontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontItalic = hints.normal_property(_get_DatasheetFontItalic, _set_DatasheetFontItalic)
        def _get_DatasheetFontUnderline(self) -> hints.Incomplete: ...
        def _set_DatasheetFontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetFontUnderline = hints.normal_property(_get_DatasheetFontUnderline, _set_DatasheetFontUnderline)
        def _get_TabularCharSet(self) -> hints.Incomplete: ...
        def _set_TabularCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularCharSet = hints.normal_property(_get_TabularCharSet, _set_TabularCharSet)
        def _get_DatasheetGridlinesBehavior(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesBehavior(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesBehavior = hints.normal_property(_get_DatasheetGridlinesBehavior, _set_DatasheetGridlinesBehavior)
        def _get_DatasheetGridlinesColor(self) -> hints.Incomplete: ...
        def _set_DatasheetGridlinesColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetGridlinesColor = hints.normal_property(_get_DatasheetGridlinesColor, _set_DatasheetGridlinesColor)
        def _get_DatasheetCellsEffect(self) -> hints.Incomplete: ...
        def _set_DatasheetCellsEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetCellsEffect = hints.normal_property(_get_DatasheetCellsEffect, _set_DatasheetCellsEffect)
        def _get_DatasheetForeColor(self) -> hints.Incomplete: ...
        def _set_DatasheetForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetForeColor = hints.normal_property(_get_DatasheetForeColor, _set_DatasheetForeColor)
        def _get_ShowGrid(self) -> hints.Incomplete: ...
        def _set_ShowGrid(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowGrid = hints.normal_property(_get_ShowGrid, _set_ShowGrid)
        def _get_DatasheetBackColor(self) -> hints.Incomplete: ...
        def _set_DatasheetBackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetBackColor = hints.normal_property(_get_DatasheetBackColor, _set_DatasheetBackColor)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_FrozenColumns(self) -> hints.Incomplete: ...
        def _set_FrozenColumns(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FrozenColumns = hints.normal_property(_get_FrozenColumns, _set_FrozenColumns)
        def _get_Bookmark(self) -> hints.Incomplete: ...
        def _set_Bookmark(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Bookmark = hints.normal_property(_get_Bookmark, _set_Bookmark)
        def _get_TabularFamily(self) -> hints.Incomplete: ...
        def _set_TabularFamily(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabularFamily = hints.normal_property(_get_TabularFamily, _set_TabularFamily)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OpenArgs(self) -> hints.Incomplete: ...
        def _set_OpenArgs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OpenArgs = hints.normal_property(_get_OpenArgs, _set_OpenArgs)
        def _get_ConnectSynch(self) -> hints.Incomplete: ...
        def _set_ConnectSynch(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ConnectSynch = hints.normal_property(_get_ConnectSynch, _set_ConnectSynch)
        def _get_OnCurrent(self) -> hints.Incomplete: ...
        def _set_OnCurrent(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnCurrent = hints.normal_property(_get_OnCurrent, _set_OnCurrent)
        def _get_OnInsert(self) -> hints.Incomplete: ...
        def _set_OnInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnInsert = hints.normal_property(_get_OnInsert, _set_OnInsert)
        def _get_BeforeInsert(self) -> hints.Incomplete: ...
        def _set_BeforeInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeInsert = hints.normal_property(_get_BeforeInsert, _set_BeforeInsert)
        def _get_AfterInsert(self) -> hints.Incomplete: ...
        def _set_AfterInsert(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterInsert = hints.normal_property(_get_AfterInsert, _set_AfterInsert)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnDelete(self) -> hints.Incomplete: ...
        def _set_OnDelete(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDelete = hints.normal_property(_get_OnDelete, _set_OnDelete)
        def _get_BeforeDelConfirm(self) -> hints.Incomplete: ...
        def _set_BeforeDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeDelConfirm = hints.normal_property(_get_BeforeDelConfirm, _set_BeforeDelConfirm)
        def _get_AfterDelConfirm(self) -> hints.Incomplete: ...
        def _set_AfterDelConfirm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterDelConfirm = hints.normal_property(_get_AfterDelConfirm, _set_AfterDelConfirm)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnLoad(self) -> hints.Incomplete: ...
        def _set_OnLoad(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLoad = hints.normal_property(_get_OnLoad, _set_OnLoad)
        def _get_OnResize(self) -> hints.Incomplete: ...
        def _set_OnResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnResize = hints.normal_property(_get_OnResize, _set_OnResize)
        def _get_OnUnload(self) -> hints.Incomplete: ...
        def _set_OnUnload(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUnload = hints.normal_property(_get_OnUnload, _set_OnUnload)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_KeyPreview(self) -> hints.Incomplete: ...
        def _set_KeyPreview(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyPreview = hints.normal_property(_get_KeyPreview, _set_KeyPreview)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_OnFilter(self) -> hints.Incomplete: ...
        def _set_OnFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnFilter = hints.normal_property(_get_OnFilter, _set_OnFilter)
        def _get_OnApplyFilter(self) -> hints.Incomplete: ...
        def _set_OnApplyFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnApplyFilter = hints.normal_property(_get_OnApplyFilter, _set_OnApplyFilter)
        def _get_OnTimer(self) -> hints.Incomplete: ...
        def _set_OnTimer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnTimer = hints.normal_property(_get_OnTimer, _set_OnTimer)
        def _get_TimerInterval(self) -> hints.Incomplete: ...
        def _set_TimerInterval(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TimerInterval = hints.normal_property(_get_TimerInterval, _set_TimerInterval)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        def _set_WindowWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowWidth = hints.normal_property(_get_WindowWidth, _set_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        def _set_WindowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowHeight = hints.normal_property(_get_WindowHeight, _set_WindowHeight)
        def _get_CurrentView(self) -> hints.Incomplete: ...
        def _set_CurrentView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentView = hints.normal_property(_get_CurrentView, _set_CurrentView)
        def _get_CurrentSectionTop(self) -> hints.Incomplete: ...
        def _set_CurrentSectionTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionTop = hints.normal_property(_get_CurrentSectionTop, _set_CurrentSectionTop)
        def _get_CurrentSectionLeft(self) -> hints.Incomplete: ...
        def _set_CurrentSectionLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentSectionLeft = hints.normal_property(_get_CurrentSectionLeft, _set_CurrentSectionLeft)
        def _get_SelLeft(self) -> hints.Incomplete: ...
        def _set_SelLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelLeft = hints.normal_property(_get_SelLeft, _set_SelLeft)
        def _get_SelTop(self) -> hints.Incomplete: ...
        def _set_SelTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelTop = hints.normal_property(_get_SelTop, _set_SelTop)
        def _get_SelWidth(self) -> hints.Incomplete: ...
        def _set_SelWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelWidth = hints.normal_property(_get_SelWidth, _set_SelWidth)
        def _get_SelHeight(self) -> hints.Incomplete: ...
        def _set_SelHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelHeight = hints.normal_property(_get_SelHeight, _set_SelHeight)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_InsideHeight(self) -> hints.Incomplete: ...
        def _set_InsideHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideHeight = hints.normal_property(_get_InsideHeight, _set_InsideHeight)
        def _get_InsideWidth(self) -> hints.Incomplete: ...
        def _set_InsideWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InsideWidth = hints.normal_property(_get_InsideWidth, _set_InsideWidth)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_AllowDesignChanges(self) -> hints.Incomplete: ...
        def _set_AllowDesignChanges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDesignChanges = hints.normal_property(_get_AllowDesignChanges, _set_AllowDesignChanges)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_ServerFilterByForm(self) -> hints.Incomplete: ...
        def _set_ServerFilterByForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilterByForm = hints.normal_property(_get_ServerFilterByForm, _set_ServerFilterByForm)
        def _get_MaxRecords(self) -> hints.Incomplete: ...
        def _set_MaxRecords(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecords = hints.normal_property(_get_MaxRecords, _set_MaxRecords)
        def _get_UniqueTable(self) -> hints.Incomplete: ...
        def _set_UniqueTable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UniqueTable = hints.normal_property(_get_UniqueTable, _set_UniqueTable)
        def _get_ResyncCommand(self) -> hints.Incomplete: ...
        def _set_ResyncCommand(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ResyncCommand = hints.normal_property(_get_ResyncCommand, _set_ResyncCommand)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_MaxRecButton(self) -> hints.Incomplete: ...
        def _set_MaxRecButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxRecButton = hints.normal_property(_get_MaxRecButton, _set_MaxRecButton)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_NewRecord(self) -> hints.Incomplete: ...
        NewRecord = hints.normal_property(_get_NewRecord)
        def Undo(self) -> hints.Hresult: ...
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def _get_Dynaset(self) -> hints.Incomplete: ...
        Dynaset = hints.normal_property(_get_Dynaset)
        def _get_RecordsetClone(self) -> hints.Incomplete: ...
        RecordsetClone = hints.normal_property(_get_RecordsetClone)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def _get_Section(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        Section = hints.named_property('Section', _get_Section)
        def _get_Form(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Form = hints.normal_property(_get_Form)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_ConnectControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ConnectControl = hints.normal_property(_get_ConnectControl)
        def Recalc(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Refresh(self) -> hints.Hresult: ...
        def Repaint(self) -> hints.Hresult: ...
        def GoToPage(self, PageNumber: hints.Incomplete, Right: hints.Incomplete = ..., Down: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_SubdatasheetHeight(self) -> hints.Incomplete: ...
        def _set_SubdatasheetHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetHeight = hints.normal_property(_get_SubdatasheetHeight, _set_SubdatasheetHeight)
        def _get_SubdatasheetExpanded(self) -> hints.Incomplete: ...
        def _set_SubdatasheetExpanded(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SubdatasheetExpanded = hints.normal_property(_get_SubdatasheetExpanded, _set_SubdatasheetExpanded)
        def _get_DatasheetBorderLineStyle(self) -> hints.Incomplete: ...
        def _set_DatasheetBorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetBorderLineStyle = hints.normal_property(_get_DatasheetBorderLineStyle, _set_DatasheetBorderLineStyle)
        def _get_DatasheetColumnHeaderUnderlineStyle(self) -> hints.Incomplete: ...
        def _set_DatasheetColumnHeaderUnderlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DatasheetColumnHeaderUnderlineStyle = hints.normal_property(_get_DatasheetColumnHeaderUnderlineStyle, _set_DatasheetColumnHeaderUnderlineStyle)
        def _get_HorizontalDatasheetGridlineStyle(self) -> hints.Incomplete: ...
        def _set_HorizontalDatasheetGridlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalDatasheetGridlineStyle = hints.normal_property(_get_HorizontalDatasheetGridlineStyle, _set_HorizontalDatasheetGridlineStyle)
        def _get_VerticalDatasheetGridlineStyle(self) -> hints.Incomplete: ...
        def _set_VerticalDatasheetGridlineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalDatasheetGridlineStyle = hints.normal_property(_get_VerticalDatasheetGridlineStyle, _set_VerticalDatasheetGridlineStyle)
        def _get_WindowTop(self) -> hints.Incomplete: ...
        WindowTop = hints.normal_property(_get_WindowTop)
        def _get_WindowLeft(self) -> hints.Incomplete: ...
        WindowLeft = hints.normal_property(_get_WindowLeft)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OnUndo(self) -> hints.Incomplete: ...
        def _set_OnUndo(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUndo = hints.normal_property(_get_OnUndo, _set_OnUndo)
        def _get_OnRecordExit(self) -> hints.Incomplete: ...
        def _set_OnRecordExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnRecordExit = hints.normal_property(_get_OnRecordExit, _set_OnRecordExit)
        def _get_PivotTable(self) -> hints.Incomplete: ...
        PivotTable = hints.normal_property(_get_PivotTable)
        def _get_ChartSpace(self) -> hints.Incomplete: ...
        ChartSpace = hints.normal_property(_get_ChartSpace)
        def _get_Printer(self) -> '_Printer': ...
        def _set_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        def _setref_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Printer = hints.normal_property(_get_Printer, hints.put_or_putref(_set_Printer, _setref_Printer))
        def _get_Moveable(self) -> hints.Incomplete: ...
        def _set_Moveable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Moveable = hints.normal_property(_get_Moveable, _set_Moveable)
        def _get_BeginBatchEdit(self) -> hints.Incomplete: ...
        def _set_BeginBatchEdit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeginBatchEdit = hints.normal_property(_get_BeginBatchEdit, _set_BeginBatchEdit)
        def _get_UndoBatchEdit(self) -> hints.Incomplete: ...
        def _set_UndoBatchEdit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UndoBatchEdit = hints.normal_property(_get_UndoBatchEdit, _set_UndoBatchEdit)
        def _get_BeforeBeginTransaction(self) -> hints.Incomplete: ...
        def _set_BeforeBeginTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeBeginTransaction = hints.normal_property(_get_BeforeBeginTransaction, _set_BeforeBeginTransaction)
        def _get_AfterBeginTransaction(self) -> hints.Incomplete: ...
        def _set_AfterBeginTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterBeginTransaction = hints.normal_property(_get_AfterBeginTransaction, _set_AfterBeginTransaction)
        def _get_BeforeCommitTransaction(self) -> hints.Incomplete: ...
        def _set_BeforeCommitTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeCommitTransaction = hints.normal_property(_get_BeforeCommitTransaction, _set_BeforeCommitTransaction)
        def _get_AfterCommitTransaction(self) -> hints.Incomplete: ...
        def _set_AfterCommitTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterCommitTransaction = hints.normal_property(_get_AfterCommitTransaction, _set_AfterCommitTransaction)
        def _get_RollbackTransaction(self) -> hints.Incomplete: ...
        def _set_RollbackTransaction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RollbackTransaction = hints.normal_property(_get_RollbackTransaction, _set_RollbackTransaction)
        def _get_AllowFormView(self) -> hints.Incomplete: ...
        def _set_AllowFormView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFormView = hints.normal_property(_get_AllowFormView, _set_AllowFormView)
        def _get_AllowDatasheetView(self) -> hints.Incomplete: ...
        def _set_AllowDatasheetView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowDatasheetView = hints.normal_property(_get_AllowDatasheetView, _set_AllowDatasheetView)
        def _get_AllowPivotTableView(self) -> hints.Incomplete: ...
        def _set_AllowPivotTableView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowPivotTableView = hints.normal_property(_get_AllowPivotTableView, _set_AllowPivotTableView)
        def _get_AllowPivotChartView(self) -> hints.Incomplete: ...
        def _set_AllowPivotChartView(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowPivotChartView = hints.normal_property(_get_AllowPivotChartView, _set_AllowPivotChartView)
        def _get_OnConnect(self) -> hints.Incomplete: ...
        def _set_OnConnect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnConnect = hints.normal_property(_get_OnConnect, _set_OnConnect)
        def _get_OnDisconnect(self) -> hints.Incomplete: ...
        def _set_OnDisconnect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDisconnect = hints.normal_property(_get_OnDisconnect, _set_OnDisconnect)
        def _get_PivotTableChange(self) -> hints.Incomplete: ...
        def _set_PivotTableChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PivotTableChange = hints.normal_property(_get_PivotTableChange, _set_PivotTableChange)
        def _get_Query(self) -> hints.Incomplete: ...
        def _set_Query(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Query = hints.normal_property(_get_Query, _set_Query)
        def _get_BeforeQuery(self) -> hints.Incomplete: ...
        def _set_BeforeQuery(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeQuery = hints.normal_property(_get_BeforeQuery, _set_BeforeQuery)
        def _get_SelectionChange(self) -> hints.Incomplete: ...
        def _set_SelectionChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelectionChange = hints.normal_property(_get_SelectionChange, _set_SelectionChange)
        def _get_CommandBeforeExecute(self) -> hints.Incomplete: ...
        def _set_CommandBeforeExecute(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandBeforeExecute = hints.normal_property(_get_CommandBeforeExecute, _set_CommandBeforeExecute)
        def _get_CommandChecked(self) -> hints.Incomplete: ...
        def _set_CommandChecked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandChecked = hints.normal_property(_get_CommandChecked, _set_CommandChecked)
        def _get_CommandEnabled(self) -> hints.Incomplete: ...
        def _set_CommandEnabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandEnabled = hints.normal_property(_get_CommandEnabled, _set_CommandEnabled)
        def _get_CommandExecute(self) -> hints.Incomplete: ...
        def _set_CommandExecute(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommandExecute = hints.normal_property(_get_CommandExecute, _set_CommandExecute)
        def _get_DataSetChange(self) -> hints.Incomplete: ...
        def _set_DataSetChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataSetChange = hints.normal_property(_get_DataSetChange, _set_DataSetChange)
        def _get_BeforeScreenTip(self) -> hints.Incomplete: ...
        def _set_BeforeScreenTip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeScreenTip = hints.normal_property(_get_BeforeScreenTip, _set_BeforeScreenTip)
        def _get_AfterFinalRender(self) -> hints.Incomplete: ...
        def _set_AfterFinalRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterFinalRender = hints.normal_property(_get_AfterFinalRender, _set_AfterFinalRender)
        def _get_AfterRender(self) -> hints.Incomplete: ...
        def _set_AfterRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterRender = hints.normal_property(_get_AfterRender, _set_AfterRender)
        def _get_AfterLayout(self) -> hints.Incomplete: ...
        def _set_AfterLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterLayout = hints.normal_property(_get_AfterLayout, _set_AfterLayout)
        def _get_BeforeRender(self) -> hints.Incomplete: ...
        def _set_BeforeRender(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeRender = hints.normal_property(_get_BeforeRender, _set_BeforeRender)
        def _get_MouseWheel(self) -> hints.Incomplete: ...
        def _set_MouseWheel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MouseWheel = hints.normal_property(_get_MouseWheel, _set_MouseWheel)
        def _get_ViewChange(self) -> hints.Incomplete: ...
        def _set_ViewChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ViewChange = hints.normal_property(_get_ViewChange, _set_ViewChange)
        def _get_DataChange(self) -> hints.Incomplete: ...
        def _set_DataChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataChange = hints.normal_property(_get_DataChange, _set_DataChange)
        def _get_FetchDefaults(self) -> hints.Incomplete: ...
        def _set_FetchDefaults(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FetchDefaults = hints.normal_property(_get_FetchDefaults, _set_FetchDefaults)
        def _get_BatchUpdates(self) -> hints.Incomplete: ...
        def _set_BatchUpdates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BatchUpdates = hints.normal_property(_get_BatchUpdates, _set_BatchUpdates)
        def _get_CommitOnClose(self) -> hints.Incomplete: ...
        def _set_CommitOnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommitOnClose = hints.normal_property(_get_CommitOnClose, _set_CommitOnClose)
        def _get_CommitOnNavigation(self) -> hints.Incomplete: ...
        def _set_CommitOnNavigation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CommitOnNavigation = hints.normal_property(_get_CommitOnNavigation, _set_CommitOnNavigation)
        def _get_UseDefaultPrinter(self) -> hints.Incomplete: ...
        def _set_UseDefaultPrinter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseDefaultPrinter = hints.normal_property(_get_UseDefaultPrinter, _set_UseDefaultPrinter)
        def _get_RecordSourceQualifier(self) -> hints.Incomplete: ...
        def _set_RecordSourceQualifier(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSourceQualifier = hints.normal_property(_get_RecordSourceQualifier, _set_RecordSourceQualifier)


FormOldV10._com_interfaces_ = [_Form2]
FormOldV10._outgoing_interfaces_ = [_FormEvents]
DB_SEC_NOACCESS = 0  # Constant c_int
A_IMPORT = 0  # Constant c_short
vbKeySpace = 32  # Constant c_short
DB_SEC_FULLACCESS = 1048575  # Constant c_int

AccessObjectProperty._methods_ = [
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for AccessObjectProperty implementation
# class AccessObjectProperty_Impl(object):
#     @property
#     def _Value(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_Form2._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propget'],
        HRESULT,
        'AllowFilters',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propput'],
        HRESULT,
        'AllowFilters',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propget'],
        HRESULT,
        'DefaultView',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propput'],
        HRESULT,
        'DefaultView',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propget'],
        HRESULT,
        'ViewsAllowed',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propput'],
        HRESULT,
        'ViewsAllowed',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propget'],
        HRESULT,
        'AllowEditing',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propput'],
        HRESULT,
        'AllowEditing',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propget'],
        HRESULT,
        'DefaultEditing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propput'],
        HRESULT,
        'DefaultEditing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propget'],
        HRESULT,
        'AllowEdits',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propput'],
        HRESULT,
        'AllowEdits',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propget'],
        HRESULT,
        'AllowDeletions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propput'],
        HRESULT,
        'AllowDeletions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propget'],
        HRESULT,
        'AllowAdditions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propput'],
        HRESULT,
        'AllowAdditions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propget'],
        HRESULT,
        'DataEntry',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propput'],
        HRESULT,
        'DataEntry',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propget'],
        HRESULT,
        'AllowUpdating',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propput'],
        HRESULT,
        'AllowUpdating',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propget'],
        HRESULT,
        'RecordsetType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propput'],
        HRESULT,
        'RecordsetType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propget'],
        HRESULT,
        'RecordSelectors',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propput'],
        HRESULT,
        'RecordSelectors',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propget'],
        HRESULT,
        'NavigationButtons',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propput'],
        HRESULT,
        'NavigationButtons',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propget'],
        HRESULT,
        'DividingLines',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propput'],
        HRESULT,
        'DividingLines',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propget'],
        HRESULT,
        'AutoResize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propput'],
        HRESULT,
        'AutoResize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propget'],
        HRESULT,
        'AutoCenter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propput'],
        HRESULT,
        'AutoCenter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propget'],
        HRESULT,
        'PopUp',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propput'],
        HRESULT,
        'PopUp',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propget'],
        HRESULT,
        'Modal',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propput'],
        HRESULT,
        'Modal',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propget'],
        HRESULT,
        'ControlBox',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propput'],
        HRESULT,
        'ControlBox',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propget'],
        HRESULT,
        'MinMaxButtons',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propput'],
        HRESULT,
        'MinMaxButtons',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propget'],
        HRESULT,
        'CloseButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propput'],
        HRESULT,
        'CloseButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propget'],
        HRESULT,
        'WhatsThisButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propput'],
        HRESULT,
        'WhatsThisButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propget'],
        HRESULT,
        'Cycle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propput'],
        HRESULT,
        'Cycle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propget'],
        HRESULT,
        'ShortcutMenu',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propput'],
        HRESULT,
        'ShortcutMenu',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propget'],
        HRESULT,
        'RowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propput'],
        HRESULT,
        'RowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propget'],
        HRESULT,
        'DatasheetFontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propput'],
        HRESULT,
        'DatasheetFontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propget'],
        HRESULT,
        'DatasheetFontHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propput'],
        HRESULT,
        'DatasheetFontHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propget'],
        HRESULT,
        'DatasheetFontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propput'],
        HRESULT,
        'DatasheetFontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propget'],
        HRESULT,
        'DatasheetFontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propput'],
        HRESULT,
        'DatasheetFontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propget'],
        HRESULT,
        'DatasheetFontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propput'],
        HRESULT,
        'DatasheetFontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propget'],
        HRESULT,
        'TabularCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propput'],
        HRESULT,
        'TabularCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propget'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propput'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propget'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propput'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propget'],
        HRESULT,
        'DatasheetCellsEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propput'],
        HRESULT,
        'DatasheetCellsEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propget'],
        HRESULT,
        'DatasheetForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propput'],
        HRESULT,
        'DatasheetForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propget'],
        HRESULT,
        'ShowGrid',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propput'],
        HRESULT,
        'ShowGrid',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propget'],
        HRESULT,
        'DatasheetBackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propput'],
        HRESULT,
        'DatasheetBackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propget'],
        HRESULT,
        'FrozenColumns',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propput'],
        HRESULT,
        'FrozenColumns',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propget'],
        HRESULT,
        'Bookmark',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propput'],
        HRESULT,
        'Bookmark',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propget'],
        HRESULT,
        'TabularFamily',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propput'],
        HRESULT,
        'TabularFamily',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propget'],
        HRESULT,
        'OpenArgs',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propput'],
        HRESULT,
        'OpenArgs',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propget'],
        HRESULT,
        'ConnectSynch',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propput'],
        HRESULT,
        'ConnectSynch',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propget'],
        HRESULT,
        'OnCurrent',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propput'],
        HRESULT,
        'OnCurrent',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propget'],
        HRESULT,
        'BeforeInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propput'],
        HRESULT,
        'BeforeInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propget'],
        HRESULT,
        'AfterInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propput'],
        HRESULT,
        'AfterInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propget'],
        HRESULT,
        'OnDelete',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propput'],
        HRESULT,
        'OnDelete',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propget'],
        HRESULT,
        'BeforeDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propput'],
        HRESULT,
        'BeforeDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propget'],
        HRESULT,
        'AfterDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propput'],
        HRESULT,
        'AfterDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propget'],
        HRESULT,
        'OnLoad',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propput'],
        HRESULT,
        'OnLoad',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propget'],
        HRESULT,
        'OnResize',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propput'],
        HRESULT,
        'OnResize',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propget'],
        HRESULT,
        'OnUnload',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propput'],
        HRESULT,
        'OnUnload',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propget'],
        HRESULT,
        'KeyPreview',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propput'],
        HRESULT,
        'KeyPreview',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propget'],
        HRESULT,
        'OnFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propput'],
        HRESULT,
        'OnFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propget'],
        HRESULT,
        'OnApplyFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propput'],
        HRESULT,
        'OnApplyFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propget'],
        HRESULT,
        'OnTimer',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propput'],
        HRESULT,
        'OnTimer',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propget'],
        HRESULT,
        'TimerInterval',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propput'],
        HRESULT,
        'TimerInterval',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propput'],
        HRESULT,
        'WindowWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propput'],
        HRESULT,
        'WindowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propput'],
        HRESULT,
        'CurrentView',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propget'],
        HRESULT,
        'CurrentSectionTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propput'],
        HRESULT,
        'CurrentSectionTop',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propget'],
        HRESULT,
        'CurrentSectionLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propput'],
        HRESULT,
        'CurrentSectionLeft',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propget'],
        HRESULT,
        'SelLeft',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propput'],
        HRESULT,
        'SelLeft',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propget'],
        HRESULT,
        'SelTop',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propput'],
        HRESULT,
        'SelTop',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propget'],
        HRESULT,
        'SelWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propput'],
        HRESULT,
        'SelWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propget'],
        HRESULT,
        'SelHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propput'],
        HRESULT,
        'SelHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propget'],
        HRESULT,
        'InsideHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propput'],
        HRESULT,
        'InsideHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propget'],
        HRESULT,
        'InsideWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propput'],
        HRESULT,
        'InsideWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propget'],
        HRESULT,
        'AllowDesignChanges',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propput'],
        HRESULT,
        'AllowDesignChanges',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propget'],
        HRESULT,
        'ServerFilterByForm',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propput'],
        HRESULT,
        'ServerFilterByForm',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propget'],
        HRESULT,
        'MaxRecords',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propput'],
        HRESULT,
        'MaxRecords',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propget'],
        HRESULT,
        'UniqueTable',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propput'],
        HRESULT,
        'UniqueTable',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propget'],
        HRESULT,
        'ResyncCommand',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propput'],
        HRESULT,
        'ResyncCommand',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propget'],
        HRESULT,
        'MaxRecButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propput'],
        HRESULT,
        'MaxRecButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2147), 'propget'],
        HRESULT,
        'NewRecord',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD([dispid(2145)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2085), 'hidden', 'propget'],
        HRESULT,
        'Dynaset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2086), 'propget'],
        HRESULT,
        'RecordsetClone',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(2088), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2092), 'hidden', 'propget'],
        HRESULT,
        'ConnectControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD([dispid(2017)], HRESULT, 'Recalc'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(-550)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(2020)], HRESULT, 'Repaint'),
    COMMETHOD(
        [dispid(2021)],
        HRESULT,
        'GoToPage',
        (['in'], c_int, 'PageNumber'),
        (['in', 'optional'], c_int, 'Right', 0),
        (['in', 'optional'], c_int, 'Down', 0)
    ),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(387), 'propget'],
        HRESULT,
        'SubdatasheetHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(387), 'propput'],
        HRESULT,
        'SubdatasheetHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propget'],
        HRESULT,
        'SubdatasheetExpanded',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propput'],
        HRESULT,
        'SubdatasheetExpanded',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(322), 'propget'],
        HRESULT,
        'DatasheetBorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(322), 'propput'],
        HRESULT,
        'DatasheetBorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(325), 'propget'],
        HRESULT,
        'DatasheetColumnHeaderUnderlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(325), 'propput'],
        HRESULT,
        'DatasheetColumnHeaderUnderlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(323), 'propget'],
        HRESULT,
        'HorizontalDatasheetGridlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(323), 'propput'],
        HRESULT,
        'HorizontalDatasheetGridlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(324), 'propget'],
        HRESULT,
        'VerticalDatasheetGridlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(324), 'propput'],
        HRESULT,
        'VerticalDatasheetGridlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(402), 'propget'],
        HRESULT,
        'WindowTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(403), 'propget'],
        HRESULT,
        'WindowLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(404), 'propget'],
        HRESULT,
        'OnUndo',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propput'],
        HRESULT,
        'OnUndo',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(405), 'hidden', 'propget'],
        HRESULT,
        'OnRecordExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(405), 'hidden', 'propput'],
        HRESULT,
        'OnRecordExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2340), 'propget'],
        HRESULT,
        'PivotTable',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2341), 'propget'],
        HRESULT,
        'ChartSpace',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propget'],
        HRESULT,
        'Printer',
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propput'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propputref'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propget'],
        HRESULT,
        'Moveable',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propput'],
        HRESULT,
        'Moveable',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(412), 'hidden', 'propget'],
        HRESULT,
        'BeginBatchEdit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(412), 'hidden', 'propput'],
        HRESULT,
        'BeginBatchEdit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(413), 'hidden', 'propget'],
        HRESULT,
        'UndoBatchEdit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(413), 'hidden', 'propput'],
        HRESULT,
        'UndoBatchEdit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(414), 'hidden', 'propget'],
        HRESULT,
        'BeforeBeginTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(414), 'hidden', 'propput'],
        HRESULT,
        'BeforeBeginTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(415), 'hidden', 'propget'],
        HRESULT,
        'AfterBeginTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(415), 'hidden', 'propput'],
        HRESULT,
        'AfterBeginTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(416), 'hidden', 'propget'],
        HRESULT,
        'BeforeCommitTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(416), 'hidden', 'propput'],
        HRESULT,
        'BeforeCommitTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(417), 'hidden', 'propget'],
        HRESULT,
        'AfterCommitTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(417), 'hidden', 'propput'],
        HRESULT,
        'AfterCommitTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(418), 'hidden', 'propget'],
        HRESULT,
        'RollbackTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(418), 'hidden', 'propput'],
        HRESULT,
        'RollbackTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(421), 'propget'],
        HRESULT,
        'AllowFormView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(421), 'propput'],
        HRESULT,
        'AllowFormView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(422), 'propget'],
        HRESULT,
        'AllowDatasheetView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(422), 'propput'],
        HRESULT,
        'AllowDatasheetView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(423), 'propget'],
        HRESULT,
        'AllowPivotTableView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(423), 'propput'],
        HRESULT,
        'AllowPivotTableView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(424), 'propget'],
        HRESULT,
        'AllowPivotChartView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(424), 'propput'],
        HRESULT,
        'AllowPivotChartView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(425), 'propget'],
        HRESULT,
        'OnConnect',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(425), 'propput'],
        HRESULT,
        'OnConnect',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(426), 'propget'],
        HRESULT,
        'OnDisconnect',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(426), 'propput'],
        HRESULT,
        'OnDisconnect',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(427), 'propget'],
        HRESULT,
        'PivotTableChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(427), 'propput'],
        HRESULT,
        'PivotTableChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(428), 'propget'],
        HRESULT,
        'Query',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(428), 'propput'],
        HRESULT,
        'Query',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(429), 'propget'],
        HRESULT,
        'BeforeQuery',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(429), 'propput'],
        HRESULT,
        'BeforeQuery',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(430), 'propget'],
        HRESULT,
        'SelectionChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(430), 'propput'],
        HRESULT,
        'SelectionChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(431), 'propget'],
        HRESULT,
        'CommandBeforeExecute',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(431), 'propput'],
        HRESULT,
        'CommandBeforeExecute',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(432), 'propget'],
        HRESULT,
        'CommandChecked',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(432), 'propput'],
        HRESULT,
        'CommandChecked',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(433), 'propget'],
        HRESULT,
        'CommandEnabled',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(433), 'propput'],
        HRESULT,
        'CommandEnabled',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(434), 'propget'],
        HRESULT,
        'CommandExecute',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(434), 'propput'],
        HRESULT,
        'CommandExecute',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(435), 'propget'],
        HRESULT,
        'DataSetChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(435), 'propput'],
        HRESULT,
        'DataSetChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(436), 'propget'],
        HRESULT,
        'BeforeScreenTip',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(436), 'propput'],
        HRESULT,
        'BeforeScreenTip',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(437), 'propget'],
        HRESULT,
        'AfterFinalRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(437), 'propput'],
        HRESULT,
        'AfterFinalRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(438), 'propget'],
        HRESULT,
        'AfterRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(438), 'propput'],
        HRESULT,
        'AfterRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(439), 'propget'],
        HRESULT,
        'AfterLayout',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(439), 'propput'],
        HRESULT,
        'AfterLayout',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(440), 'propget'],
        HRESULT,
        'BeforeRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(440), 'propput'],
        HRESULT,
        'BeforeRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propget'],
        HRESULT,
        'MouseWheel',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propput'],
        HRESULT,
        'MouseWheel',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(442), 'propget'],
        HRESULT,
        'ViewChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(442), 'propput'],
        HRESULT,
        'ViewChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(443), 'propget'],
        HRESULT,
        'DataChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(443), 'propput'],
        HRESULT,
        'DataChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(444), 'propget'],
        HRESULT,
        'FetchDefaults',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(444), 'propput'],
        HRESULT,
        'FetchDefaults',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(409), 'hidden', 'propget'],
        HRESULT,
        'BatchUpdates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(409), 'hidden', 'propput'],
        HRESULT,
        'BatchUpdates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(419), 'hidden', 'propget'],
        HRESULT,
        'CommitOnClose',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(419), 'hidden', 'propput'],
        HRESULT,
        'CommitOnClose',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(420), 'hidden', 'propget'],
        HRESULT,
        'CommitOnNavigation',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(420), 'hidden', 'propput'],
        HRESULT,
        'CommitOnNavigation',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propget'],
        HRESULT,
        'UseDefaultPrinter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propput'],
        HRESULT,
        'UseDefaultPrinter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propget'],
        HRESULT,
        'RecordSourceQualifier',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propput'],
        HRESULT,
        'RecordSourceQualifier',
        (['in'], BSTR, 'pRet')
    ),
]

################################################################
# code template for _Form2 implementation
# class _Form2_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFilters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewsAllowed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEdits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDeletions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowAdditions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataEntry = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowUpdating = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordsetType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSelectors = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NavigationButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DividingLines = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoCenter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PopUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Modal = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlBox = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinMaxButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CloseButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WhatsThisButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cycle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesBehavior = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetCellsEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowGrid = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetBackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FrozenColumns = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bookmark = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularFamily = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OpenArgs = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ConnectSynch = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDelete = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnload = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyPreview = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimer = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TimerInterval = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDesignChanges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilterByForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecords = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UniqueTable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ResyncCommand = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecButton = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def NewRecord(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Dynaset(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def RecordsetClone(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ConnectControl(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recalc(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Refresh(self):
#         '-no docstring-'
#         #return 
#
#     def Repaint(self):
#         '-no docstring-'
#         #return 
#
#     def GoToPage(self, PageNumber, Right, Down):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetExpanded = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetBorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetColumnHeaderUnderlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalDatasheetGridlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalDatasheetGridlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def WindowTop(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def WindowLeft(self):
#         '-no docstring-'
#         #return pRet
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUndo = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnRecordExit = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def PivotTable(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def ChartSpace(self):
#         '-no docstring-'
#         #return ppRet
#
#     def Printer(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Moveable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeginBatchEdit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UndoBatchEdit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeBeginTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterBeginTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeCommitTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterCommitTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RollbackTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFormView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDatasheetView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowPivotTableView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowPivotChartView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnConnect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDisconnect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PivotTableChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Query = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeQuery = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelectionChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandBeforeExecute = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandChecked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandEnabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandExecute = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataSetChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeScreenTip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterFinalRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterLayout = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MouseWheel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FetchDefaults = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BatchUpdates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommitOnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommitOnNavigation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseDefaultPrinter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSourceQualifier = property(_get, _set, doc = _set.__doc__)
#
vbKeyPageUp = 33  # Constant c_short

_TempVar._methods_ = [
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'bstrName')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _TempVar implementation
# class _TempVar_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Value = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return bstrName
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
A_EXPORT = 1  # Constant c_short
DB_SEC_DELETE = 65536  # Constant c_int

Reference._methods_ = [
    COMMETHOD(
        [dispid(1610743808), 'propget'],
        HRESULT,
        'Collection',
        (['out', 'retval'], POINTER(POINTER(References)), 'retval')
    ),
    COMMETHOD(
        [dispid(1610743809), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(1610743810), 'propget'],
        HRESULT,
        'Guid',
        (['out', 'retval'], POINTER(BSTR), 'pbstrGuid')
    ),
    COMMETHOD(
        [dispid(1610743811), 'propget'],
        HRESULT,
        'Major',
        (['out', 'retval'], POINTER(c_int), 'pMajor')
    ),
    COMMETHOD(
        [dispid(1610743812), 'propget'],
        HRESULT,
        'Minor',
        (['out', 'retval'], POINTER(c_int), 'pMinor')
    ),
    COMMETHOD(
        [dispid(1610743813), 'propget'],
        HRESULT,
        'FullPath',
        (['out', 'retval'], POINTER(BSTR), 'pbstrFullPath')
    ),
    COMMETHOD(
        [dispid(1610743814), 'propget'],
        HRESULT,
        'BuiltIn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfBuiltIn')
    ),
    COMMETHOD(
        [dispid(1610743815), 'propget'],
        HRESULT,
        'IsBroken',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfIsBroken')
    ),
    COMMETHOD(
        [dispid(1610743816), 'propget'],
        HRESULT,
        'Kind',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.vbext_RefKind),
            'pKind',
        )
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Reference implementation
# class Reference_Impl(object):
#     @property
#     def Collection(self):
#         '-no docstring-'
#         #return retval
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Guid(self):
#         '-no docstring-'
#         #return pbstrGuid
#
#     @property
#     def Major(self):
#         '-no docstring-'
#         #return pMajor
#
#     @property
#     def Minor(self):
#         '-no docstring-'
#         #return pMinor
#
#     @property
#     def FullPath(self):
#         '-no docstring-'
#         #return pbstrFullPath
#
#     @property
#     def BuiltIn(self):
#         '-no docstring-'
#         #return pfBuiltIn
#
#     @property
#     def IsBroken(self):
#         '-no docstring-'
#         #return pfIsBroken
#
#     @property
#     def Kind(self):
#         '-no docstring-'
#         #return pKind
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
vbKeyPageDown = 34  # Constant c_short
A_ATTACH = 2  # Constant c_short
DB_SEC_READSEC = 131072  # Constant c_int


class _SmartTagActions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3836C9EC-E9CB-4817-A738-50B4DD3DDD8D}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_SmartTagAction': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_SmartTag._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(_SmartTagProperties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2442), 'propget'],
        HRESULT,
        'SmartTagActions',
        (['out', 'retval'], POINTER(POINTER(_SmartTagActions)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2443), 'propget'],
        HRESULT,
        'XML',
        (['out', 'retval'], POINTER(BSTR), 'pbstrXML')
    ),
    COMMETHOD([dispid(2063)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(2446), 'propget'],
        HRESULT,
        'IsMissing',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTag implementation
# class _SmartTag_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def SmartTagActions(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def XML(self):
#         '-no docstring-'
#         #return pbstrXML
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def IsMissing(self):
#         '-no docstring-'
#         #return pfRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
vbKeyEnd = 35  # Constant c_short
A_IMPORTDELIM = 0  # Constant c_short
DB_SEC_WRITESEC = 262144  # Constant c_int
vbKeyHome = 36  # Constant c_short
A_IMPORTFIXED = 1  # Constant c_short
DB_SEC_WRITEOWNER = 524288  # Constant c_int
vbKeyLeft = 37  # Constant c_short
A_EXPORTDELIM = 2  # Constant c_short
DB_SEC_DBCREATE = 1  # Constant c_int
A_EXPORTFIXED = 3  # Constant c_short
DB_SEC_DBOPEN = 2  # Constant c_int
vbKeyUp = 38  # Constant c_short
vbKeyRight = 39  # Constant c_short
A_EXPORTMERGE = 4  # Constant c_short
DB_SEC_DBEXCLUSIVE = 4  # Constant c_int

ImportExportSpecification._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2452)],
        HRESULT,
        'Execute',
        (['in', 'optional'], VARIANT, 'Prompt')
    ),
    COMMETHOD([dispid(2453)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(2456), 'propget'],
        HRESULT,
        'XML',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2456), 'propput'],
        HRESULT,
        'XML',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2457), 'propget'],
        HRESULT,
        'Description',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2457), 'propput'],
        HRESULT,
        'Description',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for ImportExportSpecification implementation
# class ImportExportSpecification_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Execute(self, Prompt):
#         '-no docstring-'
#         #return 
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     XML = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Description = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
OLE_CHANGED = 0  # Constant c_short
DB_SEC_CREATE = 1  # Constant c_int
vbKeyDown = 40  # Constant c_short
OLE_SAVED = 1  # Constant c_short
DB_SEC_READDEF = 4  # Constant c_int
vbKeySelect = 41  # Constant c_short
OLE_CLOSED = 2  # Constant c_short
DB_SEC_WRITEDEF = 65548  # Constant c_int
vbKeyPrint = 42  # Constant c_short
OLE_RENAMED = 3  # Constant c_short
DB_SEC_RETRIEVEDATA = 20  # Constant c_int
vbKeyExecute = 43  # Constant c_short
OLE_RELEASE = 5  # Constant c_short
DB_SEC_INSERTDATA = 32  # Constant c_int
vbKeySnapshot = 44  # Constant c_short
SHIFT_MASK = 1  # Constant c_short
DB_SEC_REPLACEDATA = 64  # Constant c_int
vbKeyInsert = 45  # Constant c_short
CTRL_MASK = 2  # Constant c_short
DB_SEC_DELETEDATA = 128  # Constant c_int
vbKeyDelete = 46  # Constant c_short
ALT_MASK = 4  # Constant c_short
acDataErrDisplay = 1  # Constant c_short
vbKeyHelp = 47  # Constant c_short

Module._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2093)],
        HRESULT,
        'InsertText',
        (['in'], BSTR, 'Text')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(1610743813)],
        HRESULT,
        'AddFromString',
        (['in'], BSTR, 'String')
    ),
    COMMETHOD(
        [dispid(1610743814)],
        HRESULT,
        'AddFromFile',
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD(
        [dispid(1610743815), 'propget'],
        HRESULT,
        'Lines',
        (['in'], c_int, 'Line'),
        (['in'], c_int, 'NumLines'),
        (['out', 'retval'], POINTER(BSTR), 'String')
    ),
    COMMETHOD(
        [dispid(1610743816), 'propget'],
        HRESULT,
        'CountOfLines',
        (['out', 'retval'], POINTER(c_int), 'CountOfLines')
    ),
    COMMETHOD(
        [dispid(1610743817)],
        HRESULT,
        'InsertLines',
        (['in'], c_int, 'Line'),
        (['in'], BSTR, 'String')
    ),
    COMMETHOD(
        [dispid(1610743818)],
        HRESULT,
        'DeleteLines',
        (['in'], c_int, 'StartLine'),
        (['in'], c_int, 'Count')
    ),
    COMMETHOD(
        [dispid(1610743819)],
        HRESULT,
        'ReplaceLine',
        (['in'], c_int, 'Line'),
        (['in'], BSTR, 'String')
    ),
    COMMETHOD(
        [dispid(1610743820), 'propget'],
        HRESULT,
        'ProcStartLine',
        (['in'], BSTR, 'ProcName'),
        (
            ['in'],
            comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.vbext_ProcKind,
            'ProcKind',
        ),
        (['out', 'retval'], POINTER(c_int), 'ProcStartLine')
    ),
    COMMETHOD(
        [dispid(1610743821), 'propget'],
        HRESULT,
        'ProcCountLines',
        (['in'], BSTR, 'ProcName'),
        (
            ['in'],
            comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.vbext_ProcKind,
            'ProcKind',
        ),
        (['out', 'retval'], POINTER(c_int), 'ProcCountLines')
    ),
    COMMETHOD(
        [dispid(1610743822), 'propget'],
        HRESULT,
        'ProcBodyLine',
        (['in'], BSTR, 'ProcName'),
        (
            ['in'],
            comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.vbext_ProcKind,
            'ProcKind',
        ),
        (['out', 'retval'], POINTER(c_int), 'ProcBodyLine')
    ),
    COMMETHOD(
        [dispid(1610743823), 'propget'],
        HRESULT,
        'ProcOfLine',
        (['in'], c_int, 'Line'),
        (
            ['out'],
            POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.vbext_ProcKind),
            'pprockind',
        ),
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(1610743824), 'propget'],
        HRESULT,
        'CountOfDeclarationLines',
        (['out', 'retval'], POINTER(c_int), 'pDeclCountOfLines')
    ),
    COMMETHOD(
        [dispid(1610743825)],
        HRESULT,
        'CreateEventProc',
        (['in'], BSTR, 'EventName'),
        (['in'], BSTR, 'ObjectName'),
        (['out', 'retval'], POINTER(c_int), 'Line')
    ),
    COMMETHOD(
        [dispid(1610743826)],
        HRESULT,
        'Find',
        (['in'], BSTR, 'Target'),
        (['in', 'out'], POINTER(c_int), 'StartLine'),
        (['in', 'out'], POINTER(c_int), 'StartColumn'),
        (['in', 'out'], POINTER(c_int), 'EndLine'),
        (['in', 'out'], POINTER(c_int), 'EndColumn'),
        (['in', 'optional'], VARIANT_BOOL, 'WholeWord', False),
        (['in', 'optional'], VARIANT_BOOL, 'MatchCase', False),
        (['in', 'optional'], VARIANT_BOOL, 'PatternSearch', False),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfFound')
    ),
    COMMETHOD(
        [dispid(1610743827), 'propget'],
        HRESULT,
        'Type',
        (['out', 'retval'], POINTER(AcModuleType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Module implementation
# class Module_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def InsertText(self, Text):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def AddFromString(self, String):
#         '-no docstring-'
#         #return 
#
#     def AddFromFile(self, FileName):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Lines(self, Line, NumLines):
#         '-no docstring-'
#         #return String
#
#     @property
#     def CountOfLines(self):
#         '-no docstring-'
#         #return CountOfLines
#
#     def InsertLines(self, Line, String):
#         '-no docstring-'
#         #return 
#
#     def DeleteLines(self, StartLine, Count):
#         '-no docstring-'
#         #return 
#
#     def ReplaceLine(self, Line, String):
#         '-no docstring-'
#         #return 
#
#     @property
#     def ProcStartLine(self, ProcName, ProcKind):
#         '-no docstring-'
#         #return ProcStartLine
#
#     @property
#     def ProcCountLines(self, ProcName, ProcKind):
#         '-no docstring-'
#         #return ProcCountLines
#
#     @property
#     def ProcBodyLine(self, ProcName, ProcKind):
#         '-no docstring-'
#         #return ProcBodyLine
#
#     @property
#     def ProcOfLine(self, Line):
#         '-no docstring-'
#         #return pprockind, pbstrName
#
#     @property
#     def CountOfDeclarationLines(self):
#         '-no docstring-'
#         #return pDeclCountOfLines
#
#     def CreateEventProc(self, EventName, ObjectName):
#         '-no docstring-'
#         #return Line
#
#     def Find(self, Target, WholeWord, MatchCase, PatternSearch):
#         '-no docstring-'
#         #return StartLine, StartColumn, EndLine, EndColumn, pfFound
#
#     @property
#     def Type(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
LEFT_BUTTON = 1  # Constant c_short
acDataErrContinue = 0  # Constant c_short
vbKeyNumlock = 144  # Constant c_short
RIGHT_BUTTON = 2  # Constant c_short
acDataErrAdded = 2  # Constant c_short

_SmartTagProperties._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_SmartTagProperty)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], BSTR, 'Name'),
        (['in'], VARIANT, 'Value'),
        (['out', 'retval'], POINTER(POINTER(_SmartTagProperty)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTagProperties implementation
# class _SmartTagProperties_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Name, Value):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
vbKeyA = 65  # Constant c_short
MIDDLE_BUTTON = 4  # Constant c_short
acDeleteOK = 0  # Constant c_short
vbKeyB = 66  # Constant c_short
DATA_ERRCONTINUE = 0  # Constant c_short
acDeleteCancel = 1  # Constant c_short
DATA_ERRDISPLAY = 1  # Constant c_short
acDeleteUserCancel = 2  # Constant c_short
vbKeyC = 67  # Constant c_short
acObjStateOpen = 1  # Constant c_short
DATA_ERRADDED = 2  # Constant c_short
vbKeyD = 68  # Constant c_short
acObjStateNew = 4  # Constant c_short
LB_INITIALIZE = 0  # Constant c_short


class ReportOldV10(CoClass):
    _reg_clsid_ = GUID('{ECD1EADA-D373-11D3-8D21-0050048383FB}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Report2(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{32A1C62A-D374-11D3-8D21-0050048383FB}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_FormName(self) -> hints.Incomplete: ...
        def _set_FormName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormName = hints.normal_property(_get_FormName, _set_FormName)
        def _get_RecordSource(self) -> hints.Incomplete: ...
        def _set_RecordSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSource = hints.normal_property(_get_RecordSource, _set_RecordSource)
        def _get_Filter(self) -> hints.Incomplete: ...
        def _set_Filter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Filter = hints.normal_property(_get_Filter, _set_Filter)
        def _get_FilterOn(self) -> hints.Incomplete: ...
        def _set_FilterOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterOn = hints.normal_property(_get_FilterOn, _set_FilterOn)
        def _get_OrderBy(self) -> hints.Incomplete: ...
        def _set_OrderBy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderBy = hints.normal_property(_get_OrderBy, _set_OrderBy)
        def _get_OrderByOn(self) -> hints.Incomplete: ...
        def _set_OrderByOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OrderByOn = hints.normal_property(_get_OrderByOn, _set_OrderByOn)
        def _get_ServerFilter(self) -> hints.Incomplete: ...
        def _set_ServerFilter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ServerFilter = hints.normal_property(_get_ServerFilter, _set_ServerFilter)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_RecordLocks(self) -> hints.Incomplete: ...
        def _set_RecordLocks(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordLocks = hints.normal_property(_get_RecordLocks, _set_RecordLocks)
        def _get_PageHeader(self) -> hints.Incomplete: ...
        def _set_PageHeader(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageHeader = hints.normal_property(_get_PageHeader, _set_PageHeader)
        def _get_PageFooter(self) -> hints.Incomplete: ...
        def _set_PageFooter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageFooter = hints.normal_property(_get_PageFooter, _set_PageFooter)
        def _get_DateGrouping(self) -> hints.Incomplete: ...
        def _set_DateGrouping(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DateGrouping = hints.normal_property(_get_DateGrouping, _set_DateGrouping)
        def _get_GrpKeepTogether(self) -> hints.Incomplete: ...
        def _set_GrpKeepTogether(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GrpKeepTogether = hints.normal_property(_get_GrpKeepTogether, _set_GrpKeepTogether)
        def _get_MinButton(self) -> hints.Incomplete: ...
        def _set_MinButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinButton = hints.normal_property(_get_MinButton, _set_MinButton)
        def _get_MaxButton(self) -> hints.Incomplete: ...
        def _set_MaxButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MaxButton = hints.normal_property(_get_MaxButton, _set_MaxButton)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PictureSizeMode(self) -> hints.Incomplete: ...
        def _set_PictureSizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureSizeMode = hints.normal_property(_get_PictureSizeMode, _set_PictureSizeMode)
        def _get_PictureAlignment(self) -> hints.Incomplete: ...
        def _set_PictureAlignment(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureAlignment = hints.normal_property(_get_PictureAlignment, _set_PictureAlignment)
        def _get_PictureTiling(self) -> hints.Incomplete: ...
        def _set_PictureTiling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureTiling = hints.normal_property(_get_PictureTiling, _set_PictureTiling)
        def _get_PicturePages(self) -> hints.Incomplete: ...
        def _set_PicturePages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePages = hints.normal_property(_get_PicturePages, _set_PicturePages)
        def _get_MenuBar(self) -> hints.Incomplete: ...
        def _set_MenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MenuBar = hints.normal_property(_get_MenuBar, _set_MenuBar)
        def _get_Toolbar(self) -> hints.Incomplete: ...
        def _set_Toolbar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Toolbar = hints.normal_property(_get_Toolbar, _set_Toolbar)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_GridX(self) -> hints.Incomplete: ...
        def _set_GridX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridX = hints.normal_property(_get_GridX, _set_GridX)
        def _get_GridY(self) -> hints.Incomplete: ...
        def _set_GridY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridY = hints.normal_property(_get_GridY, _set_GridY)
        def _get_LayoutForPrint(self) -> hints.Incomplete: ...
        def _set_LayoutForPrint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LayoutForPrint = hints.normal_property(_get_LayoutForPrint, _set_LayoutForPrint)
        def _get_FastLaserPrinting(self) -> hints.Incomplete: ...
        def _set_FastLaserPrinting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FastLaserPrinting = hints.normal_property(_get_FastLaserPrinting, _set_FastLaserPrinting)
        def _get_HelpFile(self) -> hints.Incomplete: ...
        def _set_HelpFile(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpFile = hints.normal_property(_get_HelpFile, _set_HelpFile)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Hwnd(self) -> hints.Incomplete: ...
        def _set_Hwnd(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Hwnd = hints.normal_property(_get_Hwnd, _set_Hwnd)
        def _get_Count(self) -> hints.Incomplete: ...
        def _set_Count(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Count = hints.normal_property(_get_Count, _set_Count)
        __len__ = hints.to_dunder_len(Count)
        def _get_Page(self) -> hints.Incomplete: ...
        def _set_Page(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Page = hints.normal_property(_get_Page, _set_Page)
        def _get_Pages(self) -> hints.Incomplete: ...
        def _set_Pages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Pages = hints.normal_property(_get_Pages, _set_Pages)
        def _get_LogicalPageWidth(self) -> hints.Incomplete: ...
        def _set_LogicalPageWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageWidth = hints.normal_property(_get_LogicalPageWidth, _set_LogicalPageWidth)
        def _get_LogicalPageHeight(self) -> hints.Incomplete: ...
        def _set_LogicalPageHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogicalPageHeight = hints.normal_property(_get_LogicalPageHeight, _set_LogicalPageHeight)
        def _get_ZoomControl(self) -> hints.Incomplete: ...
        def _set_ZoomControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ZoomControl = hints.normal_property(_get_ZoomControl, _set_ZoomControl)
        def _get_HasData(self) -> hints.Incomplete: ...
        def _set_HasData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasData = hints.normal_property(_get_HasData, _set_HasData)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_PrintSection(self) -> hints.Incomplete: ...
        def _set_PrintSection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintSection = hints.normal_property(_get_PrintSection, _set_PrintSection)
        def _get_NextRecord(self) -> hints.Incomplete: ...
        def _set_NextRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NextRecord = hints.normal_property(_get_NextRecord, _set_NextRecord)
        def _get_MoveLayout(self) -> hints.Incomplete: ...
        def _set_MoveLayout(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MoveLayout = hints.normal_property(_get_MoveLayout, _set_MoveLayout)
        def _get_FormatCount(self) -> hints.Incomplete: ...
        def _set_FormatCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormatCount = hints.normal_property(_get_FormatCount, _set_FormatCount)
        def _get_PrintCount(self) -> hints.Incomplete: ...
        def _set_PrintCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrintCount = hints.normal_property(_get_PrintCount, _set_PrintCount)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Painting(self) -> hints.Incomplete: ...
        def _set_Painting(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Painting = hints.normal_property(_get_Painting, _set_Painting)
        def _get_PrtMip(self) -> hints.Incomplete: ...
        def _set_PrtMip(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtMip = hints.normal_property(_get_PrtMip, _set_PrtMip)
        def _get_PrtDevMode(self) -> hints.Incomplete: ...
        def _set_PrtDevMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevMode = hints.normal_property(_get_PrtDevMode, _set_PrtDevMode)
        def _get_PrtDevNames(self) -> hints.Incomplete: ...
        def _set_PrtDevNames(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PrtDevNames = hints.normal_property(_get_PrtDevNames, _set_PrtDevNames)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_CurrentX(self) -> hints.Incomplete: ...
        def _set_CurrentX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentX = hints.normal_property(_get_CurrentX, _set_CurrentX)
        def _get_CurrentY(self) -> hints.Incomplete: ...
        def _set_CurrentY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentY = hints.normal_property(_get_CurrentY, _set_CurrentY)
        def _get_ScaleHeight(self) -> hints.Incomplete: ...
        def _set_ScaleHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleHeight = hints.normal_property(_get_ScaleHeight, _set_ScaleHeight)
        def _get_ScaleLeft(self) -> hints.Incomplete: ...
        def _set_ScaleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleLeft = hints.normal_property(_get_ScaleLeft, _set_ScaleLeft)
        def _get_ScaleMode(self) -> hints.Incomplete: ...
        def _set_ScaleMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleMode = hints.normal_property(_get_ScaleMode, _set_ScaleMode)
        def _get_ScaleTop(self) -> hints.Incomplete: ...
        def _set_ScaleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleTop = hints.normal_property(_get_ScaleTop, _set_ScaleTop)
        def _get_ScaleWidth(self) -> hints.Incomplete: ...
        def _set_ScaleWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScaleWidth = hints.normal_property(_get_ScaleWidth, _set_ScaleWidth)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_DrawMode(self) -> hints.Incomplete: ...
        def _set_DrawMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawMode = hints.normal_property(_get_DrawMode, _set_DrawMode)
        def _get_DrawStyle(self) -> hints.Incomplete: ...
        def _set_DrawStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawStyle = hints.normal_property(_get_DrawStyle, _set_DrawStyle)
        def _get_DrawWidth(self) -> hints.Incomplete: ...
        def _set_DrawWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DrawWidth = hints.normal_property(_get_DrawWidth, _set_DrawWidth)
        def _get_FillColor(self) -> hints.Incomplete: ...
        def _set_FillColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillColor = hints.normal_property(_get_FillColor, _set_FillColor)
        def _get_FillStyle(self) -> hints.Incomplete: ...
        def _set_FillStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FillStyle = hints.normal_property(_get_FillStyle, _set_FillStyle)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_PaletteSource(self) -> hints.Incomplete: ...
        def _set_PaletteSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaletteSource = hints.normal_property(_get_PaletteSource, _set_PaletteSource)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_PaintPalette(self) -> hints.Incomplete: ...
        def _set_PaintPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PaintPalette = hints.normal_property(_get_PaintPalette, _set_PaintPalette)
        def _get_OnMenu(self) -> hints.Incomplete: ...
        def _set_OnMenu(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMenu = hints.normal_property(_get_OnMenu, _set_OnMenu)
        def _get_OnOpen(self) -> hints.Incomplete: ...
        def _set_OnOpen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnOpen = hints.normal_property(_get_OnOpen, _set_OnOpen)
        def _get_OnClose(self) -> hints.Incomplete: ...
        def _set_OnClose(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClose = hints.normal_property(_get_OnClose, _set_OnClose)
        def _get_OnActivate(self) -> hints.Incomplete: ...
        def _set_OnActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnActivate = hints.normal_property(_get_OnActivate, _set_OnActivate)
        def _get_OnDeactivate(self) -> hints.Incomplete: ...
        def _set_OnDeactivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDeactivate = hints.normal_property(_get_OnDeactivate, _set_OnDeactivate)
        def _get_OnNoData(self) -> hints.Incomplete: ...
        def _set_OnNoData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNoData = hints.normal_property(_get_OnNoData, _set_OnNoData)
        def _get_OnPage(self) -> hints.Incomplete: ...
        def _set_OnPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnPage = hints.normal_property(_get_OnPage, _set_OnPage)
        def _get_OnError(self) -> hints.Incomplete: ...
        def _set_OnError(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnError = hints.normal_property(_get_OnError, _set_OnError)
        def _get_Dirty(self) -> hints.Incomplete: ...
        def _set_Dirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Dirty = hints.normal_property(_get_Dirty, _set_Dirty)
        def _get_CurrentRecord(self) -> hints.Incomplete: ...
        def _set_CurrentRecord(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CurrentRecord = hints.normal_property(_get_CurrentRecord, _set_CurrentRecord)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_PicturePalette(self) -> hints.Incomplete: ...
        def _set_PicturePalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PicturePalette = hints.normal_property(_get_PicturePalette, _set_PicturePalette)
        def _get_HasModule(self) -> hints.Incomplete: ...
        def _set_HasModule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HasModule = hints.normal_property(_get_HasModule, _set_HasModule)
        def _get_acHiddenCurrentPage(self) -> hints.Incomplete: ...
        def _set_acHiddenCurrentPage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        acHiddenCurrentPage = hints.normal_property(_get_acHiddenCurrentPage, _set_acHiddenCurrentPage)
        def _get_Orientation(self) -> hints.Incomplete: ...
        def _set_Orientation(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Orientation = hints.normal_property(_get_Orientation, _set_Orientation)
        def _get_InputParameters(self) -> hints.Incomplete: ...
        def _set_InputParameters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputParameters = hints.normal_property(_get_InputParameters, _set_InputParameters)
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_DefaultControl(self, ControlType: hints.Incomplete) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        DefaultControl = hints.named_property('DefaultControl', _get_DefaultControl)
        def Circle(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, radius: hints.Incomplete, color: hints.Incomplete, start: hints.Incomplete, end: hints.Incomplete, aspect: hints.Incomplete) -> hints.Hresult: ...
        def Line(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def PSet(self, flags: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete, color: hints.Incomplete) -> hints.Hresult: ...
        def Scale(self, flags: hints.Incomplete, x1: hints.Incomplete, y1: hints.Incomplete, x2: hints.Incomplete, y2: hints.Incomplete) -> hints.Hresult: ...
        def TextWidth(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def TextHeight(self, Expr: hints.Incomplete) -> hints.Incomplete: ...
        def Print(self, Expr: hints.Incomplete) -> hints.Hresult: ...
        def _get_Section(self, Index: hints.Incomplete) -> hints.Annotated['_Section', hints.FirstComItfOf['Section']]: ...
        Section = hints.named_property('Section', _get_Section)
        def _get_GroupLevel(self, Index: hints.Incomplete) -> hints.Annotated['_GroupLevel', hints.FirstComItfOf['GroupLevel']]: ...
        GroupLevel = hints.named_property('GroupLevel', _get_GroupLevel)
        def _get_Report(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Report = hints.normal_property(_get_Report)
        def _get_Module(self) -> 'Module': ...
        Module = hints.normal_property(_get_Module)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def _get_Controls(self) -> 'Controls': ...
        Controls = hints.normal_property(_get_Controls)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_AutoResize(self) -> hints.Incomplete: ...
        def _set_AutoResize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoResize = hints.normal_property(_get_AutoResize, _set_AutoResize)
        def _get_AutoCenter(self) -> hints.Incomplete: ...
        def _set_AutoCenter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoCenter = hints.normal_property(_get_AutoCenter, _set_AutoCenter)
        def _get_PopUp(self) -> hints.Incomplete: ...
        def _set_PopUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PopUp = hints.normal_property(_get_PopUp, _set_PopUp)
        def _get_Modal(self) -> hints.Incomplete: ...
        def _set_Modal(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Modal = hints.normal_property(_get_Modal, _set_Modal)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_ControlBox(self) -> hints.Incomplete: ...
        def _set_ControlBox(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlBox = hints.normal_property(_get_ControlBox, _set_ControlBox)
        def _get_MinMaxButtons(self) -> hints.Incomplete: ...
        def _set_MinMaxButtons(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MinMaxButtons = hints.normal_property(_get_MinMaxButtons, _set_MinMaxButtons)
        def _get_CloseButton(self) -> hints.Incomplete: ...
        def _set_CloseButton(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CloseButton = hints.normal_property(_get_CloseButton, _set_CloseButton)
        def _get_WindowWidth(self) -> hints.Incomplete: ...
        def _set_WindowWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowWidth = hints.normal_property(_get_WindowWidth, _set_WindowWidth)
        def _get_WindowHeight(self) -> hints.Incomplete: ...
        def _set_WindowHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        WindowHeight = hints.normal_property(_get_WindowHeight, _set_WindowHeight)
        def _get_WindowTop(self) -> hints.Incomplete: ...
        WindowTop = hints.normal_property(_get_WindowTop)
        def _get_WindowLeft(self) -> hints.Incomplete: ...
        WindowLeft = hints.normal_property(_get_WindowLeft)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OpenArgs(self) -> hints.Incomplete: ...
        def _set_OpenArgs(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OpenArgs = hints.normal_property(_get_OpenArgs, _set_OpenArgs)
        def _get_Printer(self) -> '_Printer': ...
        def _set_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        def _setref_Printer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Printer = hints.normal_property(_get_Printer, hints.put_or_putref(_set_Printer, _setref_Printer))
        def _get_Moveable(self) -> hints.Incomplete: ...
        def _set_Moveable(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Moveable = hints.normal_property(_get_Moveable, _set_Moveable)
        def _get_UseDefaultPrinter(self) -> hints.Incomplete: ...
        def _set_UseDefaultPrinter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseDefaultPrinter = hints.normal_property(_get_UseDefaultPrinter, _set_UseDefaultPrinter)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def _get_RecordSourceQualifier(self) -> hints.Incomplete: ...
        def _set_RecordSourceQualifier(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RecordSourceQualifier = hints.normal_property(_get_RecordSourceQualifier, _set_RecordSourceQualifier)
        def _get_Shape(self) -> hints.Incomplete: ...
        Shape = hints.normal_property(_get_Shape)


ReportOldV10._com_interfaces_ = [_Report2]
ReportOldV10._outgoing_interfaces_ = [_ReportEvents]


class LocalVar(CoClass):
    _reg_clsid_ = GUID('{8357BB51-95A2-4043-A040-2825FACEF50D}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _LocalVar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8357BB52-95A2-4043-A040-2825FACEF50D}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get__Value(self) -> hints.Incomplete: ...
        def _set__Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Value = hints.normal_property(_get__Value, _set__Value)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


LocalVar._com_interfaces_ = [_LocalVar]


class _AddTileUIReceiver(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1DD4E82D-9EF3-4730-A55E-4D179CB08006}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def GetClientProtocolVersion(self) -> hints.Incomplete: ...
        def CreateCustomTable(self, bstrTableName: hints.Incomplete, bstrNounID: hints.Incomplete) -> hints.Incomplete: ...
        def GetNounsVersion(self) -> hints.Incomplete: ...
        def GetNounsMetadata(self) -> hints.Incomplete: ...
        def GetDefinitionOfNounID(self, bstrNounID: hints.Incomplete) -> hints.Incomplete: ...
        def CreateObjectFromDefinition(self, pdispNounDefArray: hints.Incomplete, pdispFinalNameArray: hints.Incomplete) -> hints.Hresult: ...
        def CreateRelationship(self, bstrLeftTable: hints.Incomplete, bstrRightTable: hints.Incomplete, bstrLookupFieldName: hints.Incomplete, bstrLookupFieldDescription: hints.Incomplete, lookupFieldPosition: hints.Incomplete, iOptions: hints.Incomplete) -> hints.Hresult: ...
        def ImportData(self, Type: hints.Incomplete) -> hints.Hresult: ...
        def GetNounTables(self) -> hints.Incomplete: ...
        def RegisterSearchTerm(self, bstrSearchTerm: hints.Incomplete) -> hints.Hresult: ...
        def BeginBatchNounAdd(self) -> hints.Hresult: ...
        def FinishBatchNounAdd(self) -> hints.Hresult: ...
        def NotifyAddTileUIVisibilityChange(self, fVisible: hints.Incomplete) -> hints.Hresult: ...
        def LaunchHyperlink(self, Type: hints.Incomplete, bstrUrl: hints.Incomplete) -> hints.Hresult: ...
        def MetadataLoaded(self) -> hints.Hresult: ...
        def IsOnlineContentAllowed(self) -> hints.Incomplete: ...


_AddTileUIReceiver._methods_ = [
    COMMETHOD(
        [dispid(2609), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetClientProtocolVersion',
        (['out', 'retval'], POINTER(BSTR), 'pbstrVersion')
    ),
    COMMETHOD(
        [dispid(2610), 'hidden', 'nonbrowsable'],
        HRESULT,
        'CreateCustomTable',
        (['in'], BSTR, 'bstrTableName'),
        (['in'], BSTR, 'bstrNounID'),
        (['out', 'retval'], POINTER(BSTR), 'pbstrFinalName')
    ),
    COMMETHOD(
        [dispid(2611), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetNounsVersion',
        (['out', 'retval'], POINTER(BSTR), 'pbstrVersion')
    ),
    COMMETHOD(
        [dispid(2612), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetNounsMetadata',
        (['out', 'retval'], POINTER(BSTR), 'pbstrMetadata')
    ),
    COMMETHOD(
        [dispid(2613), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetDefinitionOfNounID',
        (['in'], BSTR, 'bstrNounID'),
        (['out', 'retval'], POINTER(BSTR), 'pbstrNounDef')
    ),
    COMMETHOD(
        [dispid(2614), 'hidden', 'nonbrowsable'],
        HRESULT,
        'CreateObjectFromDefinition',
        (['in'], POINTER(IDispatch), 'pdispNounDefArray'),
        (['in'], POINTER(IDispatch), 'pdispFinalNameArray')
    ),
    COMMETHOD(
        [dispid(2615), 'hidden', 'nonbrowsable'],
        HRESULT,
        'CreateRelationship',
        (['in'], BSTR, 'bstrLeftTable'),
        (['in'], BSTR, 'bstrRightTable'),
        (['in'], BSTR, 'bstrLookupFieldName'),
        (['in'], BSTR, 'bstrLookupFieldDescription'),
        (['in'], c_int, 'lookupFieldPosition'),
        (['in'], c_int, 'iOptions')
    ),
    COMMETHOD(
        [dispid(2616), 'hidden', 'nonbrowsable'],
        HRESULT,
        'ImportData',
        (['in'], c_short, 'Type')
    ),
    COMMETHOD(
        [dispid(2618), 'hidden', 'nonbrowsable'],
        HRESULT,
        'GetNounTables',
        (['out', 'retval'], POINTER(BSTR), 'pbstrNounTables')
    ),
    COMMETHOD(
        [dispid(2621), 'hidden', 'nonbrowsable'],
        HRESULT,
        'RegisterSearchTerm',
        (['in'], BSTR, 'bstrSearchTerm')
    ),
    COMMETHOD(
        [dispid(2630), 'hidden', 'nonbrowsable'],
        HRESULT,
        'BeginBatchNounAdd',
    ),
    COMMETHOD(
        [dispid(2631), 'hidden', 'nonbrowsable'],
        HRESULT,
        'FinishBatchNounAdd',
    ),
    COMMETHOD(
        [dispid(2632), 'hidden', 'nonbrowsable'],
        HRESULT,
        'NotifyAddTileUIVisibilityChange',
        (['in'], VARIANT_BOOL, 'fVisible')
    ),
    COMMETHOD(
        [dispid(2642), 'hidden', 'nonbrowsable'],
        HRESULT,
        'LaunchHyperlink',
        (['in'], c_short, 'Type'),
        (['in'], BSTR, 'bstrUrl')
    ),
    COMMETHOD(
        [dispid(2643), 'hidden', 'nonbrowsable'],
        HRESULT,
        'MetadataLoaded',
    ),
    COMMETHOD(
        [dispid(2644), 'hidden', 'nonbrowsable'],
        HRESULT,
        'IsOnlineContentAllowed',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfUseOnlineContent')
    ),
]

################################################################
# code template for _AddTileUIReceiver implementation
# class _AddTileUIReceiver_Impl(object):
#     def GetClientProtocolVersion(self):
#         '-no docstring-'
#         #return pbstrVersion
#
#     def CreateCustomTable(self, bstrTableName, bstrNounID):
#         '-no docstring-'
#         #return pbstrFinalName
#
#     def GetNounsVersion(self):
#         '-no docstring-'
#         #return pbstrVersion
#
#     def GetNounsMetadata(self):
#         '-no docstring-'
#         #return pbstrMetadata
#
#     def GetDefinitionOfNounID(self, bstrNounID):
#         '-no docstring-'
#         #return pbstrNounDef
#
#     def CreateObjectFromDefinition(self, pdispNounDefArray, pdispFinalNameArray):
#         '-no docstring-'
#         #return 
#
#     def CreateRelationship(self, bstrLeftTable, bstrRightTable, bstrLookupFieldName, bstrLookupFieldDescription, lookupFieldPosition, iOptions):
#         '-no docstring-'
#         #return 
#
#     def ImportData(self, Type):
#         '-no docstring-'
#         #return 
#
#     def GetNounTables(self):
#         '-no docstring-'
#         #return pbstrNounTables
#
#     def RegisterSearchTerm(self, bstrSearchTerm):
#         '-no docstring-'
#         #return 
#
#     def BeginBatchNounAdd(self):
#         '-no docstring-'
#         #return 
#
#     def FinishBatchNounAdd(self):
#         '-no docstring-'
#         #return 
#
#     def NotifyAddTileUIVisibilityChange(self, fVisible):
#         '-no docstring-'
#         #return 
#
#     def LaunchHyperlink(self, Type, bstrUrl):
#         '-no docstring-'
#         #return 
#
#     def MetadataLoaded(self):
#         '-no docstring-'
#         #return 
#
#     def IsOnlineContentAllowed(self):
#         '-no docstring-'
#         #return pfUseOnlineContent
#


class WebOptions(CoClass):
    _reg_clsid_ = GUID('{416ED4F7-AB31-11D1-BF72-0060083E43CF}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _WebOptions(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{416ED4F6-AB31-11D1-BF72-0060083E43CF}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OrganizeInFolder(self) -> hints.Incomplete: ...
        def _set_OrganizeInFolder(self, pf: hints.Incomplete) -> hints.Hresult: ...
        OrganizeInFolder = hints.normal_property(_get_OrganizeInFolder, _set_OrganizeInFolder)
        def _get_UseLongFileNames(self) -> hints.Incomplete: ...
        def _set_UseLongFileNames(self, pf: hints.Incomplete) -> hints.Hresult: ...
        UseLongFileNames = hints.normal_property(_get_UseLongFileNames, _set_UseLongFileNames)
        def _get_DownloadComponents(self) -> hints.Incomplete: ...
        def _set_DownloadComponents(self, pf: hints.Incomplete) -> hints.Hresult: ...
        DownloadComponents = hints.normal_property(_get_DownloadComponents, _set_DownloadComponents)
        def _get_LocationOfComponents(self) -> hints.Incomplete: ...
        def _set_LocationOfComponents(self, pstr: hints.Incomplete) -> hints.Hresult: ...
        LocationOfComponents = hints.normal_property(_get_LocationOfComponents, _set_LocationOfComponents)
        def _get_Encoding(self) -> hints.Incomplete: ...
        def _set_Encoding(self, penc: hints.Incomplete) -> hints.Hresult: ...
        Encoding = hints.normal_property(_get_Encoding, _set_Encoding)
        def _get_FolderSuffix(self) -> hints.Incomplete: ...
        FolderSuffix = hints.normal_property(_get_FolderSuffix)
        def UseDefaultFolderSuffix(self) -> hints.Hresult: ...
        def _get_TargetBrowser(self) -> hints.Incomplete: ...
        def _set_TargetBrowser(self, ptb: hints.Incomplete) -> hints.Hresult: ...
        TargetBrowser = hints.normal_property(_get_TargetBrowser, _set_TargetBrowser)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


WebOptions._com_interfaces_ = [_WebOptions]

_DataAccessPage._methods_ = [
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'hidden', 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'hidden', 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Document',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2258)],
        HRESULT,
        'ApplyTheme',
        (['in'], BSTR, 'ThemeName')
    ),
    COMMETHOD(
        [dispid(2293), 'hidden', 'propget'],
        HRESULT,
        'WebOptions',
        (['out', 'retval'], POINTER(POINTER(WebOptions)), 'ppWO')
    ),
    COMMETHOD(
        [dispid(2268), 'propget'],
        HRESULT,
        'ConnectionString',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2268), 'propput'],
        HRESULT,
        'ConnectionString',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2298), 'hidden', 'propget'],
        HRESULT,
        'FieldListConnection',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2327), 'propget'],
        HRESULT,
        'MailEnvelope',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEnvelope)),
            'ppidMailEnvelope',
        )
    ),
    COMMETHOD(
        [dispid(2336), 'hidden', 'propget'],
        HRESULT,
        'CurrentSelection',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'CurrentSelection')
    ),
    COMMETHOD(
        [dispid(2379), 'propget'],
        HRESULT,
        'MSODSC',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2367), 'propget'],
        HRESULT,
        'RemovePersonalInformation',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2367), 'propput'],
        HRESULT,
        'RemovePersonalInformation',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _DataAccessPage implementation
# class _DataAccessPage_Impl(object):
#     @property
#     def _Name(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def WindowWidth(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def WindowHeight(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CurrentView(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Document(self):
#         '-no docstring-'
#         #return pRet
#
#     def ApplyTheme(self, ThemeName):
#         '-no docstring-'
#         #return 
#
#     @property
#     def WebOptions(self):
#         '-no docstring-'
#         #return ppWO
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ConnectionString = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FieldListConnection(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def MailEnvelope(self):
#         '-no docstring-'
#         #return ppidMailEnvelope
#
#     @property
#     def CurrentSelection(self):
#         '-no docstring-'
#         #return CurrentSelection
#
#     @property
#     def MSODSC(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     RemovePersonalInformation = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_LocalVar._methods_ = [
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'hidden', 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'bstrName')
    ),
    COMMETHOD(
        [dispid(0), 'hidden', 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'hidden', 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _LocalVar implementation
# class _LocalVar_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Value = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return bstrName
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class CustomControl(CoClass):
    _reg_clsid_ = GUID('{3B06E967-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispCustomControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70526E-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...


CustomControl._com_interfaces_ = [_CustomControl]
CustomControl._outgoing_interfaces_ = [DispCustomControlEvents, _CustomControlEvents]

_SmartTagProperty._methods_ = [
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2094), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD([dispid(2063)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTagProperty implementation
# class _SmartTagProperty_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _CustomControlInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{300471E2-7426-11CE-AB64-00AA0042B7CE}')
    _idlflags_ = ['hidden']


_CustomControlInReportEvents._methods_ = [
]

################################################################
# code template for _CustomControlInReportEvents implementation
# class _CustomControlInReportEvents_Impl(object):

DispCustomControlEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2076)],
        None,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
]


class Pages(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E978-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_Page', hints.FirstComItfOf['Page']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def Add(self, Before: hints.Incomplete = ...) -> hints.Annotated['_Page', hints.FirstComItfOf['Page']]: ...
        def Remove(self, Item: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_Control._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD([dispid(2143)], HRESULT, 'Dropdown'),
    COMMETHOD(
        [dispid(2101), 'propget'],
        HRESULT,
        'Column',
        (['in'], c_int, 'Index'),
        (['in', 'optional'], VARIANT, 'Row'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propget'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propput'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2103), 'propget'],
        HRESULT,
        'ItemData',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2104), 'propget'],
        HRESULT,
        'Object',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2105), 'propget'],
        HRESULT,
        'ObjectVerbs',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD(
        [dispid(2137), 'propget'],
        HRESULT,
        'ItemsSelected',
        (['out', 'retval'], POINTER(POINTER(_ItemsSelected)), 'pRet')
    ),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2180), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(POINTER(Pages)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
]

################################################################
# code template for _Control implementation
# class _Control_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     def Dropdown(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Column(self, Index, Row):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self, lRow):
#         '-no docstring-'
#         #return pRet
#     def _set(self, lRow, pRet):
#         '-no docstring-'
#     Selected = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ItemData(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Object(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ObjectVerbs(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def ItemsSelected(self):
#         '-no docstring-'
#         #return pRet
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Pages(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#


class _ObjectFrameEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E434D-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


_ObjectFrameEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _ObjectFrameEvents implementation
# class _ObjectFrameEvents_Impl(object):
#     def Updated(self):
#         '-no docstring-'
#         #return Code
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#


class ComboBox(CoClass):
    _reg_clsid_ = GUID('{3B06E95B-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Combobox(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E95C-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def Dropdown(self) -> hints.Hresult: ...
        def _get_Column(self, Index: hints.Incomplete, Row: hints.Incomplete = ...) -> hints.Incomplete: ...
        Column = hints.named_property('Column', _get_Column)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_ItemData(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ItemData = hints.named_property('ItemData', _get_ItemData)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_FormatConditions(self) -> 'FormatConditions': ...
        FormatConditions = hints.normal_property(_get_FormatConditions)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_Format(self) -> hints.Incomplete: ...
        def _set_Format(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Format = hints.normal_property(_get_Format, _set_Format)
        def _get_DecimalPlaces(self) -> hints.Incomplete: ...
        def _set_DecimalPlaces(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DecimalPlaces = hints.normal_property(_get_DecimalPlaces, _set_DecimalPlaces)
        def _get_InputMask(self) -> hints.Incomplete: ...
        def _set_InputMask(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InputMask = hints.normal_property(_get_InputMask, _set_InputMask)
        def _get_RowSourceType(self) -> hints.Incomplete: ...
        def _set_RowSourceType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSourceType = hints.normal_property(_get_RowSourceType, _set_RowSourceType)
        def _get_RowSource(self) -> hints.Incomplete: ...
        def _set_RowSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSource = hints.normal_property(_get_RowSource, _set_RowSource)
        def _get_ColumnCount(self) -> hints.Incomplete: ...
        def _set_ColumnCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnCount = hints.normal_property(_get_ColumnCount, _set_ColumnCount)
        def _get_ColumnHeads(self) -> hints.Incomplete: ...
        def _set_ColumnHeads(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHeads = hints.normal_property(_get_ColumnHeads, _set_ColumnHeads)
        def _get_ColumnWidths(self) -> hints.Incomplete: ...
        def _set_ColumnWidths(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidths = hints.normal_property(_get_ColumnWidths, _set_ColumnWidths)
        def _get_BoundColumn(self) -> hints.Incomplete: ...
        def _set_BoundColumn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BoundColumn = hints.normal_property(_get_BoundColumn, _set_BoundColumn)
        def _get_ListRows(self) -> hints.Incomplete: ...
        def _set_ListRows(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListRows = hints.normal_property(_get_ListRows, _set_ListRows)
        def _get_ListWidth(self) -> hints.Incomplete: ...
        def _set_ListWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListWidth = hints.normal_property(_get_ListWidth, _set_ListWidth)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_LimitToList(self) -> hints.Incomplete: ...
        def _set_LimitToList(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LimitToList = hints.normal_property(_get_LimitToList, _set_LimitToList)
        def _get_AutoExpand(self) -> hints.Incomplete: ...
        def _set_AutoExpand(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoExpand = hints.normal_property(_get_AutoExpand, _set_AutoExpand)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_IMEHold(self) -> hints.Incomplete: ...
        def _set_IMEHold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEHold = hints.normal_property(_get_IMEHold, _set_IMEHold)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_AllowAutoCorrect(self) -> hints.Incomplete: ...
        def _set_AllowAutoCorrect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowAutoCorrect = hints.normal_property(_get_AllowAutoCorrect, _set_AllowAutoCorrect)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_TextAlign(self) -> hints.Incomplete: ...
        def _set_TextAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlign = hints.normal_property(_get_TextAlign, _set_TextAlign)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Text(self) -> hints.Incomplete: ...
        def _set_Text(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Text = hints.normal_property(_get_Text, _set_Text)
        def _get_SelText(self) -> hints.Incomplete: ...
        def _set_SelText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelText = hints.normal_property(_get_SelText, _set_SelText)
        def _get_SelStart(self) -> hints.Incomplete: ...
        def _set_SelStart(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelStart = hints.normal_property(_get_SelStart, _set_SelStart)
        def _get_SelLength(self) -> hints.Incomplete: ...
        def _set_SelLength(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SelLength = hints.normal_property(_get_SelLength, _set_SelLength)
        def _get_TextAlignGeneral(self) -> hints.Incomplete: ...
        def _set_TextAlignGeneral(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlignGeneral = hints.normal_property(_get_TextAlignGeneral, _set_TextAlignGeneral)
        def _get_FormatPictureText(self) -> hints.Incomplete: ...
        def _set_FormatPictureText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FormatPictureText = hints.normal_property(_get_FormatPictureText, _set_FormatPictureText)
        def _get_Coltyp(self) -> hints.Incomplete: ...
        def _set_Coltyp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Coltyp = hints.normal_property(_get_Coltyp, _set_Coltyp)
        def _get_ListCount(self) -> hints.Incomplete: ...
        def _set_ListCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListCount = hints.normal_property(_get_ListCount, _set_ListCount)
        def _get_ListIndex(self) -> hints.Incomplete: ...
        def _set_ListIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListIndex = hints.normal_property(_get_ListIndex, _set_ListIndex)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnChange(self) -> hints.Incomplete: ...
        def _set_OnChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChange = hints.normal_property(_get_OnChange, _set_OnChange)
        def _get_OnNotInList(self) -> hints.Incomplete: ...
        def _set_OnNotInList(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNotInList = hints.normal_property(_get_OnNotInList, _set_OnNotInList)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_KeyboardLanguage(self) -> hints.Incomplete: ...
        def _set_KeyboardLanguage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyboardLanguage = hints.normal_property(_get_KeyboardLanguage, _set_KeyboardLanguage)
        def _get_AllowedText(self) -> hints.Incomplete: ...
        def _set_AllowedText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowedText = hints.normal_property(_get_AllowedText, _set_AllowedText)
        def _get_ScrollBarAlign(self) -> hints.Incomplete: ...
        def _set_ScrollBarAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBarAlign = hints.normal_property(_get_ScrollBarAlign, _set_ScrollBarAlign)
        def _get_NumeralShapes(self) -> hints.Incomplete: ...
        def _set_NumeralShapes(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NumeralShapes = hints.normal_property(_get_NumeralShapes, _set_NumeralShapes)
        def _get_IMEMode(self) -> hints.Incomplete: ...
        def _set_IMEMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMEMode = hints.normal_property(_get_IMEMode, _set_IMEMode)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_IMESentenceMode(self) -> hints.Incomplete: ...
        def _set_IMESentenceMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IMESentenceMode = hints.normal_property(_get_IMESentenceMode, _set_IMESentenceMode)
        def _get_IsHyperlink(self) -> hints.Incomplete: ...
        def _set_IsHyperlink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsHyperlink = hints.normal_property(_get_IsHyperlink, _set_IsHyperlink)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_OnDirty(self) -> hints.Incomplete: ...
        def _set_OnDirty(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDirty = hints.normal_property(_get_OnDirty, _set_OnDirty)
        def _get_OnUndo(self) -> hints.Incomplete: ...
        def _set_OnUndo(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUndo = hints.normal_property(_get_OnUndo, _set_OnUndo)
        def _get_Recordset(self) -> hints.Incomplete: ...
        def _setref_Recordset(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Recordset = hints.normal_property(_get_Recordset, _setref_Recordset)
        def AddItem(self, Item: hints.Incomplete, Index: hints.Incomplete = ...) -> hints.Hresult: ...
        def RemoveItem(self, Index: hints.Incomplete) -> hints.Hresult: ...
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_Selected(self, lRow: hints.Incomplete) -> hints.Incomplete: ...
        def _set_Selected(self, lRow: hints.Incomplete, pRet: hints.Incomplete) -> hints.Hresult: ...
        Selected = hints.named_property('Selected', _get_Selected, _set_Selected)
        def _get_ItemsSelected(self) -> '_ItemsSelected': ...
        ItemsSelected = hints.normal_property(_get_ItemsSelected)
        def _get_CanGrow(self) -> hints.Incomplete: ...
        def _set_CanGrow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanGrow = hints.normal_property(_get_CanGrow, _set_CanGrow)
        def _get_CanShrink(self) -> hints.Incomplete: ...
        def _set_CanShrink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        CanShrink = hints.normal_property(_get_CanShrink, _set_CanShrink)
        def _get_SeparatorCharacters(self) -> hints.Incomplete: ...
        def _set_SeparatorCharacters(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SeparatorCharacters = hints.normal_property(_get_SeparatorCharacters, _set_SeparatorCharacters)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnChangeMacro(self) -> hints.Incomplete: ...
        def _set_OnChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChangeMacro = hints.normal_property(_get_OnChangeMacro, _set_OnChangeMacro)
        def _get_OnNotInListMacro(self) -> hints.Incomplete: ...
        def _set_OnNotInListMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnNotInListMacro = hints.normal_property(_get_OnNotInListMacro, _set_OnNotInListMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_AllowValueListEdits(self) -> hints.Incomplete: ...
        def _set_AllowValueListEdits(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowValueListEdits = hints.normal_property(_get_AllowValueListEdits, _set_AllowValueListEdits)
        def _get_ListItemsEditForm(self) -> hints.Incomplete: ...
        def _set_ListItemsEditForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ListItemsEditForm = hints.normal_property(_get_ListItemsEditForm, _set_ListItemsEditForm)
        def _get_InheritValueList(self) -> hints.Incomplete: ...
        def _set_InheritValueList(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InheritValueList = hints.normal_property(_get_InheritValueList, _set_InheritValueList)
        def _get_LeftMargin(self) -> hints.Incomplete: ...
        def _set_LeftMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftMargin = hints.normal_property(_get_LeftMargin, _set_LeftMargin)
        def _get_TopMargin(self) -> hints.Incomplete: ...
        def _set_TopMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopMargin = hints.normal_property(_get_TopMargin, _set_TopMargin)
        def _get_RightMargin(self) -> hints.Incomplete: ...
        def _set_RightMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightMargin = hints.normal_property(_get_RightMargin, _set_RightMargin)
        def _get_BottomMargin(self) -> hints.Incomplete: ...
        def _set_BottomMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomMargin = hints.normal_property(_get_BottomMargin, _set_BottomMargin)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_ShowOnlyRowSourceValues(self) -> hints.Incomplete: ...
        def _set_ShowOnlyRowSourceValues(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShowOnlyRowSourceValues = hints.normal_property(_get_ShowOnlyRowSourceValues, _set_ShowOnlyRowSourceValues)
        def _get_DisplayAsHyperlink(self) -> hints.Incomplete: ...
        def _set_DisplayAsHyperlink(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayAsHyperlink = hints.normal_property(_get_DisplayAsHyperlink, _set_DisplayAsHyperlink)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class _ComboBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E434C-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Change(self) -> hints.Hresult: ...
        def NotInList(self, NewData: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...


class DispComboBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705276-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def NotInList(self, NewData: hints.Incomplete) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...


ComboBox._com_interfaces_ = [_Combobox]
ComboBox._outgoing_interfaces_ = [DispComboBoxEvents, _ComboBoxEvents]


class _RecordsetEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{45165490-EF32-11D0-86FB-006097C9818C}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def WillChangeField(self, cFields: hints.Incomplete, Fields: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def FieldChangeComplete(self, cFields: hints.Incomplete, Fields: hints.Incomplete, pError: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def WillChangeRecord(self, adReason: hints.Incomplete, cRecords: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def RecordChangeComplete(self, adReason: hints.Incomplete, cRecords: hints.Incomplete, pError: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def WillChangeRecordset(self, adReason: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def RecordsetChangeComplete(self, adReason: hints.Incomplete, pError: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def WillMove(self, adReason: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def MoveComplete(self, adReason: hints.Incomplete, pError: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def EndOfRecordset(self, fMoreData: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def FetchProgress(self, Progress: hints.Incomplete, MaxProgress: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...
        def FetchComplete(self, pError: hints.Incomplete, adStatus: hints.Incomplete, pRecordset: hints.Incomplete) -> hints.Incomplete: ...


_RecordsetEvents._methods_ = [
    COMMETHOD(
        [dispid(9)],
        HRESULT,
        'WillChangeField',
        (['in'], c_int, 'cFields'),
        (['in'], VARIANT, 'Fields'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(10)],
        HRESULT,
        'FieldChangeComplete',
        (['in'], c_int, 'cFields'),
        (['in'], VARIANT, 'Fields'),
        (['in'], POINTER(IUnknown), 'pError'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(11)],
        HRESULT,
        'WillChangeRecord',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (['in'], c_int, 'cRecords'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(12)],
        HRESULT,
        'RecordChangeComplete',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (['in'], c_int, 'cRecords'),
        (['in'], POINTER(IUnknown), 'pError'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(13)],
        HRESULT,
        'WillChangeRecordset',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(14)],
        HRESULT,
        'RecordsetChangeComplete',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (['in'], POINTER(IUnknown), 'pError'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(15)],
        HRESULT,
        'WillMove',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(16)],
        HRESULT,
        'MoveComplete',
        (
            ['in'],
            comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventReasonEnum,
            'adReason',
        ),
        (['in'], POINTER(IUnknown), 'pError'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(17)],
        HRESULT,
        'EndOfRecordset',
        (['in', 'out'], POINTER(c_short), 'fMoreData'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(18)],
        HRESULT,
        'FetchProgress',
        (['in'], c_int, 'Progress'),
        (['in'], c_int, 'MaxProgress'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
    COMMETHOD(
        [dispid(19)],
        HRESULT,
        'FetchComplete',
        (['in'], POINTER(IUnknown), 'pError'),
        (
            ['in', 'out'],
            POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.EventStatusEnum),
            'adStatus',
        ),
        (['in'], POINTER(IUnknown), 'pRecordset')
    ),
]

################################################################
# code template for _RecordsetEvents implementation
# class _RecordsetEvents_Impl(object):
#     def WillChangeField(self, cFields, Fields, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def FieldChangeComplete(self, cFields, Fields, pError, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def WillChangeRecord(self, adReason, cRecords, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def RecordChangeComplete(self, adReason, cRecords, pError, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def WillChangeRecordset(self, adReason, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def RecordsetChangeComplete(self, adReason, pError, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def WillMove(self, adReason, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def MoveComplete(self, adReason, pError, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def EndOfRecordset(self, pRecordset):
#         '-no docstring-'
#         #return fMoreData, adStatus
#
#     def FetchProgress(self, Progress, MaxProgress, pRecordset):
#         '-no docstring-'
#         #return adStatus
#
#     def FetchComplete(self, pError, pRecordset):
#         '-no docstring-'
#         #return adStatus
#


class WebBrowserControl(CoClass):
    _reg_clsid_ = GUID('{D303AC37-74DB-45B9-8C22-AD7C3FBA68EF}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


WebBrowserControl._com_interfaces_ = [_WebBrowserControl]
WebBrowserControl._outgoing_interfaces_ = [DispWebBrowserControlEvents]


class DoCmd(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{C547E760-9658-101B-81EE-00AA004750E2}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def AddMenu(self, MenuName: hints.Incomplete, MenuMacroName: hints.Incomplete, StatusBarText: hints.Incomplete = ...) -> hints.Hresult: ...
        def ApplyFilterOld0(self, FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ...) -> hints.Hresult: ...
        def Beep(self) -> hints.Hresult: ...
        def CancelEvent(self) -> hints.Hresult: ...
        def Close(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ..., Save: hints.Incomplete = ...) -> hints.Hresult: ...
        def CopyObject(self, DestinationDatabase: hints.Incomplete = ..., NewName: hints.Incomplete = ..., SourceObjectType: hints.Incomplete = ..., SourceObjectName: hints.Incomplete = ...) -> hints.Hresult: ...
        def DoMenuItem(self, MenuBar: hints.Incomplete, MenuName: hints.Incomplete, Command: hints.Incomplete, Subcommand: hints.Incomplete = ..., Version: hints.Incomplete = ...) -> hints.Hresult: ...
        def Echo(self, EchoOn: hints.Incomplete, StatusBarText: hints.Incomplete = ...) -> hints.Hresult: ...
        def FindNext(self) -> hints.Hresult: ...
        def FindRecord(self, FindWhat: hints.Incomplete, Match: hints.Incomplete = ..., MatchCase: hints.Incomplete = ..., Search: hints.Incomplete = ..., SearchAsFormatted: hints.Incomplete = ..., OnlyCurrentField: hints.Incomplete = ..., FindFirst: hints.Incomplete = ...) -> hints.Hresult: ...
        def GoToControl(self, ControlName: hints.Incomplete) -> hints.Hresult: ...
        def GoToPage(self, PageNumber: hints.Incomplete, Right: hints.Incomplete = ..., Down: hints.Incomplete = ...) -> hints.Hresult: ...
        def GoToRecord(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ..., Record: hints.Incomplete = ..., Offset: hints.Incomplete = ...) -> hints.Hresult: ...
        def Hourglass(self, HourglassOn: hints.Incomplete) -> hints.Hresult: ...
        def Maximize(self) -> hints.Hresult: ...
        def Minimize(self) -> hints.Hresult: ...
        def MoveSize(self, Right: hints.Incomplete = ..., Down: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenForm(self, FormName: hints.Incomplete, View: hints.Incomplete = ..., FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., DataMode: hints.Incomplete = ..., WindowMode: hints.Incomplete = ..., OpenArgs: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenQuery(self, QueryName: hints.Incomplete, View: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenTable(self, TableName: hints.Incomplete, View: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def PrintOut(self, PrintRange: hints.Incomplete = ..., PageFrom: hints.Incomplete = ..., PageTo: hints.Incomplete = ..., PrintQuality: hints.Incomplete = ..., Copies: hints.Incomplete = ..., CollateCopies: hints.Incomplete = ...) -> hints.Hresult: ...
        def Quit(self, Options: hints.Incomplete = ...) -> hints.Hresult: ...
        def Requery(self, ControlName: hints.Incomplete = ...) -> hints.Hresult: ...
        def RepaintObject(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ...) -> hints.Hresult: ...
        def Rename(self, NewName: hints.Incomplete, ObjectType: hints.Incomplete = ..., OldName: hints.Incomplete = ...) -> hints.Hresult: ...
        def Restore(self) -> hints.Hresult: ...
        def RunMacro(self, MacroName: hints.Incomplete, RepeatCount: hints.Incomplete = ..., RepeatExpression: hints.Incomplete = ...) -> hints.Hresult: ...
        def RunSQL(self, SQLStatement: hints.Incomplete, UseTransaction: hints.Incomplete = ...) -> hints.Hresult: ...
        def SelectObject(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete = ..., InDatabaseWindow: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetWarnings(self, WarningsOn: hints.Incomplete) -> hints.Hresult: ...
        def ShowAllRecords(self) -> hints.Hresult: ...
        def OpenReportOld0(self, ReportName: hints.Incomplete, View: hints.Incomplete = ..., FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ...) -> hints.Hresult: ...
        def TransferDatabase(self, TransferType: hints.Incomplete = ..., DatabaseType: hints.Incomplete = ..., DatabaseName: hints.Incomplete = ..., ObjectType: hints.Incomplete = ..., Source: hints.Incomplete = ..., Destination: hints.Incomplete = ..., StructureOnly: hints.Incomplete = ..., StoreLogin: hints.Incomplete = ...) -> hints.Hresult: ...
        def TransferSpreadsheet(self, TransferType: hints.Incomplete = ..., SpreadsheetType: hints.Incomplete = ..., TableName: hints.Incomplete = ..., FileName: hints.Incomplete = ..., HasFieldNames: hints.Incomplete = ..., Range: hints.Incomplete = ..., UseOA: hints.Incomplete = ...) -> hints.Hresult: ...
        def TransferText(self, TransferType: hints.Incomplete = ..., SpecificationName: hints.Incomplete = ..., TableName: hints.Incomplete = ..., FileName: hints.Incomplete = ..., HasFieldNames: hints.Incomplete = ..., HTMLTableName: hints.Incomplete = ..., CodePage: hints.Incomplete = ...) -> hints.Hresult: ...
        def OutputToOld0(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete = ..., OutputFormat: hints.Incomplete = ..., OutputFile: hints.Incomplete = ..., AutoStart: hints.Incomplete = ..., TemplateFile: hints.Incomplete = ...) -> hints.Hresult: ...
        def DeleteObject(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenModule(self, ModuleName: hints.Incomplete = ..., ProcedureName: hints.Incomplete = ...) -> hints.Hresult: ...
        def SendObject(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ..., OutputFormat: hints.Incomplete = ..., To: hints.Incomplete = ..., Cc: hints.Incomplete = ..., Bcc: hints.Incomplete = ..., Subject: hints.Incomplete = ..., MessageText: hints.Incomplete = ..., EditMessage: hints.Incomplete = ..., TemplateFile: hints.Incomplete = ...) -> hints.Hresult: ...
        def ShowToolbar(self, ToolbarName: hints.Incomplete, Show: hints.Incomplete = ...) -> hints.Hresult: ...
        def Save(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetMenuItem(self, MenuIndex: hints.Incomplete, CommandIndex: hints.Incomplete = ..., SubcommandIndex: hints.Incomplete = ..., Flag: hints.Incomplete = ...) -> hints.Hresult: ...
        def RunCommand(self, Command: hints.Incomplete) -> hints.Hresult: ...
        def OpenDataAccessPage(self, DataAccessPageName: hints.Incomplete, View: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenView(self, ViewName: hints.Incomplete, View: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenDiagram(self, DiagramName: hints.Incomplete) -> hints.Hresult: ...
        def OpenStoredProcedure(self, ProcedureName: hints.Incomplete, View: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenReport(self, ReportName: hints.Incomplete, View: hints.Incomplete = ..., FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., WindowMode: hints.Incomplete = ..., OpenArgs: hints.Incomplete = ...) -> hints.Hresult: ...
        def OutputToOld1(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete = ..., OutputFormat: hints.Incomplete = ..., OutputFile: hints.Incomplete = ..., AutoStart: hints.Incomplete = ..., TemplateFile: hints.Incomplete = ..., Encoding: hints.Incomplete = ...) -> hints.Hresult: ...
        def TransferSQLDatabase(self, Server: hints.Incomplete, Database: hints.Incomplete, UseTrustedConnection: hints.Incomplete = ..., Login: hints.Incomplete = ..., Password: hints.Incomplete = ..., TransferCopyData: hints.Incomplete = ...) -> hints.Hresult: ...
        def CopyDatabaseFile(self, DatabaseFileName: hints.Incomplete, OverwriteExistingFile: hints.Incomplete = ..., DisconnectAllUsers: hints.Incomplete = ...) -> hints.Hresult: ...
        def OpenFunction(self, FunctionName: hints.Incomplete, View: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def ApplyFilter(self, FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., ControlName: hints.Incomplete = ...) -> hints.Hresult: ...
        def OutputTo(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete = ..., OutputFormat: hints.Incomplete = ..., OutputFile: hints.Incomplete = ..., AutoStart: hints.Incomplete = ..., TemplateFile: hints.Incomplete = ..., Encoding: hints.Incomplete = ..., OutputQuality: hints.Incomplete = ...) -> hints.Hresult: ...
        def TransferSharePointList(self, TransferType: hints.Incomplete, SiteAddress: hints.Incomplete, ListID: hints.Incomplete, ViewID: hints.Incomplete = ..., TableName: hints.Incomplete = ..., GetLookupDisplayValues: hints.Incomplete = ...) -> hints.Hresult: ...
        def CloseDatabase(self) -> hints.Hresult: ...
        def NavigateTo(self, Category: hints.Incomplete = ..., Group: hints.Incomplete = ...) -> hints.Hresult: ...
        def SearchForRecord(self, ObjectType: hints.Incomplete = ..., ObjectName: hints.Incomplete = ..., Record: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetProperty(self, ControlName: hints.Incomplete = ..., Property: hints.Incomplete = ..., Value: hints.Incomplete = ...) -> hints.Hresult: ...
        def SingleStep(self) -> hints.Hresult: ...
        def ClearMacroError(self) -> hints.Hresult: ...
        def SetDisplayedCategories(self, Show: hints.Incomplete, Category: hints.Incomplete = ...) -> hints.Hresult: ...
        def LockNavigationPane(self, Lock: hints.Incomplete) -> hints.Hresult: ...
        def RunSavedImportExport(self, SavedImportExportName: hints.Incomplete) -> hints.Hresult: ...
        def BrowseTo(self, ObjectType: hints.Incomplete, ObjectName: hints.Incomplete, PathtoSubformControl: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., Page: hints.Incomplete = ..., DataMode: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetParameter(self, Name: hints.Incomplete, Expression: hints.Incomplete) -> hints.Hresult: ...
        def RunDataMacro(self, MacroName: hints.Incomplete) -> hints.Hresult: ...
        def SetOrderBy(self, OrderBy: hints.Incomplete, ControlName: hints.Incomplete = ...) -> hints.Hresult: ...
        def SetFilter(self, FilterName: hints.Incomplete = ..., WhereCondition: hints.Incomplete = ..., ControlName: hints.Incomplete = ...) -> hints.Hresult: ...
        def RefreshRecord(self) -> hints.Hresult: ...



DoCmd._methods_ = [
    COMMETHOD(
        [dispid(1001)],
        HRESULT,
        'AddMenu',
        (['in'], VARIANT, 'MenuName'),
        (['in'], VARIANT, 'MenuMacroName'),
        (['in', 'optional'], VARIANT, 'StatusBarText')
    ),
    COMMETHOD(
        [dispid(1002), 'hidden'],
        HRESULT,
        'ApplyFilterOld0',
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition')
    ),
    COMMETHOD([dispid(1003)], HRESULT, 'Beep'),
    COMMETHOD([dispid(1004)], HRESULT, 'CancelEvent'),
    COMMETHOD(
        [dispid(1005)],
        HRESULT,
        'Close',
        (['in', 'optional'], AcObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], AcCloseSave, 'Save', 0)
    ),
    COMMETHOD(
        [dispid(1006)],
        HRESULT,
        'CopyObject',
        (['in', 'optional'], VARIANT, 'DestinationDatabase'),
        (['in', 'optional'], VARIANT, 'NewName'),
        (['in', 'optional'], AcObjectType, 'SourceObjectType', -1),
        (['in', 'optional'], VARIANT, 'SourceObjectName')
    ),
    COMMETHOD(
        [dispid(1007)],
        HRESULT,
        'DoMenuItem',
        (['in'], VARIANT, 'MenuBar'),
        (['in'], VARIANT, 'MenuName'),
        (['in'], VARIANT, 'Command'),
        (['in', 'optional'], VARIANT, 'Subcommand'),
        (['in', 'optional'], VARIANT, 'Version')
    ),
    COMMETHOD(
        [dispid(1008)],
        HRESULT,
        'Echo',
        (['in'], VARIANT, 'EchoOn'),
        (['in', 'optional'], VARIANT, 'StatusBarText')
    ),
    COMMETHOD([dispid(1009)], HRESULT, 'FindNext'),
    COMMETHOD(
        [dispid(1010)],
        HRESULT,
        'FindRecord',
        (['in'], VARIANT, 'FindWhat'),
        (['in', 'optional'], AcFindMatch, 'Match', 1),
        (['in', 'optional'], VARIANT, 'MatchCase'),
        (['in', 'optional'], AcSearchDirection, 'Search', 2),
        (['in', 'optional'], VARIANT, 'SearchAsFormatted'),
        (['in', 'optional'], AcFindField, 'OnlyCurrentField', -1),
        (['in', 'optional'], VARIANT, 'FindFirst')
    ),
    COMMETHOD(
        [dispid(1011)],
        HRESULT,
        'GoToControl',
        (['in'], VARIANT, 'ControlName')
    ),
    COMMETHOD(
        [dispid(1012)],
        HRESULT,
        'GoToPage',
        (['in'], VARIANT, 'PageNumber'),
        (['in', 'optional'], VARIANT, 'Right'),
        (['in', 'optional'], VARIANT, 'Down')
    ),
    COMMETHOD(
        [dispid(1013)],
        HRESULT,
        'GoToRecord',
        (['in', 'optional'], AcDataObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], AcRecord, 'Record', 1),
        (['in', 'optional'], VARIANT, 'Offset')
    ),
    COMMETHOD(
        [dispid(1014)],
        HRESULT,
        'Hourglass',
        (['in'], VARIANT, 'HourglassOn')
    ),
    COMMETHOD([dispid(1015)], HRESULT, 'Maximize'),
    COMMETHOD([dispid(1016)], HRESULT, 'Minimize'),
    COMMETHOD(
        [dispid(1017)],
        HRESULT,
        'MoveSize',
        (['in', 'optional'], VARIANT, 'Right'),
        (['in', 'optional'], VARIANT, 'Down'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(1019)],
        HRESULT,
        'OpenForm',
        (['in'], VARIANT, 'FormName'),
        (['in', 'optional'], AcFormView, 'View', 0),
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition'),
        (['in', 'optional'], AcFormOpenDataMode, 'DataMode', -1),
        (['in', 'optional'], AcWindowMode, 'WindowMode', 0),
        (['in', 'optional'], VARIANT, 'OpenArgs')
    ),
    COMMETHOD(
        [dispid(1020)],
        HRESULT,
        'OpenQuery',
        (['in'], VARIANT, 'QueryName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], AcOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(1021)],
        HRESULT,
        'OpenTable',
        (['in'], VARIANT, 'TableName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], AcOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(1022)],
        HRESULT,
        'PrintOut',
        (['in', 'optional'], AcPrintRange, 'PrintRange', 0),
        (['in', 'optional'], VARIANT, 'PageFrom'),
        (['in', 'optional'], VARIANT, 'PageTo'),
        (['in', 'optional'], AcPrintQuality, 'PrintQuality', 0),
        (['in', 'optional'], VARIANT, 'Copies'),
        (['in', 'optional'], VARIANT, 'CollateCopies')
    ),
    COMMETHOD(
        [dispid(1023)],
        HRESULT,
        'Quit',
        (['in', 'optional'], AcQuitOption, 'Options', 1)
    ),
    COMMETHOD(
        [dispid(1024)],
        HRESULT,
        'Requery',
        (['in', 'optional'], VARIANT, 'ControlName')
    ),
    COMMETHOD(
        [dispid(1025)],
        HRESULT,
        'RepaintObject',
        (['in', 'optional'], AcObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName')
    ),
    COMMETHOD(
        [dispid(1026)],
        HRESULT,
        'Rename',
        (['in'], VARIANT, 'NewName'),
        (['in', 'optional'], AcObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'OldName')
    ),
    COMMETHOD([dispid(1027)], HRESULT, 'Restore'),
    COMMETHOD(
        [dispid(1030)],
        HRESULT,
        'RunMacro',
        (['in'], VARIANT, 'MacroName'),
        (['in', 'optional'], VARIANT, 'RepeatCount'),
        (['in', 'optional'], VARIANT, 'RepeatExpression')
    ),
    COMMETHOD(
        [dispid(1031)],
        HRESULT,
        'RunSQL',
        (['in'], VARIANT, 'SQLStatement'),
        (['in', 'optional'], VARIANT, 'UseTransaction')
    ),
    COMMETHOD(
        [dispid(1032)],
        HRESULT,
        'SelectObject',
        (['in'], AcObjectType, 'ObjectType'),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'InDatabaseWindow')
    ),
    COMMETHOD(
        [dispid(1035)],
        HRESULT,
        'SetWarnings',
        (['in'], VARIANT, 'WarningsOn')
    ),
    COMMETHOD([dispid(1036)], HRESULT, 'ShowAllRecords'),
    COMMETHOD(
        [dispid(1039), 'hidden'],
        HRESULT,
        'OpenReportOld0',
        (['in'], VARIANT, 'ReportName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition')
    ),
    COMMETHOD(
        [dispid(1040)],
        HRESULT,
        'TransferDatabase',
        (['in', 'optional'], AcDataTransferType, 'TransferType', 0),
        (['in', 'optional'], VARIANT, 'DatabaseType'),
        (['in', 'optional'], VARIANT, 'DatabaseName'),
        (['in', 'optional'], AcObjectType, 'ObjectType', 0),
        (['in', 'optional'], VARIANT, 'Source'),
        (['in', 'optional'], VARIANT, 'Destination'),
        (['in', 'optional'], VARIANT, 'StructureOnly'),
        (['in', 'optional'], VARIANT, 'StoreLogin')
    ),
    COMMETHOD(
        [dispid(1041)],
        HRESULT,
        'TransferSpreadsheet',
        (['in', 'optional'], AcDataTransferType, 'TransferType', 0),
        (['in', 'optional'], AcSpreadSheetType, 'SpreadsheetType', 10),
        (['in', 'optional'], VARIANT, 'TableName'),
        (['in', 'optional'], VARIANT, 'FileName'),
        (['in', 'optional'], VARIANT, 'HasFieldNames'),
        (['in', 'optional'], VARIANT, 'Range'),
        (['in', 'optional'], VARIANT, 'UseOA')
    ),
    COMMETHOD(
        [dispid(1042)],
        HRESULT,
        'TransferText',
        (['in', 'optional'], AcTextTransferType, 'TransferType', 0),
        (['in', 'optional'], VARIANT, 'SpecificationName'),
        (['in', 'optional'], VARIANT, 'TableName'),
        (['in', 'optional'], VARIANT, 'FileName'),
        (['in', 'optional'], VARIANT, 'HasFieldNames'),
        (['in', 'optional'], VARIANT, 'HTMLTableName'),
        (['in', 'optional'], VARIANT, 'CodePage')
    ),
    COMMETHOD(
        [dispid(1341), 'hidden'],
        HRESULT,
        'OutputToOld0',
        (['in'], AcOutputObjectType, 'ObjectType'),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'OutputFormat'),
        (['in', 'optional'], VARIANT, 'OutputFile'),
        (['in', 'optional'], VARIANT, 'AutoStart'),
        (['in', 'optional'], VARIANT, 'TemplateFile')
    ),
    COMMETHOD(
        [dispid(1372)],
        HRESULT,
        'DeleteObject',
        (['in', 'optional'], AcObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName')
    ),
    COMMETHOD(
        [dispid(1374)],
        HRESULT,
        'OpenModule',
        (['in', 'optional'], VARIANT, 'ModuleName'),
        (['in', 'optional'], VARIANT, 'ProcedureName')
    ),
    COMMETHOD(
        [dispid(1377)],
        HRESULT,
        'SendObject',
        (['in', 'optional'], AcSendObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'OutputFormat'),
        (['in', 'optional'], VARIANT, 'To'),
        (['in', 'optional'], VARIANT, 'Cc'),
        (['in', 'optional'], VARIANT, 'Bcc'),
        (['in', 'optional'], VARIANT, 'Subject'),
        (['in', 'optional'], VARIANT, 'MessageText'),
        (['in', 'optional'], VARIANT, 'EditMessage'),
        (['in', 'optional'], VARIANT, 'TemplateFile')
    ),
    COMMETHOD(
        [dispid(1394)],
        HRESULT,
        'ShowToolbar',
        (['in'], VARIANT, 'ToolbarName'),
        (['in', 'optional'], AcShowToolbar, 'Show', 0)
    ),
    COMMETHOD(
        [dispid(1453)],
        HRESULT,
        'Save',
        (['in', 'optional'], AcObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName')
    ),
    COMMETHOD(
        [dispid(1454)],
        HRESULT,
        'SetMenuItem',
        (['in'], VARIANT, 'MenuIndex'),
        (['in', 'optional'], VARIANT, 'CommandIndex'),
        (['in', 'optional'], VARIANT, 'SubcommandIndex'),
        (['in', 'optional'], VARIANT, 'Flag')
    ),
    COMMETHOD(
        [dispid(1602)],
        HRESULT,
        'RunCommand',
        (['in'], AcCommand, 'Command')
    ),
    COMMETHOD(
        [dispid(1771)],
        HRESULT,
        'OpenDataAccessPage',
        (['in'], VARIANT, 'DataAccessPageName'),
        (['in', 'optional'], AcDataAccessPageView, 'View', 0)
    ),
    COMMETHOD(
        [dispid(1793)],
        HRESULT,
        'OpenView',
        (['in'], VARIANT, 'ViewName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], AcOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(1794)],
        HRESULT,
        'OpenDiagram',
        (['in'], VARIANT, 'DiagramName')
    ),
    COMMETHOD(
        [dispid(1795)],
        HRESULT,
        'OpenStoredProcedure',
        (['in'], VARIANT, 'ProcedureName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], AcOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(2391)],
        HRESULT,
        'OpenReport',
        (['in'], VARIANT, 'ReportName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition'),
        (['in', 'optional'], AcWindowMode, 'WindowMode', 0),
        (['in', 'optional'], VARIANT, 'OpenArgs')
    ),
    COMMETHOD(
        [dispid(5411), 'hidden'],
        HRESULT,
        'OutputToOld1',
        (['in'], AcOutputObjectType, 'ObjectType'),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'OutputFormat'),
        (['in', 'optional'], VARIANT, 'OutputFile'),
        (['in', 'optional'], VARIANT, 'AutoStart'),
        (['in', 'optional'], VARIANT, 'TemplateFile'),
        (['in', 'optional'], VARIANT, 'Encoding')
    ),
    COMMETHOD(
        [dispid(1867)],
        HRESULT,
        'TransferSQLDatabase',
        (['in'], VARIANT, 'Server'),
        (['in'], VARIANT, 'Database'),
        (['in', 'optional'], VARIANT, 'UseTrustedConnection'),
        (['in', 'optional'], VARIANT, 'Login'),
        (['in', 'optional'], VARIANT, 'Password'),
        (['in', 'optional'], VARIANT, 'TransferCopyData')
    ),
    COMMETHOD(
        [dispid(1868)],
        HRESULT,
        'CopyDatabaseFile',
        (['in'], VARIANT, 'DatabaseFileName'),
        (['in', 'optional'], VARIANT, 'OverwriteExistingFile'),
        (['in', 'optional'], VARIANT, 'DisconnectAllUsers')
    ),
    COMMETHOD(
        [dispid(1869)],
        HRESULT,
        'OpenFunction',
        (['in'], VARIANT, 'FunctionName'),
        (['in', 'optional'], AcView, 'View', 0),
        (['in', 'optional'], AcOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(2023)],
        HRESULT,
        'ApplyFilter',
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition'),
        (['in', 'optional'], VARIANT, 'ControlName')
    ),
    COMMETHOD(
        [dispid(5413)],
        HRESULT,
        'OutputTo',
        (['in'], AcOutputObjectType, 'ObjectType'),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'OutputFormat'),
        (['in', 'optional'], VARIANT, 'OutputFile'),
        (['in', 'optional'], VARIANT, 'AutoStart'),
        (['in', 'optional'], VARIANT, 'TemplateFile'),
        (['in', 'optional'], VARIANT, 'Encoding'),
        (['in', 'optional'], AcExportQuality, 'OutputQuality', 0)
    ),
    COMMETHOD(
        [dispid(1880)],
        HRESULT,
        'TransferSharePointList',
        (['in'], AcSharePointListTransferType, 'TransferType'),
        (['in'], VARIANT, 'SiteAddress'),
        (['in'], VARIANT, 'ListID'),
        (['in', 'optional'], VARIANT, 'ViewID'),
        (['in', 'optional'], VARIANT, 'TableName'),
        (['in', 'optional'], VARIANT, 'GetLookupDisplayValues')
    ),
    COMMETHOD([dispid(1891)], HRESULT, 'CloseDatabase'),
    COMMETHOD(
        [dispid(1901)],
        HRESULT,
        'NavigateTo',
        (['in', 'optional'], VARIANT, 'Category'),
        (['in', 'optional'], VARIANT, 'Group')
    ),
    COMMETHOD(
        [dispid(1902)],
        HRESULT,
        'SearchForRecord',
        (['in', 'optional'], AcDataObjectType, 'ObjectType', -1),
        (['in', 'optional'], VARIANT, 'ObjectName'),
        (['in', 'optional'], AcRecord, 'Record', 2),
        (['in', 'optional'], VARIANT, 'WhereCondition')
    ),
    COMMETHOD(
        [dispid(1903)],
        HRESULT,
        'SetProperty',
        (['in', 'optional'], VARIANT, 'ControlName'),
        (['in', 'optional'], AcProperty, 'Property', 0),
        (['in', 'optional'], VARIANT, 'Value')
    ),
    COMMETHOD([dispid(1904)], HRESULT, 'SingleStep'),
    COMMETHOD([dispid(1905)], HRESULT, 'ClearMacroError'),
    COMMETHOD(
        [dispid(1913)],
        HRESULT,
        'SetDisplayedCategories',
        (['in'], VARIANT, 'Show'),
        (['in', 'optional'], VARIANT, 'Category')
    ),
    COMMETHOD(
        [dispid(1914)],
        HRESULT,
        'LockNavigationPane',
        (['in'], VARIANT, 'Lock')
    ),
    COMMETHOD(
        [dispid(1918)],
        HRESULT,
        'RunSavedImportExport',
        (['in'], VARIANT, 'SavedImportExportName')
    ),
    COMMETHOD(
        [dispid(1924)],
        HRESULT,
        'BrowseTo',
        (['in'], AcBrowseToObjectType, 'ObjectType'),
        (['in'], VARIANT, 'ObjectName'),
        (['in', 'optional'], VARIANT, 'PathtoSubformControl'),
        (['in', 'optional'], VARIANT, 'WhereCondition'),
        (['in', 'optional'], VARIANT, 'Page'),
        (['in', 'optional'], AcFormOpenDataMode, 'DataMode', 1)
    ),
    COMMETHOD(
        [dispid(1928)],
        HRESULT,
        'SetParameter',
        (['in'], VARIANT, 'Name'),
        (['in'], VARIANT, 'Expression')
    ),
    COMMETHOD(
        [dispid(1929)],
        HRESULT,
        'RunDataMacro',
        (['in'], VARIANT, 'MacroName')
    ),
    COMMETHOD(
        [dispid(1930)],
        HRESULT,
        'SetOrderBy',
        (['in'], VARIANT, 'OrderBy'),
        (['in', 'optional'], VARIANT, 'ControlName')
    ),
    COMMETHOD(
        [dispid(1932)],
        HRESULT,
        'SetFilter',
        (['in', 'optional'], VARIANT, 'FilterName'),
        (['in', 'optional'], VARIANT, 'WhereCondition'),
        (['in', 'optional'], VARIANT, 'ControlName')
    ),
    COMMETHOD([dispid(1933)], HRESULT, 'RefreshRecord'),
]

################################################################
# code template for DoCmd implementation
# class DoCmd_Impl(object):
#     def AddMenu(self, MenuName, MenuMacroName, StatusBarText):
#         '-no docstring-'
#         #return 
#
#     def ApplyFilterOld0(self, FilterName, WhereCondition):
#         '-no docstring-'
#         #return 
#
#     def Beep(self):
#         '-no docstring-'
#         #return 
#
#     def CancelEvent(self):
#         '-no docstring-'
#         #return 
#
#     def Close(self, ObjectType, ObjectName, Save):
#         '-no docstring-'
#         #return 
#
#     def CopyObject(self, DestinationDatabase, NewName, SourceObjectType, SourceObjectName):
#         '-no docstring-'
#         #return 
#
#     def DoMenuItem(self, MenuBar, MenuName, Command, Subcommand, Version):
#         '-no docstring-'
#         #return 
#
#     def Echo(self, EchoOn, StatusBarText):
#         '-no docstring-'
#         #return 
#
#     def FindNext(self):
#         '-no docstring-'
#         #return 
#
#     def FindRecord(self, FindWhat, Match, MatchCase, Search, SearchAsFormatted, OnlyCurrentField, FindFirst):
#         '-no docstring-'
#         #return 
#
#     def GoToControl(self, ControlName):
#         '-no docstring-'
#         #return 
#
#     def GoToPage(self, PageNumber, Right, Down):
#         '-no docstring-'
#         #return 
#
#     def GoToRecord(self, ObjectType, ObjectName, Record, Offset):
#         '-no docstring-'
#         #return 
#
#     def Hourglass(self, HourglassOn):
#         '-no docstring-'
#         #return 
#
#     def Maximize(self):
#         '-no docstring-'
#         #return 
#
#     def Minimize(self):
#         '-no docstring-'
#         #return 
#
#     def MoveSize(self, Right, Down, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def OpenForm(self, FormName, View, FilterName, WhereCondition, DataMode, WindowMode, OpenArgs):
#         '-no docstring-'
#         #return 
#
#     def OpenQuery(self, QueryName, View, DataMode):
#         '-no docstring-'
#         #return 
#
#     def OpenTable(self, TableName, View, DataMode):
#         '-no docstring-'
#         #return 
#
#     def PrintOut(self, PrintRange, PageFrom, PageTo, PrintQuality, Copies, CollateCopies):
#         '-no docstring-'
#         #return 
#
#     def Quit(self, Options):
#         '-no docstring-'
#         #return 
#
#     def Requery(self, ControlName):
#         '-no docstring-'
#         #return 
#
#     def RepaintObject(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return 
#
#     def Rename(self, NewName, ObjectType, OldName):
#         '-no docstring-'
#         #return 
#
#     def Restore(self):
#         '-no docstring-'
#         #return 
#
#     def RunMacro(self, MacroName, RepeatCount, RepeatExpression):
#         '-no docstring-'
#         #return 
#
#     def RunSQL(self, SQLStatement, UseTransaction):
#         '-no docstring-'
#         #return 
#
#     def SelectObject(self, ObjectType, ObjectName, InDatabaseWindow):
#         '-no docstring-'
#         #return 
#
#     def SetWarnings(self, WarningsOn):
#         '-no docstring-'
#         #return 
#
#     def ShowAllRecords(self):
#         '-no docstring-'
#         #return 
#
#     def OpenReportOld0(self, ReportName, View, FilterName, WhereCondition):
#         '-no docstring-'
#         #return 
#
#     def TransferDatabase(self, TransferType, DatabaseType, DatabaseName, ObjectType, Source, Destination, StructureOnly, StoreLogin):
#         '-no docstring-'
#         #return 
#
#     def TransferSpreadsheet(self, TransferType, SpreadsheetType, TableName, FileName, HasFieldNames, Range, UseOA):
#         '-no docstring-'
#         #return 
#
#     def TransferText(self, TransferType, SpecificationName, TableName, FileName, HasFieldNames, HTMLTableName, CodePage):
#         '-no docstring-'
#         #return 
#
#     def OutputToOld0(self, ObjectType, ObjectName, OutputFormat, OutputFile, AutoStart, TemplateFile):
#         '-no docstring-'
#         #return 
#
#     def DeleteObject(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return 
#
#     def OpenModule(self, ModuleName, ProcedureName):
#         '-no docstring-'
#         #return 
#
#     def SendObject(self, ObjectType, ObjectName, OutputFormat, To, Cc, Bcc, Subject, MessageText, EditMessage, TemplateFile):
#         '-no docstring-'
#         #return 
#
#     def ShowToolbar(self, ToolbarName, Show):
#         '-no docstring-'
#         #return 
#
#     def Save(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return 
#
#     def SetMenuItem(self, MenuIndex, CommandIndex, SubcommandIndex, Flag):
#         '-no docstring-'
#         #return 
#
#     def RunCommand(self, Command):
#         '-no docstring-'
#         #return 
#
#     def OpenDataAccessPage(self, DataAccessPageName, View):
#         '-no docstring-'
#         #return 
#
#     def OpenView(self, ViewName, View, DataMode):
#         '-no docstring-'
#         #return 
#
#     def OpenDiagram(self, DiagramName):
#         '-no docstring-'
#         #return 
#
#     def OpenStoredProcedure(self, ProcedureName, View, DataMode):
#         '-no docstring-'
#         #return 
#
#     def OpenReport(self, ReportName, View, FilterName, WhereCondition, WindowMode, OpenArgs):
#         '-no docstring-'
#         #return 
#
#     def OutputToOld1(self, ObjectType, ObjectName, OutputFormat, OutputFile, AutoStart, TemplateFile, Encoding):
#         '-no docstring-'
#         #return 
#
#     def TransferSQLDatabase(self, Server, Database, UseTrustedConnection, Login, Password, TransferCopyData):
#         '-no docstring-'
#         #return 
#
#     def CopyDatabaseFile(self, DatabaseFileName, OverwriteExistingFile, DisconnectAllUsers):
#         '-no docstring-'
#         #return 
#
#     def OpenFunction(self, FunctionName, View, DataMode):
#         '-no docstring-'
#         #return 
#
#     def ApplyFilter(self, FilterName, WhereCondition, ControlName):
#         '-no docstring-'
#         #return 
#
#     def OutputTo(self, ObjectType, ObjectName, OutputFormat, OutputFile, AutoStart, TemplateFile, Encoding, OutputQuality):
#         '-no docstring-'
#         #return 
#
#     def TransferSharePointList(self, TransferType, SiteAddress, ListID, ViewID, TableName, GetLookupDisplayValues):
#         '-no docstring-'
#         #return 
#
#     def CloseDatabase(self):
#         '-no docstring-'
#         #return 
#
#     def NavigateTo(self, Category, Group):
#         '-no docstring-'
#         #return 
#
#     def SearchForRecord(self, ObjectType, ObjectName, Record, WhereCondition):
#         '-no docstring-'
#         #return 
#
#     def SetProperty(self, ControlName, Property, Value):
#         '-no docstring-'
#         #return 
#
#     def SingleStep(self):
#         '-no docstring-'
#         #return 
#
#     def ClearMacroError(self):
#         '-no docstring-'
#         #return 
#
#     def SetDisplayedCategories(self, Show, Category):
#         '-no docstring-'
#         #return 
#
#     def LockNavigationPane(self, Lock):
#         '-no docstring-'
#         #return 
#
#     def RunSavedImportExport(self, SavedImportExportName):
#         '-no docstring-'
#         #return 
#
#     def BrowseTo(self, ObjectType, ObjectName, PathtoSubformControl, WhereCondition, Page, DataMode):
#         '-no docstring-'
#         #return 
#
#     def SetParameter(self, Name, Expression):
#         '-no docstring-'
#         #return 
#
#     def RunDataMacro(self, MacroName):
#         '-no docstring-'
#         #return 
#
#     def SetOrderBy(self, OrderBy, ControlName):
#         '-no docstring-'
#         #return 
#
#     def SetFilter(self, FilterName, WhereCondition, ControlName):
#         '-no docstring-'
#         #return 
#
#     def RefreshRecord(self):
#         '-no docstring-'
#         #return 
#

DispComboBoxEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD(
        [dispid(2078)],
        None,
        'NotInList',
        (['in', 'out'], POINTER(BSTR), 'NewData'),
        (['out'], POINTER(c_short), 'Response')
    ),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2144)],
        None,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]


class _CustomControlInReport(CoClass):
    _reg_clsid_ = GUID('{300471E0-7426-11CE-AB63-00AA0042B7CE}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispCustomControlInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527E-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []


_CustomControlInReport._com_interfaces_ = [_CustomControl]
_CustomControlInReport._outgoing_interfaces_ = [DispCustomControlInReportEvents, _CustomControlInReportEvents]


class Forms(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B1BB0E80-6128-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Forms._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Forms implementation
# class Forms_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _TabControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E972-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Change(self) -> hints.Hresult: ...


_TabControlEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD([], HRESULT, 'Change'),
]

################################################################
# code template for _TabControlEvents implementation
# class _TabControlEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def Change(self):
#         '-no docstring-'
#         #return 
#

DispCustomControlInReportEvents._disp_methods_ = [
]


class _TabControl(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E971-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _get_Pages(self) -> 'Pages': ...
        Pages = hints.normal_property(_get_Pages)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_MultiRow(self) -> hints.Incomplete: ...
        def _set_MultiRow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MultiRow = hints.normal_property(_get_MultiRow, _set_MultiRow)
        def _get_Style(self) -> hints.Incomplete: ...
        def _set_Style(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Style = hints.normal_property(_get_Style, _set_Style)
        def _get_TabFixedHeight(self) -> hints.Incomplete: ...
        def _set_TabFixedHeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabFixedHeight = hints.normal_property(_get_TabFixedHeight, _set_TabFixedHeight)
        def _get_TabFixedWidth(self) -> hints.Incomplete: ...
        def _set_TabFixedWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabFixedWidth = hints.normal_property(_get_TabFixedWidth, _set_TabFixedWidth)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnChange(self) -> hints.Incomplete: ...
        def _set_OnChange(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChange = hints.normal_property(_get_OnChange, _set_OnChange)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnChangeMacro(self) -> hints.Incomplete: ...
        def _set_OnChangeMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnChangeMacro = hints.normal_property(_get_OnChangeMacro, _set_OnChangeMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_HoverColor(self) -> hints.Incomplete: ...
        def _set_HoverColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverColor = hints.normal_property(_get_HoverColor, _set_HoverColor)
        def _get_HoverThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverThemeColorIndex = hints.normal_property(_get_HoverThemeColorIndex, _set_HoverThemeColorIndex)
        def _get_HoverTint(self) -> hints.Incomplete: ...
        def _set_HoverTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverTint = hints.normal_property(_get_HoverTint, _set_HoverTint)
        def _get_HoverShade(self) -> hints.Incomplete: ...
        def _set_HoverShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverShade = hints.normal_property(_get_HoverShade, _set_HoverShade)
        def _get_HoverForeColor(self) -> hints.Incomplete: ...
        def _set_HoverForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeColor = hints.normal_property(_get_HoverForeColor, _set_HoverForeColor)
        def _get_HoverForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_HoverForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeThemeColorIndex = hints.normal_property(_get_HoverForeThemeColorIndex, _set_HoverForeThemeColorIndex)
        def _get_HoverForeTint(self) -> hints.Incomplete: ...
        def _set_HoverForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeTint = hints.normal_property(_get_HoverForeTint, _set_HoverForeTint)
        def _get_HoverForeShade(self) -> hints.Incomplete: ...
        def _set_HoverForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HoverForeShade = hints.normal_property(_get_HoverForeShade, _set_HoverForeShade)
        def _get_PressedColor(self) -> hints.Incomplete: ...
        def _set_PressedColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedColor = hints.normal_property(_get_PressedColor, _set_PressedColor)
        def _get_PressedThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedThemeColorIndex = hints.normal_property(_get_PressedThemeColorIndex, _set_PressedThemeColorIndex)
        def _get_PressedTint(self) -> hints.Incomplete: ...
        def _set_PressedTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedTint = hints.normal_property(_get_PressedTint, _set_PressedTint)
        def _get_PressedShade(self) -> hints.Incomplete: ...
        def _set_PressedShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedShade = hints.normal_property(_get_PressedShade, _set_PressedShade)
        def _get_PressedForeColor(self) -> hints.Incomplete: ...
        def _set_PressedForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeColor = hints.normal_property(_get_PressedForeColor, _set_PressedForeColor)
        def _get_PressedForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_PressedForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeThemeColorIndex = hints.normal_property(_get_PressedForeThemeColorIndex, _set_PressedForeThemeColorIndex)
        def _get_PressedForeTint(self) -> hints.Incomplete: ...
        def _set_PressedForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeTint = hints.normal_property(_get_PressedForeTint, _set_PressedForeTint)
        def _get_PressedForeShade(self) -> hints.Incomplete: ...
        def _set_PressedForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PressedForeShade = hints.normal_property(_get_PressedForeShade, _set_PressedForeShade)
        def _get_UseTheme(self) -> hints.Incomplete: ...
        def _set_UseTheme(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UseTheme = hints.normal_property(_get_UseTheme, _set_UseTheme)
        def _get_Shape(self) -> hints.Incomplete: ...
        def _set_Shape(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Shape = hints.normal_property(_get_Shape, _set_Shape)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_Gradient(self) -> hints.Incomplete: ...
        def _set_Gradient(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Gradient = hints.normal_property(_get_Gradient, _set_Gradient)


_TabControl._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(2180), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(POINTER(Pages)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(348), 'propget'],
        HRESULT,
        'MultiRow',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(348), 'propput'],
        HRESULT,
        'MultiRow',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(349), 'propget'],
        HRESULT,
        'Style',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(349), 'propput'],
        HRESULT,
        'Style',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(350), 'propget'],
        HRESULT,
        'TabFixedHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(350), 'propput'],
        HRESULT,
        'TabFixedHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(351), 'propget'],
        HRESULT,
        'TabFixedWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(351), 'propput'],
        HRESULT,
        'TabFixedWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propget'],
        HRESULT,
        'OnChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propput'],
        HRESULT,
        'OnChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propget'],
        HRESULT,
        'OnChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propput'],
        HRESULT,
        'OnChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propget'],
        HRESULT,
        'HoverColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propput'],
        HRESULT,
        'HoverColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propget'],
        HRESULT,
        'HoverThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propput'],
        HRESULT,
        'HoverThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propget'],
        HRESULT,
        'HoverTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propput'],
        HRESULT,
        'HoverTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propget'],
        HRESULT,
        'HoverShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propput'],
        HRESULT,
        'HoverShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propget'],
        HRESULT,
        'HoverForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propput'],
        HRESULT,
        'HoverForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propget'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propput'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propget'],
        HRESULT,
        'HoverForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propput'],
        HRESULT,
        'HoverForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propget'],
        HRESULT,
        'HoverForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propput'],
        HRESULT,
        'HoverForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propget'],
        HRESULT,
        'PressedColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propput'],
        HRESULT,
        'PressedColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propget'],
        HRESULT,
        'PressedThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propput'],
        HRESULT,
        'PressedThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propget'],
        HRESULT,
        'PressedTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propput'],
        HRESULT,
        'PressedTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propget'],
        HRESULT,
        'PressedShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propput'],
        HRESULT,
        'PressedShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propget'],
        HRESULT,
        'PressedForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propput'],
        HRESULT,
        'PressedForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propget'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propput'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propget'],
        HRESULT,
        'PressedForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propput'],
        HRESULT,
        'PressedForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propget'],
        HRESULT,
        'PressedForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propput'],
        HRESULT,
        'PressedForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propget'],
        HRESULT,
        'UseTheme',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propput'],
        HRESULT,
        'UseTheme',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propput'],
        HRESULT,
        'Shape',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propget'],
        HRESULT,
        'Gradient',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propput'],
        HRESULT,
        'Gradient',
        (['in'], c_int, 'pRet')
    ),
]

################################################################
# code template for _TabControl implementation
# class _TabControl_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Pages(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MultiRow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Style = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabFixedHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabFixedWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseTheme = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shape = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Gradient = property(_get, _set, doc = _set.__doc__)
#

DispNavigationButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]


class _ChartSeries(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{321606C6-3001-41C9-8E2F-A77D41F19F8A}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_PlotSeriesOn(self) -> hints.Incomplete: ...
        def _set_PlotSeriesOn(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PlotSeriesOn = hints.normal_property(_get_PlotSeriesOn, _set_PlotSeriesOn)
        def _get_DisplayDataLabel(self) -> hints.Incomplete: ...
        def _set_DisplayDataLabel(self, pfResult: hints.Incomplete) -> hints.Hresult: ...
        DisplayDataLabel = hints.normal_property(_get_DisplayDataLabel, _set_DisplayDataLabel)
        def _get_FillColor(self) -> hints.Incomplete: ...
        def _set_FillColor(self, plResult: hints.Incomplete) -> hints.Hresult: ...
        FillColor = hints.normal_property(_get_FillColor, _set_FillColor)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, plResult: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_TrendlineOptions(self) -> hints.Incomplete: ...
        def _set_TrendlineOptions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TrendlineOptions = hints.normal_property(_get_TrendlineOptions, _set_TrendlineOptions)
        def _get_TrendlineName(self) -> hints.Incomplete: ...
        def _set_TrendlineName(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        TrendlineName = hints.normal_property(_get_TrendlineName, _set_TrendlineName)
        def _get_ComboChartType(self) -> hints.Incomplete: ...
        def _set_ComboChartType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ComboChartType = hints.normal_property(_get_ComboChartType, _set_ComboChartType)
        def _get_DisplayName(self) -> hints.Incomplete: ...
        def _set_DisplayName(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        DisplayName = hints.normal_property(_get_DisplayName, _set_DisplayName)
        def _get_DashType(self) -> hints.Incomplete: ...
        def _set_DashType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DashType = hints.normal_property(_get_DashType, _set_DashType)
        def _get_LineWeight(self) -> hints.Incomplete: ...
        def _set_LineWeight(self, plResult: hints.Incomplete) -> hints.Hresult: ...
        LineWeight = hints.normal_property(_get_LineWeight, _set_LineWeight)
        def _get_MissingDataPolicy(self) -> hints.Incomplete: ...
        def _set_MissingDataPolicy(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MissingDataPolicy = hints.normal_property(_get_MissingDataPolicy, _set_MissingDataPolicy)
        def _get_MarkerType(self) -> hints.Incomplete: ...
        def _set_MarkerType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MarkerType = hints.normal_property(_get_MarkerType, _set_MarkerType)


_ChartSeries._methods_ = [
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2650), 'propget'],
        HRESULT,
        'PlotSeriesOn',
        (['out', 'retval'], POINTER(AcValueAxis), 'pRet')
    ),
    COMMETHOD(
        [dispid(2650), 'propput'],
        HRESULT,
        'PlotSeriesOn',
        (['in'], AcValueAxis, 'pRet')
    ),
    COMMETHOD(
        [dispid(2651), 'propget'],
        HRESULT,
        'DisplayDataLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfResult')
    ),
    COMMETHOD(
        [dispid(2651), 'propput'],
        HRESULT,
        'DisplayDataLabel',
        (['in'], VARIANT_BOOL, 'pfResult')
    ),
    COMMETHOD(
        [dispid(-510), 'propget'],
        HRESULT,
        'FillColor',
        (['out', 'retval'], POINTER(c_int), 'plResult')
    ),
    COMMETHOD(
        [dispid(-510), 'propput'],
        HRESULT,
        'FillColor',
        (['in'], c_int, 'plResult')
    ),
    COMMETHOD(
        [dispid(-503), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'plResult')
    ),
    COMMETHOD(
        [dispid(-503), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'plResult')
    ),
    COMMETHOD(
        [dispid(2653), 'propget'],
        HRESULT,
        'TrendlineOptions',
        (['out', 'retval'], POINTER(AcTrendlineOptions), 'pRet')
    ),
    COMMETHOD(
        [dispid(2653), 'propput'],
        HRESULT,
        'TrendlineOptions',
        (['in'], AcTrendlineOptions, 'pRet')
    ),
    COMMETHOD(
        [dispid(2654), 'propget'],
        HRESULT,
        'TrendlineName',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2654), 'propput'],
        HRESULT,
        'TrendlineName',
        (['in'], BSTR, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2657), 'propget'],
        HRESULT,
        'ComboChartType',
        (['out', 'retval'], POINTER(AcChartType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2657), 'propput'],
        HRESULT,
        'ComboChartType',
        (['in'], AcChartType, 'pRet')
    ),
    COMMETHOD(
        [dispid(2660), 'propget'],
        HRESULT,
        'DisplayName',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2660), 'propput'],
        HRESULT,
        'DisplayName',
        (['in'], BSTR, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2661), 'propget'],
        HRESULT,
        'DashType',
        (['out', 'retval'], POINTER(AcDashType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2661), 'propput'],
        HRESULT,
        'DashType',
        (['in'], AcDashType, 'pRet')
    ),
    COMMETHOD(
        [dispid(2662), 'propget'],
        HRESULT,
        'LineWeight',
        (['out', 'retval'], POINTER(c_int), 'plResult')
    ),
    COMMETHOD(
        [dispid(2662), 'propput'],
        HRESULT,
        'LineWeight',
        (['in'], c_int, 'plResult')
    ),
    COMMETHOD(
        [dispid(2663), 'propget'],
        HRESULT,
        'MissingDataPolicy',
        (['out', 'retval'], POINTER(AcMissingDataPolicy), 'pRet')
    ),
    COMMETHOD(
        [dispid(2663), 'propput'],
        HRESULT,
        'MissingDataPolicy',
        (['in'], AcMissingDataPolicy, 'pRet')
    ),
    COMMETHOD(
        [dispid(2664), 'propget'],
        HRESULT,
        'MarkerType',
        (['out', 'retval'], POINTER(AcMarkerType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2664), 'propput'],
        HRESULT,
        'MarkerType',
        (['in'], AcMarkerType, 'pRet')
    ),
]

################################################################
# code template for _ChartSeries implementation
# class _ChartSeries_Impl(object):
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrResult
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PlotSeriesOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfResult
#     def _set(self, pfResult):
#         '-no docstring-'
#     DisplayDataLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return plResult
#     def _set(self, plResult):
#         '-no docstring-'
#     FillColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return plResult
#     def _set(self, plResult):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TrendlineOptions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     TrendlineName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ComboChartType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     DisplayName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DashType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return plResult
#     def _set(self, plResult):
#         '-no docstring-'
#     LineWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MissingDataPolicy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MarkerType = property(_get, _set, doc = _set.__doc__)
#


class ChartSeries(CoClass):
    _reg_clsid_ = GUID('{D91560D6-F71B-41F8-8D32-285062068258}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


ChartSeries._com_interfaces_ = [_ChartSeries]


class _ChartAxis(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CF52D7A7-61EC-4874-969B-FE67F1DF4F57}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_GroupType(self) -> hints.Incomplete: ...
        def _set_GroupType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GroupType = hints.normal_property(_get_GroupType, _set_GroupType)



_ChartAxis._methods_ = [
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2655), 'propget'],
        HRESULT,
        'GroupType',
        (['out', 'retval'], POINTER(AcDateGroupType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2655), 'propput'],
        HRESULT,
        'GroupType',
        (['in'], AcDateGroupType, 'pRet')
    ),
]

################################################################
# code template for _ChartAxis implementation
# class _ChartAxis_Impl(object):
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrResult
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GroupType = property(_get, _set, doc = _set.__doc__)
#


class ChartAxis(CoClass):
    _reg_clsid_ = GUID('{A51D694D-3497-45B8-BAD9-FAF47556BCCF}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


ChartAxis._com_interfaces_ = [_ChartAxis]


class ChartSeriesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{312167E9-CE3B-4704-8221-59DE13631069}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_ChartSeries': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ChartSeriesCollection._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_ChartSeries)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for ChartSeriesCollection implementation
# class ChartSeriesCollection_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _SmartTagAction(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1560BE9F-0718-42BE-BB2B-D6706593AC40}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def Execute(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_SmartTagActions._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_SmartTagAction)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTagActions implementation
# class _SmartTagActions_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class ListBox(CoClass):
    _reg_clsid_ = GUID('{3B06E959-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _ListBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E434B-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


class DispListBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705273-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


ListBox._com_interfaces_ = [_ListBox]
ListBox._outgoing_interfaces_ = [DispListBoxEvents, _ListBoxEvents]

_Combobox._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD([dispid(2143)], HRESULT, 'Dropdown'),
    COMMETHOD(
        [dispid(2101), 'propget'],
        HRESULT,
        'Column',
        (['in'], c_int, 'Index'),
        (['in', 'optional'], VARIANT, 'Row'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2103), 'propget'],
        HRESULT,
        'ItemData',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2203), 'propget'],
        HRESULT,
        'FormatConditions',
        (['out', 'retval'], POINTER(POINTER(FormatConditions)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(38), 'propget'],
        HRESULT,
        'Format',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(38), 'propput'],
        HRESULT,
        'Format',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(71), 'propget'],
        HRESULT,
        'DecimalPlaces',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(71), 'propput'],
        HRESULT,
        'DecimalPlaces',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(72), 'propget'],
        HRESULT,
        'InputMask',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(72), 'propput'],
        HRESULT,
        'InputMask',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propget'],
        HRESULT,
        'RowSourceType',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propput'],
        HRESULT,
        'RowSourceType',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propget'],
        HRESULT,
        'RowSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propput'],
        HRESULT,
        'RowSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propget'],
        HRESULT,
        'ColumnCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propput'],
        HRESULT,
        'ColumnCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propget'],
        HRESULT,
        'ColumnHeads',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propput'],
        HRESULT,
        'ColumnHeads',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(18), 'propget'],
        HRESULT,
        'ColumnWidths',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(18), 'propput'],
        HRESULT,
        'ColumnWidths',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(13), 'propget'],
        HRESULT,
        'BoundColumn',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(13), 'propput'],
        HRESULT,
        'BoundColumn',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(153), 'propget'],
        HRESULT,
        'ListRows',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(153), 'propput'],
        HRESULT,
        'ListRows',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(154), 'propget'],
        HRESULT,
        'ListWidth',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(154), 'propput'],
        HRESULT,
        'ListWidth',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(67), 'propget'],
        HRESULT,
        'LimitToList',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(67), 'propput'],
        HRESULT,
        'LimitToList',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(68), 'propget'],
        HRESULT,
        'AutoExpand',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(68), 'propput'],
        HRESULT,
        'AutoExpand',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propget'],
        HRESULT,
        'IMEHold',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(357), 'propput'],
        HRESULT,
        'IMEHold',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(340), 'propget'],
        HRESULT,
        'AllowAutoCorrect',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(340), 'propput'],
        HRESULT,
        'AllowAutoCorrect',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propget'],
        HRESULT,
        'TextAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propput'],
        HRESULT,
        'TextAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(267), 'propget'],
        HRESULT,
        'Text',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(267), 'propput'],
        HRESULT,
        'Text',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(271), 'propget'],
        HRESULT,
        'SelText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(271), 'propput'],
        HRESULT,
        'SelText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(270), 'propget'],
        HRESULT,
        'SelStart',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(270), 'propput'],
        HRESULT,
        'SelStart',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(269), 'propget'],
        HRESULT,
        'SelLength',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(269), 'propput'],
        HRESULT,
        'SelLength',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(137), 'hidden', 'propget'],
        HRESULT,
        'TextAlignGeneral',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(137), 'hidden', 'propput'],
        HRESULT,
        'TextAlignGeneral',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(138), 'hidden', 'propget'],
        HRESULT,
        'FormatPictureText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(138), 'hidden', 'propput'],
        HRESULT,
        'FormatPictureText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(139), 'hidden', 'propget'],
        HRESULT,
        'Coltyp',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(139), 'hidden', 'propput'],
        HRESULT,
        'Coltyp',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(238), 'propget'],
        HRESULT,
        'ListCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(238), 'propput'],
        HRESULT,
        'ListCount',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(239), 'propget'],
        HRESULT,
        'ListIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(239), 'propput'],
        HRESULT,
        'ListIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propget'],
        HRESULT,
        'OnChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(114), 'propput'],
        HRESULT,
        'OnChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(120), 'propget'],
        HRESULT,
        'OnNotInList',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(120), 'propput'],
        HRESULT,
        'OnNotInList',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propget'],
        HRESULT,
        'KeyboardLanguage',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propput'],
        HRESULT,
        'KeyboardLanguage',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propget'],
        HRESULT,
        'AllowedText',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propput'],
        HRESULT,
        'AllowedText',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propget'],
        HRESULT,
        'ScrollBarAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propput'],
        HRESULT,
        'ScrollBarAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propget'],
        HRESULT,
        'NumeralShapes',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propput'],
        HRESULT,
        'NumeralShapes',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propget'],
        HRESULT,
        'IMEMode',
        (['out', 'retval'], POINTER(AcImeMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(356), 'propput'],
        HRESULT,
        'IMEMode',
        (['in'], AcImeMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(379), 'propget'],
        HRESULT,
        'IMESentenceMode',
        (['out', 'retval'], POINTER(AcImeSentenceMode), 'pRet')
    ),
    COMMETHOD(
        [dispid(379), 'propput'],
        HRESULT,
        'IMESentenceMode',
        (['in'], AcImeSentenceMode, 'pRet')
    ),
    COMMETHOD(
        [dispid(396), 'propget'],
        HRESULT,
        'IsHyperlink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(396), 'propput'],
        HRESULT,
        'IsHyperlink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propget'],
        HRESULT,
        'OnUndo',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propput'],
        HRESULT,
        'OnUndo',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(2380)],
        HRESULT,
        'AddItem',
        (['in'], BSTR, 'Item'),
        (['in', 'optional'], VARIANT, 'Index')
    ),
    COMMETHOD(
        [dispid(2381)],
        HRESULT,
        'RemoveItem',
        (['in'], VARIANT, 'Index')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propget'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2113), 'propput'],
        HRESULT,
        'Selected',
        (['in'], c_int, 'lRow'),
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2137), 'propget'],
        HRESULT,
        'ItemsSelected',
        (['out', 'retval'], POINTER(POINTER(_ItemsSelected)), 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propget'],
        HRESULT,
        'CanGrow',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propput'],
        HRESULT,
        'CanGrow',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propget'],
        HRESULT,
        'CanShrink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propput'],
        HRESULT,
        'CanShrink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(451), 'propget'],
        HRESULT,
        'SeparatorCharacters',
        (['out', 'retval'], POINTER(AcSeparatorCharacters), 'pRet')
    ),
    COMMETHOD(
        [dispid(451), 'propput'],
        HRESULT,
        'SeparatorCharacters',
        (['in'], AcSeparatorCharacters, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propget'],
        HRESULT,
        'OnChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(506), 'hidden', 'propput'],
        HRESULT,
        'OnChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(507), 'hidden', 'propget'],
        HRESULT,
        'OnNotInListMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(507), 'hidden', 'propput'],
        HRESULT,
        'OnNotInListMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(556), 'propget'],
        HRESULT,
        'AllowValueListEdits',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(556), 'propput'],
        HRESULT,
        'AllowValueListEdits',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(557), 'propget'],
        HRESULT,
        'ListItemsEditForm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(557), 'propput'],
        HRESULT,
        'ListItemsEditForm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(568), 'propget'],
        HRESULT,
        'InheritValueList',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(568), 'propput'],
        HRESULT,
        'InheritValueList',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(384), 'propget'],
        HRESULT,
        'LeftMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(384), 'propput'],
        HRESULT,
        'LeftMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propget'],
        HRESULT,
        'TopMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propput'],
        HRESULT,
        'TopMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propget'],
        HRESULT,
        'RightMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propput'],
        HRESULT,
        'RightMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propget'],
        HRESULT,
        'BottomMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propput'],
        HRESULT,
        'BottomMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(579), 'propget'],
        HRESULT,
        'ShowOnlyRowSourceValues',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(579), 'propput'],
        HRESULT,
        'ShowOnlyRowSourceValues',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(591), 'propget'],
        HRESULT,
        'DisplayAsHyperlink',
        (['out', 'retval'], POINTER(AcDisplayAsHyperlink), 'pRet')
    ),
    COMMETHOD(
        [dispid(591), 'propput'],
        HRESULT,
        'DisplayAsHyperlink',
        (['in'], AcDisplayAsHyperlink, 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Combobox implementation
# class _Combobox_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     def Dropdown(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Column(self, Index, Row):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ItemData(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def FormatConditions(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Format = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DecimalPlaces = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputMask = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSourceType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHeads = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidths = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BoundColumn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListRows = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LimitToList = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoExpand = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEHold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowAutoCorrect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Text = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelStart = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelLength = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlignGeneral = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormatPictureText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Coltyp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNotInList = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyboardLanguage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowedText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBarAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NumeralShapes = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMEMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IMESentenceMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsHyperlink = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUndo = property(_get, _set, doc = _set.__doc__)
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def AddItem(self, Item, Index):
#         '-no docstring-'
#         #return 
#
#     def RemoveItem(self, Index):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self, lRow):
#         '-no docstring-'
#         #return pRet
#     def _set(self, lRow, pRet):
#         '-no docstring-'
#     Selected = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ItemsSelected(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanGrow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanShrink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SeparatorCharacters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNotInListMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowValueListEdits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ListItemsEditForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InheritValueList = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomMargin = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowOnlyRowSourceValues = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayAsHyperlink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#

_AccessProperty._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2096), 'propget'],
        HRESULT,
        'Category',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _AccessProperty implementation
# class _AccessProperty_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Category(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

DispListBoxEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

_FormEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Load'),
    COMMETHOD([], HRESULT, 'Current'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeInsert',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterInsert'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD(
        [],
        HRESULT,
        'Delete',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeDelConfirm',
        (['out'], POINTER(c_short), 'Cancel'),
        (['out'], POINTER(c_short), 'Response')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'AfterDelConfirm',
        (['in', 'out'], POINTER(c_short), 'Status')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Open',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'Resize'),
    COMMETHOD(
        [],
        HRESULT,
        'Unload',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'Close'),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Deactivate'),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Error',
        (['in', 'out'], POINTER(c_short), 'DataErr'),
        (['out'], POINTER(c_short), 'Response')
    ),
    COMMETHOD([], HRESULT, 'Timer'),
    COMMETHOD(
        [],
        HRESULT,
        'Filter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FilterType')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'ApplyFilter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'ApplyType')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'RecordExit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'BeginBatchEdit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'UndoBatchEdit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'BeforeBeginTransaction',
        (['out'], POINTER(c_short), 'Cancel'),
        (
            ['in'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'Connection',
        )
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'AfterBeginTransaction',
        (
            ['in'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'Connection',
        )
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'BeforeCommitTransaction',
        (['out'], POINTER(c_short), 'Cancel'),
        (
            ['in'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'Connection',
        )
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'AfterCommitTransaction',
        (
            ['in'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'Connection',
        )
    ),
    COMMETHOD(
        ['hidden'],
        HRESULT,
        'RollbackTransaction',
        (
            ['in'],
            POINTER(POINTER(comtypes.gen._2A75196C_D9EB_4129_B803_931327F72D5C_0_2_8.Connection)),
            'Connection',
        )
    ),
    COMMETHOD([], HRESULT, 'OnConnect'),
    COMMETHOD([], HRESULT, 'OnDisconnect'),
    COMMETHOD(
        [],
        HRESULT,
        'PivotTableChange',
        (['in'], c_int, 'Reason')
    ),
    COMMETHOD([], HRESULT, 'Query'),
    COMMETHOD([], HRESULT, 'BeforeQuery'),
    COMMETHOD([], HRESULT, 'SelectionChange'),
    COMMETHOD(
        [],
        HRESULT,
        'CommandBeforeExecute',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'CommandChecked',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Checked')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'CommandEnabled',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Enabled')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'CommandExecute',
        (['in'], VARIANT, 'Command')
    ),
    COMMETHOD([], HRESULT, 'DataSetChange'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeScreenTip',
        (['in'], POINTER(IDispatch), 'ScreenTipText'),
        (['in'], POINTER(IDispatch), 'SourceObject')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeRender',
        (['in'], POINTER(IDispatch), 'drawObject'),
        (['in'], POINTER(IDispatch), 'chartObject'),
        (['in'], POINTER(IDispatch), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'AfterRender',
        (['in'], POINTER(IDispatch), 'drawObject'),
        (['in'], POINTER(IDispatch), 'chartObject')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'AfterFinalRender',
        (['in'], POINTER(IDispatch), 'drawObject')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'AfterLayout',
        (['in'], POINTER(IDispatch), 'drawObject')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseWheel',
        (['in'], VARIANT_BOOL, 'Page'),
        (['in'], c_int, 'Count')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'ViewChange',
        (['in'], c_int, 'Reason')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'DataChange',
        (['in'], c_int, 'Reason')
    ),
]

################################################################
# code template for _FormEvents implementation
# class _FormEvents_Impl(object):
#     def Load(self):
#         '-no docstring-'
#         #return 
#
#     def Current(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeInsert(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterInsert(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Delete(self):
#         '-no docstring-'
#         #return Cancel
#
#     def BeforeDelConfirm(self):
#         '-no docstring-'
#         #return Cancel, Response
#
#     def AfterDelConfirm(self):
#         '-no docstring-'
#         #return Status
#
#     def Open(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Resize(self):
#         '-no docstring-'
#         #return 
#
#     def Unload(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Close(self):
#         '-no docstring-'
#         #return 
#
#     def Activate(self):
#         '-no docstring-'
#         #return 
#
#     def Deactivate(self):
#         '-no docstring-'
#         #return 
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def Error(self):
#         '-no docstring-'
#         #return DataErr, Response
#
#     def Timer(self):
#         '-no docstring-'
#         #return 
#
#     def Filter(self):
#         '-no docstring-'
#         #return Cancel, FilterType
#
#     def ApplyFilter(self):
#         '-no docstring-'
#         #return Cancel, ApplyType
#
#     def Dirty(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Undo(self):
#         '-no docstring-'
#         #return Cancel
#
#     def RecordExit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def BeginBatchEdit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def UndoBatchEdit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def BeforeBeginTransaction(self, Connection):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterBeginTransaction(self, Connection):
#         '-no docstring-'
#         #return 
#
#     def BeforeCommitTransaction(self, Connection):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterCommitTransaction(self, Connection):
#         '-no docstring-'
#         #return 
#
#     def RollbackTransaction(self, Connection):
#         '-no docstring-'
#         #return 
#
#     def OnConnect(self):
#         '-no docstring-'
#         #return 
#
#     def OnDisconnect(self):
#         '-no docstring-'
#         #return 
#
#     def PivotTableChange(self, Reason):
#         '-no docstring-'
#         #return 
#
#     def Query(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeQuery(self):
#         '-no docstring-'
#         #return 
#
#     def SelectionChange(self):
#         '-no docstring-'
#         #return 
#
#     def CommandBeforeExecute(self, Command, Cancel):
#         '-no docstring-'
#         #return 
#
#     def CommandChecked(self, Command, Checked):
#         '-no docstring-'
#         #return 
#
#     def CommandEnabled(self, Command, Enabled):
#         '-no docstring-'
#         #return 
#
#     def CommandExecute(self, Command):
#         '-no docstring-'
#         #return 
#
#     def DataSetChange(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeScreenTip(self, ScreenTipText, SourceObject):
#         '-no docstring-'
#         #return 
#
#     def BeforeRender(self, drawObject, chartObject, Cancel):
#         '-no docstring-'
#         #return 
#
#     def AfterRender(self, drawObject, chartObject):
#         '-no docstring-'
#         #return 
#
#     def AfterFinalRender(self, drawObject):
#         '-no docstring-'
#         #return 
#
#     def AfterLayout(self, drawObject):
#         '-no docstring-'
#         #return 
#
#     def MouseWheel(self, Page, Count):
#         '-no docstring-'
#         #return 
#
#     def ViewChange(self, Reason):
#         '-no docstring-'
#         #return 
#
#     def DataChange(self, Reason):
#         '-no docstring-'
#         #return 
#


class WebServices(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{371BF535-7914-4474-BAE9-27281D431237}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'WebService': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class WebService(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7A7B2B33-A93D-4E04-BFC7-6041AAA0046D}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Entities(self) -> 'Entities': ...
        Entities = hints.normal_property(_get_Entities)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


WebServices._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(WebService)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for WebServices implementation
# class WebServices_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_WebOptions._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2284), 'propget'],
        HRESULT,
        'OrganizeInFolder',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2284), 'propput'],
        HRESULT,
        'OrganizeInFolder',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2285), 'propget'],
        HRESULT,
        'UseLongFileNames',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2285), 'propput'],
        HRESULT,
        'UseLongFileNames',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2287), 'propget'],
        HRESULT,
        'DownloadComponents',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2287), 'propput'],
        HRESULT,
        'DownloadComponents',
        (['in'], VARIANT_BOOL, 'pf')
    ),
    COMMETHOD(
        [dispid(2288), 'propget'],
        HRESULT,
        'LocationOfComponents',
        (['out', 'retval'], POINTER(BSTR), 'pstr')
    ),
    COMMETHOD(
        [dispid(2288), 'propput'],
        HRESULT,
        'LocationOfComponents',
        (['in'], BSTR, 'pstr')
    ),
    COMMETHOD(
        [dispid(2289), 'propget'],
        HRESULT,
        'Encoding',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding),
            'penc',
        )
    ),
    COMMETHOD(
        [dispid(2289), 'propput'],
        HRESULT,
        'Encoding',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoEncoding,
            'penc',
        )
    ),
    COMMETHOD(
        [dispid(2307), 'propget'],
        HRESULT,
        'FolderSuffix',
        (['out', 'retval'], POINTER(BSTR), 'pbstr')
    ),
    COMMETHOD([dispid(2308)], HRESULT, 'UseDefaultFolderSuffix'),
    COMMETHOD(
        [dispid(2331), 'propget'],
        HRESULT,
        'TargetBrowser',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser),
            'ptb',
        )
    ),
    COMMETHOD(
        [dispid(2331), 'propput'],
        HRESULT,
        'TargetBrowser',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoTargetBrowser,
            'ptb',
        )
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _WebOptions implementation
# class _WebOptions_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     OrganizeInFolder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     UseLongFileNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pf
#     def _set(self, pf):
#         '-no docstring-'
#     DownloadComponents = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pstr
#     def _set(self, pstr):
#         '-no docstring-'
#     LocationOfComponents = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return penc
#     def _set(self, penc):
#         '-no docstring-'
#     Encoding = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def FolderSuffix(self):
#         '-no docstring-'
#         #return pbstr
#
#     def UseDefaultFolderSuffix(self):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return ptb
#     def _set(self, ptb):
#         '-no docstring-'
#     TargetBrowser = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_ItemsSelected._methods_ = [
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _ItemsSelected implementation
# class _ItemsSelected_Impl(object):
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_Form3._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propget'],
        HRESULT,
        'AllowFilters',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(30), 'propput'],
        HRESULT,
        'AllowFilters',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propget'],
        HRESULT,
        'DefaultView',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propput'],
        HRESULT,
        'DefaultView',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propget'],
        HRESULT,
        'ViewsAllowed',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(146), 'propput'],
        HRESULT,
        'ViewsAllowed',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propget'],
        HRESULT,
        'AllowEditing',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(24), 'hidden', 'propput'],
        HRESULT,
        'AllowEditing',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propget'],
        HRESULT,
        'DefaultEditing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(134), 'hidden', 'propput'],
        HRESULT,
        'DefaultEditing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propget'],
        HRESULT,
        'AllowEdits',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(339), 'propput'],
        HRESULT,
        'AllowEdits',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propget'],
        HRESULT,
        'AllowDeletions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(292), 'propput'],
        HRESULT,
        'AllowDeletions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propget'],
        HRESULT,
        'AllowAdditions',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(326), 'propput'],
        HRESULT,
        'AllowAdditions',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propget'],
        HRESULT,
        'DataEntry',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(338), 'propput'],
        HRESULT,
        'DataEntry',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propget'],
        HRESULT,
        'AllowUpdating',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(45), 'hidden', 'propput'],
        HRESULT,
        'AllowUpdating',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propget'],
        HRESULT,
        'RecordsetType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(337), 'propput'],
        HRESULT,
        'RecordsetType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propget'],
        HRESULT,
        'RecordSelectors',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(19), 'propput'],
        HRESULT,
        'RecordSelectors',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propget'],
        HRESULT,
        'NavigationButtons',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(279), 'propput'],
        HRESULT,
        'NavigationButtons',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propget'],
        HRESULT,
        'DividingLines',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(314), 'propput'],
        HRESULT,
        'DividingLines',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propget'],
        HRESULT,
        'AutoResize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propput'],
        HRESULT,
        'AutoResize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propget'],
        HRESULT,
        'AutoCenter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propput'],
        HRESULT,
        'AutoCenter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propget'],
        HRESULT,
        'PopUp',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propput'],
        HRESULT,
        'PopUp',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propget'],
        HRESULT,
        'Modal',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propput'],
        HRESULT,
        'Modal',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propget'],
        HRESULT,
        'ControlBox',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propput'],
        HRESULT,
        'ControlBox',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propget'],
        HRESULT,
        'MinMaxButtons',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propput'],
        HRESULT,
        'MinMaxButtons',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propget'],
        HRESULT,
        'CloseButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propput'],
        HRESULT,
        'CloseButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propget'],
        HRESULT,
        'WhatsThisButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(96), 'hidden', 'propput'],
        HRESULT,
        'WhatsThisButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propget'],
        HRESULT,
        'Cycle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propput'],
        HRESULT,
        'Cycle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propget'],
        HRESULT,
        'ShortcutMenu',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(31), 'propput'],
        HRESULT,
        'ShortcutMenu',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propget'],
        HRESULT,
        'RowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(168), 'propput'],
        HRESULT,
        'RowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propget'],
        HRESULT,
        'DatasheetFontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(160), 'propput'],
        HRESULT,
        'DatasheetFontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propget'],
        HRESULT,
        'DatasheetFontHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(161), 'propput'],
        HRESULT,
        'DatasheetFontHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propget'],
        HRESULT,
        'DatasheetFontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(162), 'propput'],
        HRESULT,
        'DatasheetFontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propget'],
        HRESULT,
        'DatasheetFontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(163), 'propput'],
        HRESULT,
        'DatasheetFontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propget'],
        HRESULT,
        'DatasheetFontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(164), 'propput'],
        HRESULT,
        'DatasheetFontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propget'],
        HRESULT,
        'TabularCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(194), 'hidden', 'propput'],
        HRESULT,
        'TabularCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propget'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(318), 'propput'],
        HRESULT,
        'DatasheetGridlinesBehavior',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propget'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(319), 'propput'],
        HRESULT,
        'DatasheetGridlinesColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propget'],
        HRESULT,
        'DatasheetCellsEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(320), 'propput'],
        HRESULT,
        'DatasheetCellsEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propget'],
        HRESULT,
        'DatasheetForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(306), 'propput'],
        HRESULT,
        'DatasheetForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propget'],
        HRESULT,
        'ShowGrid',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(169), 'hidden', 'propput'],
        HRESULT,
        'ShowGrid',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propget'],
        HRESULT,
        'DatasheetBackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(321), 'propput'],
        HRESULT,
        'DatasheetBackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propget'],
        HRESULT,
        'FrozenColumns',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(170), 'propput'],
        HRESULT,
        'FrozenColumns',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propget'],
        HRESULT,
        'Bookmark',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(230), 'propput'],
        HRESULT,
        'Bookmark',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propget'],
        HRESULT,
        'TabularFamily',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(244), 'hidden', 'propput'],
        HRESULT,
        'TabularFamily',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propget'],
        HRESULT,
        'OpenArgs',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propput'],
        HRESULT,
        'OpenArgs',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propget'],
        HRESULT,
        'ConnectSynch',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(285), 'hidden', 'propput'],
        HRESULT,
        'ConnectSynch',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propget'],
        HRESULT,
        'OnCurrent',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propput'],
        HRESULT,
        'OnCurrent',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(81), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propget'],
        HRESULT,
        'BeforeInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(122), 'propput'],
        HRESULT,
        'BeforeInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propget'],
        HRESULT,
        'AfterInsert',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(123), 'propput'],
        HRESULT,
        'AfterInsert',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propget'],
        HRESULT,
        'OnDirty',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(375), 'propput'],
        HRESULT,
        'OnDirty',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propget'],
        HRESULT,
        'OnDelete',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(79), 'propput'],
        HRESULT,
        'OnDelete',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propget'],
        HRESULT,
        'BeforeDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(124), 'propput'],
        HRESULT,
        'BeforeDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propget'],
        HRESULT,
        'AfterDelConfirm',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(125), 'propput'],
        HRESULT,
        'AfterDelConfirm',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propget'],
        HRESULT,
        'OnLoad',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propput'],
        HRESULT,
        'OnLoad',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propget'],
        HRESULT,
        'OnResize',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propput'],
        HRESULT,
        'OnResize',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propget'],
        HRESULT,
        'OnUnload',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propput'],
        HRESULT,
        'OnUnload',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propget'],
        HRESULT,
        'KeyPreview',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propput'],
        HRESULT,
        'KeyPreview',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propget'],
        HRESULT,
        'OnFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propput'],
        HRESULT,
        'OnFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propget'],
        HRESULT,
        'OnApplyFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propput'],
        HRESULT,
        'OnApplyFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propget'],
        HRESULT,
        'OnTimer',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propput'],
        HRESULT,
        'OnTimer',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propget'],
        HRESULT,
        'TimerInterval',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propput'],
        HRESULT,
        'TimerInterval',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propput'],
        HRESULT,
        'WindowWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propput'],
        HRESULT,
        'WindowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propput'],
        HRESULT,
        'CurrentView',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propget'],
        HRESULT,
        'CurrentSectionTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(291), 'propput'],
        HRESULT,
        'CurrentSectionTop',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propget'],
        HRESULT,
        'CurrentSectionLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(290), 'propput'],
        HRESULT,
        'CurrentSectionLeft',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propget'],
        HRESULT,
        'SelLeft',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(298), 'propput'],
        HRESULT,
        'SelLeft',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propget'],
        HRESULT,
        'SelTop',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(299), 'propput'],
        HRESULT,
        'SelTop',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propget'],
        HRESULT,
        'SelWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(300), 'propput'],
        HRESULT,
        'SelWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propget'],
        HRESULT,
        'SelHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(301), 'propput'],
        HRESULT,
        'SelHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propget'],
        HRESULT,
        'InsideHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(315), 'propput'],
        HRESULT,
        'InsideHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propget'],
        HRESULT,
        'InsideWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(316), 'propput'],
        HRESULT,
        'InsideWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propget'],
        HRESULT,
        'AllowDesignChanges',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propput'],
        HRESULT,
        'AllowDesignChanges',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propget'],
        HRESULT,
        'ServerFilterByForm',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(247), 'propput'],
        HRESULT,
        'ServerFilterByForm',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propget'],
        HRESULT,
        'MaxRecords',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(361), 'propput'],
        HRESULT,
        'MaxRecords',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propget'],
        HRESULT,
        'UniqueTable',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(65), 'propput'],
        HRESULT,
        'UniqueTable',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propget'],
        HRESULT,
        'ResyncCommand',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(64), 'propput'],
        HRESULT,
        'ResyncCommand',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propget'],
        HRESULT,
        'MaxRecButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(63), 'propput'],
        HRESULT,
        'MaxRecButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2147), 'propget'],
        HRESULT,
        'NewRecord',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD([dispid(2145)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2085), 'hidden', 'propget'],
        HRESULT,
        'Dynaset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2086), 'propget'],
        HRESULT,
        'RecordsetClone',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(2088), 'hidden', 'propget'],
        HRESULT,
        'SectionOld',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2089), 'propget'],
        HRESULT,
        'Form',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2092), 'hidden', 'propget'],
        HRESULT,
        'ConnectControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD([dispid(2017)], HRESULT, 'Recalc'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(-550)], HRESULT, 'Refresh'),
    COMMETHOD([dispid(2020)], HRESULT, 'Repaint'),
    COMMETHOD(
        [dispid(2021)],
        HRESULT,
        'GoToPage',
        (['in'], c_int, 'PageNumber'),
        (['in', 'optional'], c_int, 'Right', 0),
        (['in', 'optional'], c_int, 'Down', 0)
    ),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(387), 'propget'],
        HRESULT,
        'SubdatasheetHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(387), 'propput'],
        HRESULT,
        'SubdatasheetHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propget'],
        HRESULT,
        'SubdatasheetExpanded',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(390), 'propput'],
        HRESULT,
        'SubdatasheetExpanded',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(322), 'propget'],
        HRESULT,
        'DatasheetBorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(322), 'propput'],
        HRESULT,
        'DatasheetBorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(325), 'propget'],
        HRESULT,
        'DatasheetColumnHeaderUnderlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(325), 'propput'],
        HRESULT,
        'DatasheetColumnHeaderUnderlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(323), 'propget'],
        HRESULT,
        'HorizontalDatasheetGridlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(323), 'propput'],
        HRESULT,
        'HorizontalDatasheetGridlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(324), 'propget'],
        HRESULT,
        'VerticalDatasheetGridlineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(324), 'propput'],
        HRESULT,
        'VerticalDatasheetGridlineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(402), 'propget'],
        HRESULT,
        'WindowTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(403), 'propget'],
        HRESULT,
        'WindowLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(404), 'propget'],
        HRESULT,
        'OnUndo',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(404), 'propput'],
        HRESULT,
        'OnUndo',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(405), 'hidden', 'propget'],
        HRESULT,
        'OnRecordExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(405), 'hidden', 'propput'],
        HRESULT,
        'OnRecordExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2340), 'propget'],
        HRESULT,
        'PivotTable',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2341), 'propget'],
        HRESULT,
        'ChartSpace',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propget'],
        HRESULT,
        'Printer',
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propput'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propputref'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propget'],
        HRESULT,
        'Moveable',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propput'],
        HRESULT,
        'Moveable',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(412), 'hidden', 'propget'],
        HRESULT,
        'BeginBatchEdit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(412), 'hidden', 'propput'],
        HRESULT,
        'BeginBatchEdit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(413), 'hidden', 'propget'],
        HRESULT,
        'UndoBatchEdit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(413), 'hidden', 'propput'],
        HRESULT,
        'UndoBatchEdit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(414), 'hidden', 'propget'],
        HRESULT,
        'BeforeBeginTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(414), 'hidden', 'propput'],
        HRESULT,
        'BeforeBeginTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(415), 'hidden', 'propget'],
        HRESULT,
        'AfterBeginTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(415), 'hidden', 'propput'],
        HRESULT,
        'AfterBeginTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(416), 'hidden', 'propget'],
        HRESULT,
        'BeforeCommitTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(416), 'hidden', 'propput'],
        HRESULT,
        'BeforeCommitTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(417), 'hidden', 'propget'],
        HRESULT,
        'AfterCommitTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(417), 'hidden', 'propput'],
        HRESULT,
        'AfterCommitTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(418), 'hidden', 'propget'],
        HRESULT,
        'RollbackTransaction',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(418), 'hidden', 'propput'],
        HRESULT,
        'RollbackTransaction',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(421), 'propget'],
        HRESULT,
        'AllowFormView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(421), 'propput'],
        HRESULT,
        'AllowFormView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(422), 'propget'],
        HRESULT,
        'AllowDatasheetView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(422), 'propput'],
        HRESULT,
        'AllowDatasheetView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(423), 'propget'],
        HRESULT,
        'AllowPivotTableView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(423), 'propput'],
        HRESULT,
        'AllowPivotTableView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(424), 'propget'],
        HRESULT,
        'AllowPivotChartView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(424), 'propput'],
        HRESULT,
        'AllowPivotChartView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(425), 'propget'],
        HRESULT,
        'OnConnect',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(425), 'propput'],
        HRESULT,
        'OnConnect',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(426), 'propget'],
        HRESULT,
        'OnDisconnect',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(426), 'propput'],
        HRESULT,
        'OnDisconnect',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(427), 'propget'],
        HRESULT,
        'PivotTableChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(427), 'propput'],
        HRESULT,
        'PivotTableChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(428), 'propget'],
        HRESULT,
        'Query',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(428), 'propput'],
        HRESULT,
        'Query',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(429), 'propget'],
        HRESULT,
        'BeforeQuery',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(429), 'propput'],
        HRESULT,
        'BeforeQuery',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(430), 'propget'],
        HRESULT,
        'SelectionChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(430), 'propput'],
        HRESULT,
        'SelectionChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(431), 'propget'],
        HRESULT,
        'CommandBeforeExecute',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(431), 'propput'],
        HRESULT,
        'CommandBeforeExecute',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(432), 'propget'],
        HRESULT,
        'CommandChecked',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(432), 'propput'],
        HRESULT,
        'CommandChecked',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(433), 'propget'],
        HRESULT,
        'CommandEnabled',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(433), 'propput'],
        HRESULT,
        'CommandEnabled',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(434), 'propget'],
        HRESULT,
        'CommandExecute',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(434), 'propput'],
        HRESULT,
        'CommandExecute',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(435), 'propget'],
        HRESULT,
        'DataSetChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(435), 'propput'],
        HRESULT,
        'DataSetChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(436), 'propget'],
        HRESULT,
        'BeforeScreenTip',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(436), 'propput'],
        HRESULT,
        'BeforeScreenTip',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(437), 'propget'],
        HRESULT,
        'AfterFinalRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(437), 'propput'],
        HRESULT,
        'AfterFinalRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(438), 'propget'],
        HRESULT,
        'AfterRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(438), 'propput'],
        HRESULT,
        'AfterRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(439), 'propget'],
        HRESULT,
        'AfterLayout',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(439), 'propput'],
        HRESULT,
        'AfterLayout',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(440), 'propget'],
        HRESULT,
        'BeforeRender',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(440), 'propput'],
        HRESULT,
        'BeforeRender',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propget'],
        HRESULT,
        'MouseWheel',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propput'],
        HRESULT,
        'MouseWheel',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(442), 'propget'],
        HRESULT,
        'ViewChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(442), 'propput'],
        HRESULT,
        'ViewChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(443), 'propget'],
        HRESULT,
        'DataChange',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(443), 'propput'],
        HRESULT,
        'DataChange',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(444), 'propget'],
        HRESULT,
        'FetchDefaults',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(444), 'propput'],
        HRESULT,
        'FetchDefaults',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(409), 'hidden', 'propget'],
        HRESULT,
        'BatchUpdates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(409), 'hidden', 'propput'],
        HRESULT,
        'BatchUpdates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(419), 'hidden', 'propget'],
        HRESULT,
        'CommitOnClose',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(419), 'hidden', 'propput'],
        HRESULT,
        'CommitOnClose',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(420), 'hidden', 'propget'],
        HRESULT,
        'CommitOnNavigation',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(420), 'hidden', 'propput'],
        HRESULT,
        'CommitOnNavigation',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propget'],
        HRESULT,
        'UseDefaultPrinter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propput'],
        HRESULT,
        'UseDefaultPrinter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propget'],
        HRESULT,
        'RecordSourceQualifier',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propput'],
        HRESULT,
        'RecordSourceQualifier',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(452), 'propget'],
        HRESULT,
        'FilterOnLoad',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(452), 'propput'],
        HRESULT,
        'FilterOnLoad',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(453), 'propget'],
        HRESULT,
        'OrderByOnLoad',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(453), 'propput'],
        HRESULT,
        'OrderByOnLoad',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(467), 'propget'],
        HRESULT,
        'SplitFormOrientation',
        (['out', 'retval'], POINTER(AcSplitFormOrientation), 'pRet')
    ),
    COMMETHOD(
        [dispid(467), 'propput'],
        HRESULT,
        'SplitFormOrientation',
        (['in'], AcSplitFormOrientation, 'pRet')
    ),
    COMMETHOD(
        [dispid(469), 'propget'],
        HRESULT,
        'SplitFormDatasheet',
        (['out', 'retval'], POINTER(AcSplitFormDatasheet), 'pRet')
    ),
    COMMETHOD(
        [dispid(469), 'propput'],
        HRESULT,
        'SplitFormDatasheet',
        (['in'], AcSplitFormDatasheet, 'pRet')
    ),
    COMMETHOD(
        [dispid(470), 'propget'],
        HRESULT,
        'SplitFormSplitterBar',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(470), 'propput'],
        HRESULT,
        'SplitFormSplitterBar',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(468), 'propget'],
        HRESULT,
        'SplitFormPrinting',
        (['out', 'retval'], POINTER(AcSplitFormPrinting), 'pRet')
    ),
    COMMETHOD(
        [dispid(468), 'propput'],
        HRESULT,
        'SplitFormPrinting',
        (['in'], AcSplitFormPrinting, 'pRet')
    ),
    COMMETHOD(
        [dispid(471), 'propget'],
        HRESULT,
        'SplitFormSplitterBarSave',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(471), 'propput'],
        HRESULT,
        'SplitFormSplitterBarSave',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(483), 'propget'],
        HRESULT,
        'NavigationCaption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(483), 'propput'],
        HRESULT,
        'NavigationCaption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnCurrentMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnCurrentMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(515), 'hidden', 'propget'],
        HRESULT,
        'BeforeInsertMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(515), 'hidden', 'propput'],
        HRESULT,
        'BeforeInsertMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(516), 'hidden', 'propget'],
        HRESULT,
        'AfterInsertMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(516), 'hidden', 'propput'],
        HRESULT,
        'AfterInsertMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(528), 'hidden', 'propget'],
        HRESULT,
        'OnDirtyMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(528), 'hidden', 'propput'],
        HRESULT,
        'OnDirtyMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(517), 'hidden', 'propget'],
        HRESULT,
        'OnDeleteMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(517), 'hidden', 'propput'],
        HRESULT,
        'OnDeleteMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(518), 'hidden', 'propget'],
        HRESULT,
        'BeforeDelConfirmMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(518), 'hidden', 'propput'],
        HRESULT,
        'BeforeDelConfirmMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(519), 'hidden', 'propget'],
        HRESULT,
        'AfterDelConfirmMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(519), 'hidden', 'propput'],
        HRESULT,
        'AfterDelConfirmMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(510), 'hidden', 'propget'],
        HRESULT,
        'OnOpenMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(510), 'hidden', 'propput'],
        HRESULT,
        'OnOpenMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(512), 'hidden', 'propget'],
        HRESULT,
        'OnLoadMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(512), 'hidden', 'propput'],
        HRESULT,
        'OnLoadMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(523), 'hidden', 'propget'],
        HRESULT,
        'OnResizeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(523), 'hidden', 'propput'],
        HRESULT,
        'OnResizeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(513), 'hidden', 'propget'],
        HRESULT,
        'OnUnloadMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(513), 'hidden', 'propput'],
        HRESULT,
        'OnUnloadMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(511), 'hidden', 'propget'],
        HRESULT,
        'OnCloseMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(511), 'hidden', 'propput'],
        HRESULT,
        'OnCloseMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(521), 'hidden', 'propget'],
        HRESULT,
        'OnActivateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(521), 'hidden', 'propput'],
        HRESULT,
        'OnActivateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(522), 'hidden', 'propget'],
        HRESULT,
        'OnDeactivateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(522), 'hidden', 'propput'],
        HRESULT,
        'OnDeactivateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(514), 'hidden', 'propget'],
        HRESULT,
        'OnErrorMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(514), 'hidden', 'propput'],
        HRESULT,
        'OnErrorMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(526), 'hidden', 'propget'],
        HRESULT,
        'OnFilterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(526), 'hidden', 'propput'],
        HRESULT,
        'OnFilterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(527), 'hidden', 'propget'],
        HRESULT,
        'OnApplyFilterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(527), 'hidden', 'propput'],
        HRESULT,
        'OnApplyFilterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(520), 'hidden', 'propget'],
        HRESULT,
        'OnTimerMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(520), 'hidden', 'propput'],
        HRESULT,
        'OnTimerMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(529), 'hidden', 'propget'],
        HRESULT,
        'OnUndoMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(529), 'hidden', 'propput'],
        HRESULT,
        'OnUndoMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(530), 'hidden', 'propget'],
        HRESULT,
        'OnRecordExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(530), 'hidden', 'propput'],
        HRESULT,
        'OnRecordExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(531), 'hidden', 'propget'],
        HRESULT,
        'BeginBatchEditMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(531), 'hidden', 'propput'],
        HRESULT,
        'BeginBatchEditMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(532), 'hidden', 'propget'],
        HRESULT,
        'UndoBatchEditMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(532), 'hidden', 'propput'],
        HRESULT,
        'UndoBatchEditMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(533), 'hidden', 'propget'],
        HRESULT,
        'BeforeBeginTransactionMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(533), 'hidden', 'propput'],
        HRESULT,
        'BeforeBeginTransactionMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(534), 'hidden', 'propget'],
        HRESULT,
        'AfterBeginTransactionMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(534), 'hidden', 'propput'],
        HRESULT,
        'AfterBeginTransactionMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(535), 'hidden', 'propget'],
        HRESULT,
        'BeforeCommitTransactionMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(535), 'hidden', 'propput'],
        HRESULT,
        'BeforeCommitTransactionMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(536), 'hidden', 'propget'],
        HRESULT,
        'AfterCommitTransactionMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(536), 'hidden', 'propput'],
        HRESULT,
        'AfterCommitTransactionMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(537), 'hidden', 'propget'],
        HRESULT,
        'RollbackTransactionMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(537), 'hidden', 'propput'],
        HRESULT,
        'RollbackTransactionMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(538), 'hidden', 'propget'],
        HRESULT,
        'OnConnectMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(538), 'hidden', 'propput'],
        HRESULT,
        'OnConnectMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(539), 'hidden', 'propget'],
        HRESULT,
        'OnDisconnectMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(539), 'hidden', 'propput'],
        HRESULT,
        'OnDisconnectMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(540), 'hidden', 'propget'],
        HRESULT,
        'PivotTableChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(540), 'hidden', 'propput'],
        HRESULT,
        'PivotTableChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(542), 'hidden', 'propget'],
        HRESULT,
        'QueryMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(542), 'hidden', 'propput'],
        HRESULT,
        'QueryMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(541), 'hidden', 'propget'],
        HRESULT,
        'BeforeQueryMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(541), 'hidden', 'propput'],
        HRESULT,
        'BeforeQueryMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(545), 'hidden', 'propget'],
        HRESULT,
        'SelectionChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(545), 'hidden', 'propput'],
        HRESULT,
        'SelectionChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(546), 'hidden', 'propget'],
        HRESULT,
        'CommandBeforeExecuteMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(546), 'hidden', 'propput'],
        HRESULT,
        'CommandBeforeExecuteMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(547), 'hidden', 'propget'],
        HRESULT,
        'CommandCheckedMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(547), 'hidden', 'propput'],
        HRESULT,
        'CommandCheckedMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(548), 'hidden', 'propget'],
        HRESULT,
        'CommandEnabledMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(548), 'hidden', 'propput'],
        HRESULT,
        'CommandEnabledMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(549), 'hidden', 'propget'],
        HRESULT,
        'CommandExecuteMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(549), 'hidden', 'propput'],
        HRESULT,
        'CommandExecuteMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(550), 'hidden', 'propget'],
        HRESULT,
        'DataSetChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(550), 'hidden', 'propput'],
        HRESULT,
        'DataSetChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(551), 'hidden', 'propget'],
        HRESULT,
        'BeforeScreenTipMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(551), 'hidden', 'propput'],
        HRESULT,
        'BeforeScreenTipMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(554), 'hidden', 'propget'],
        HRESULT,
        'AfterFinalRenderMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(554), 'hidden', 'propput'],
        HRESULT,
        'AfterFinalRenderMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(553), 'hidden', 'propget'],
        HRESULT,
        'AfterRenderMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(553), 'hidden', 'propput'],
        HRESULT,
        'AfterRenderMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(555), 'hidden', 'propget'],
        HRESULT,
        'AfterLayoutMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(555), 'hidden', 'propput'],
        HRESULT,
        'AfterLayoutMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(552), 'hidden', 'propget'],
        HRESULT,
        'BeforeRenderMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(552), 'hidden', 'propput'],
        HRESULT,
        'BeforeRenderMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(492), 'hidden', 'propget'],
        HRESULT,
        'MouseWheelMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(492), 'hidden', 'propput'],
        HRESULT,
        'MouseWheelMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(543), 'hidden', 'propget'],
        HRESULT,
        'ViewChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(543), 'hidden', 'propput'],
        HRESULT,
        'ViewChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(544), 'hidden', 'propget'],
        HRESULT,
        'DataChangeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(544), 'hidden', 'propput'],
        HRESULT,
        'DataChangeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(563), 'propget'],
        HRESULT,
        'AllowLayoutView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(563), 'propput'],
        HRESULT,
        'AllowLayoutView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(572), 'propget'],
        HRESULT,
        'DatasheetAlternateBackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(572), 'propput'],
        HRESULT,
        'DatasheetAlternateBackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(561), 'propget'],
        HRESULT,
        'DisplayOnSharePointSite',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(561), 'propput'],
        HRESULT,
        'DisplayOnSharePointSite',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(472), 'propget'],
        HRESULT,
        'SplitFormSize',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(472), 'propput'],
        HRESULT,
        'SplitFormSize',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(2500), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(585), 'propget'],
        HRESULT,
        'RibbonName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(585), 'propput'],
        HRESULT,
        'RibbonName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(592), 'propget'],
        HRESULT,
        'FitToScreen',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(592), 'propput'],
        HRESULT,
        'FitToScreen',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
]

################################################################
# code template for _Form3 implementation
# class _Form3_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFilters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewsAllowed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultEditing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowEdits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDeletions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowAdditions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataEntry = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowUpdating = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordsetType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSelectors = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NavigationButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DividingLines = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoCenter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PopUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Modal = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlBox = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinMaxButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CloseButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WhatsThisButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cycle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetFontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesBehavior = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetGridlinesColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetCellsEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowGrid = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetBackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FrozenColumns = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bookmark = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabularFamily = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OpenArgs = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ConnectSynch = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterInsert = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDelete = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterDelConfirm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnload = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyPreview = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimer = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TimerInterval = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentSectionLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InsideWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDesignChanges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilterByForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecords = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UniqueTable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ResyncCommand = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxRecButton = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def NewRecord(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Dynaset(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def RecordsetClone(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SectionOld(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Form(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ConnectControl(self):
#         '-no docstring-'
#         #return pRet
#
#     def Recalc(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Refresh(self):
#         '-no docstring-'
#         #return 
#
#     def Repaint(self):
#         '-no docstring-'
#         #return 
#
#     def GoToPage(self, PageNumber, Right, Down):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SubdatasheetExpanded = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetBorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetColumnHeaderUnderlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalDatasheetGridlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalDatasheetGridlineStyle = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def WindowTop(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def WindowLeft(self):
#         '-no docstring-'
#         #return pRet
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUndo = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnRecordExit = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def PivotTable(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def ChartSpace(self):
#         '-no docstring-'
#         #return ppRet
#
#     def Printer(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Moveable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeginBatchEdit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UndoBatchEdit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeBeginTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterBeginTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeCommitTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterCommitTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RollbackTransaction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFormView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDatasheetView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowPivotTableView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowPivotChartView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnConnect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDisconnect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PivotTableChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Query = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeQuery = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelectionChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandBeforeExecute = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandChecked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandEnabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandExecute = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataSetChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeScreenTip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterFinalRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterLayout = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeRender = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MouseWheel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataChange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FetchDefaults = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BatchUpdates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommitOnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommitOnNavigation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseDefaultPrinter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSourceQualifier = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormOrientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormDatasheet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormSplitterBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormSplitterBarSave = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NavigationCaption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrentMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeInsertMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterInsertMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDirtyMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeleteMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeDelConfirmMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterDelConfirmMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpenMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoadMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResizeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnloadMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCloseMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnErrorMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimerMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUndoMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnRecordExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeginBatchEditMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UndoBatchEditMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeBeginTransactionMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterBeginTransactionMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeCommitTransactionMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterCommitTransactionMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RollbackTransactionMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnConnectMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDisconnectMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PivotTableChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QueryMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeQueryMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SelectionChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandBeforeExecuteMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandCheckedMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandEnabledMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CommandExecuteMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataSetChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeScreenTipMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterFinalRenderMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterRenderMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterLayoutMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeRenderMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MouseWheelMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ViewChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataChangeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowLayoutView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DatasheetAlternateBackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayOnSharePointSite = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SplitFormSize = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RibbonName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FitToScreen = property(_get, _set, doc = _set.__doc__)
#


class ReturnVars(CoClass):
    _reg_clsid_ = GUID('{B06693E3-385D-4E70-923E-4FAB6D14EE15}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _ReturnVars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{25F0777B-C841-43BF-A020-89CDC82E1A1C}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_ReturnVar', hints.FirstComItfOf['ReturnVar']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ReturnVars._com_interfaces_ = [_ReturnVars]

_SectionEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD([], HRESULT, 'Paint'),
]

################################################################
# code template for _SectionEvents implementation
# class _SectionEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def Paint(self):
#         '-no docstring-'
#         #return 
#

_ReportEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Open',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'Close'),
    COMMETHOD([], HRESULT, 'Activate'),
    COMMETHOD([], HRESULT, 'Deactivate'),
    COMMETHOD(
        [],
        HRESULT,
        'Error',
        (['in', 'out'], POINTER(c_short), 'DataErr'),
        (['out'], POINTER(c_short), 'Response')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'NoData',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'Page'),
]

################################################################
# code template for _ReportEvents implementation
# class _ReportEvents_Impl(object):
#     def Open(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Close(self):
#         '-no docstring-'
#         #return 
#
#     def Activate(self):
#         '-no docstring-'
#         #return 
#
#     def Deactivate(self):
#         '-no docstring-'
#         #return 
#
#     def Error(self):
#         '-no docstring-'
#         #return DataErr, Response
#
#     def NoData(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Page(self):
#         '-no docstring-'
#         #return 
#


class ReturnVar(CoClass):
    _reg_clsid_ = GUID('{27B378D1-DAE2-48A5-BB40-A1C2BA02631D}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _ReturnVar(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{7E6392DC-D7B1-4310-BB4D-F9B4B90C72B5}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get__Value(self) -> hints.Incomplete: ...
        _Value = hints.normal_property(_get__Value)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Value(self) -> hints.Incomplete: ...
        Value = hints.normal_property(_get_Value)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ReturnVar._com_interfaces_ = [_ReturnVar]

_ReturnVars._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(ReturnVar)), 'ppReturnVar')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _ReturnVars implementation
# class _ReturnVars_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return ppReturnVar
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_Report3._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propget'],
        HRESULT,
        'PageHeader',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propput'],
        HRESULT,
        'PageHeader',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propget'],
        HRESULT,
        'PageFooter',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propput'],
        HRESULT,
        'PageFooter',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propget'],
        HRESULT,
        'DateGrouping',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propput'],
        HRESULT,
        'DateGrouping',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propget'],
        HRESULT,
        'GrpKeepTogether',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propput'],
        HRESULT,
        'GrpKeepTogether',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propget'],
        HRESULT,
        'PicturePages',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propput'],
        HRESULT,
        'PicturePages',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propget'],
        HRESULT,
        'HasData',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propput'],
        HRESULT,
        'HasData',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propget'],
        HRESULT,
        'PrintSection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propput'],
        HRESULT,
        'PrintSection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propget'],
        HRESULT,
        'NextRecord',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propput'],
        HRESULT,
        'NextRecord',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propget'],
        HRESULT,
        'MoveLayout',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propput'],
        HRESULT,
        'MoveLayout',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propget'],
        HRESULT,
        'FormatCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propput'],
        HRESULT,
        'FormatCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propget'],
        HRESULT,
        'PrintCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propput'],
        HRESULT,
        'PrintCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propget'],
        HRESULT,
        'CurrentX',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propput'],
        HRESULT,
        'CurrentX',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propget'],
        HRESULT,
        'CurrentY',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propput'],
        HRESULT,
        'CurrentY',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propget'],
        HRESULT,
        'ScaleHeight',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propput'],
        HRESULT,
        'ScaleHeight',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propget'],
        HRESULT,
        'ScaleLeft',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propput'],
        HRESULT,
        'ScaleLeft',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propget'],
        HRESULT,
        'ScaleMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propput'],
        HRESULT,
        'ScaleMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propget'],
        HRESULT,
        'ScaleTop',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propput'],
        HRESULT,
        'ScaleTop',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propget'],
        HRESULT,
        'ScaleWidth',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propput'],
        HRESULT,
        'ScaleWidth',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propget'],
        HRESULT,
        'DrawMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propput'],
        HRESULT,
        'DrawMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propget'],
        HRESULT,
        'DrawStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propput'],
        HRESULT,
        'DrawStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propget'],
        HRESULT,
        'DrawWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propput'],
        HRESULT,
        'DrawWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propget'],
        HRESULT,
        'FillColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propput'],
        HRESULT,
        'FillColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propget'],
        HRESULT,
        'FillStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propput'],
        HRESULT,
        'FillStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propget'],
        HRESULT,
        'OnNoData',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propput'],
        HRESULT,
        'OnNoData',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propget'],
        HRESULT,
        'OnPage',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propput'],
        HRESULT,
        'OnPage',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2118)],
        HRESULT,
        'Circle',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_float, 'radius'),
        (['in'], c_int, 'color'),
        (['in'], c_float, 'start'),
        (['in'], c_float, 'end'),
        (['in'], c_float, 'aspect')
    ),
    COMMETHOD(
        [dispid(2152)],
        HRESULT,
        'Line',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2117)],
        HRESULT,
        'PSet',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2116)],
        HRESULT,
        'Scale',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2')
    ),
    COMMETHOD(
        [dispid(2114)],
        HRESULT,
        'TextWidth',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2115)],
        HRESULT,
        'TextHeight',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2153)],
        HRESULT,
        'Print',
        (['in'], BSTR, 'Expr')
    ),
    COMMETHOD(
        [dispid(2088), 'hidden', 'propget'],
        HRESULT,
        'SectionOld',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2098), 'propget'],
        HRESULT,
        'GroupLevel',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(POINTER(GroupLevel)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(6), 'propget'],
        HRESULT,
        'AutoResize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propput'],
        HRESULT,
        'AutoResize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propget'],
        HRESULT,
        'AutoCenter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propput'],
        HRESULT,
        'AutoCenter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propget'],
        HRESULT,
        'PopUp',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propput'],
        HRESULT,
        'PopUp',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propget'],
        HRESULT,
        'Modal',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propput'],
        HRESULT,
        'Modal',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propget'],
        HRESULT,
        'ControlBox',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propput'],
        HRESULT,
        'ControlBox',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propget'],
        HRESULT,
        'MinMaxButtons',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propput'],
        HRESULT,
        'MinMaxButtons',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propget'],
        HRESULT,
        'CloseButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propput'],
        HRESULT,
        'CloseButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propput'],
        HRESULT,
        'WindowWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propput'],
        HRESULT,
        'WindowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(402), 'propget'],
        HRESULT,
        'WindowTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(403), 'propget'],
        HRESULT,
        'WindowLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(284), 'propget'],
        HRESULT,
        'OpenArgs',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propput'],
        HRESULT,
        'OpenArgs',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propget'],
        HRESULT,
        'Printer',
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propput'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propputref'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propget'],
        HRESULT,
        'Moveable',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propput'],
        HRESULT,
        'Moveable',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propget'],
        HRESULT,
        'UseDefaultPrinter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propput'],
        HRESULT,
        'UseDefaultPrinter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propget'],
        HRESULT,
        'RecordSourceQualifier',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propput'],
        HRESULT,
        'RecordSourceQualifier',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2423), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(BSTR), 'pbstr')
    ),
    COMMETHOD(
        [dispid(452), 'propget'],
        HRESULT,
        'FilterOnLoad',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(452), 'propput'],
        HRESULT,
        'FilterOnLoad',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(453), 'propget'],
        HRESULT,
        'OrderByOnLoad',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(453), 'propput'],
        HRESULT,
        'OrderByOnLoad',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propget'],
        HRESULT,
        'DefaultView',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(147), 'propput'],
        HRESULT,
        'DefaultView',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(474), 'propget'],
        HRESULT,
        'AllowReportView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(474), 'propput'],
        HRESULT,
        'AllowReportView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propget'],
        HRESULT,
        'ScrollBars',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(152), 'propput'],
        HRESULT,
        'ScrollBars',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propget'],
        HRESULT,
        'Cycle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(330), 'propput'],
        HRESULT,
        'Cycle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propget'],
        HRESULT,
        'AllowDesignChanges',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(373), 'hidden', 'propput'],
        HRESULT,
        'AllowDesignChanges',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propget'],
        HRESULT,
        'OnCurrent',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(87), 'propput'],
        HRESULT,
        'OnCurrent',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propget'],
        HRESULT,
        'KeyPreview',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(327), 'propput'],
        HRESULT,
        'KeyPreview',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propget'],
        HRESULT,
        'TimerInterval',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(111), 'propput'],
        HRESULT,
        'TimerInterval',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propget'],
        HRESULT,
        'CurrentView',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(289), 'propput'],
        HRESULT,
        'CurrentView',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD(
        [dispid(510), 'hidden', 'propget'],
        HRESULT,
        'OnOpenMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(510), 'hidden', 'propput'],
        HRESULT,
        'OnOpenMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(511), 'hidden', 'propget'],
        HRESULT,
        'OnCloseMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(511), 'hidden', 'propput'],
        HRESULT,
        'OnCloseMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(521), 'hidden', 'propget'],
        HRESULT,
        'OnActivateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(521), 'hidden', 'propput'],
        HRESULT,
        'OnActivateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(522), 'hidden', 'propget'],
        HRESULT,
        'OnDeactivateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(522), 'hidden', 'propput'],
        HRESULT,
        'OnDeactivateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(524), 'hidden', 'propget'],
        HRESULT,
        'OnNoDataMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(524), 'hidden', 'propput'],
        HRESULT,
        'OnNoDataMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(525), 'hidden', 'propget'],
        HRESULT,
        'OnPageMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(525), 'hidden', 'propput'],
        HRESULT,
        'OnPageMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(514), 'hidden', 'propget'],
        HRESULT,
        'OnErrorMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(514), 'hidden', 'propput'],
        HRESULT,
        'OnErrorMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnCurrentMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnCurrentMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(512), 'hidden', 'propget'],
        HRESULT,
        'OnLoadMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(512), 'hidden', 'propput'],
        HRESULT,
        'OnLoadMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(523), 'hidden', 'propget'],
        HRESULT,
        'OnResizeMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(523), 'hidden', 'propput'],
        HRESULT,
        'OnResizeMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(513), 'hidden', 'propget'],
        HRESULT,
        'OnUnloadMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(513), 'hidden', 'propput'],
        HRESULT,
        'OnUnloadMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(526), 'hidden', 'propget'],
        HRESULT,
        'OnFilterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(526), 'hidden', 'propput'],
        HRESULT,
        'OnFilterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(527), 'hidden', 'propget'],
        HRESULT,
        'OnApplyFilterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(527), 'hidden', 'propput'],
        HRESULT,
        'OnApplyFilterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(520), 'hidden', 'propget'],
        HRESULT,
        'OnTimerMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(520), 'hidden', 'propput'],
        HRESULT,
        'OnTimerMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(492), 'hidden', 'propget'],
        HRESULT,
        'MouseWheelMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(492), 'hidden', 'propput'],
        HRESULT,
        'MouseWheelMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(559), 'propget'],
        HRESULT,
        'ShowPageMargins',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(559), 'propput'],
        HRESULT,
        'ShowPageMargins',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(560), 'propget'],
        HRESULT,
        'FitToPage',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(560), 'propput'],
        HRESULT,
        'FitToPage',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(563), 'propget'],
        HRESULT,
        'AllowLayoutView',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(563), 'propput'],
        HRESULT,
        'AllowLayoutView',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propget'],
        HRESULT,
        'OnLoad',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(127), 'propput'],
        HRESULT,
        'OnLoad',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propget'],
        HRESULT,
        'OnResize',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(117), 'propput'],
        HRESULT,
        'OnResize',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propget'],
        HRESULT,
        'OnUnload',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(128), 'propput'],
        HRESULT,
        'OnUnload',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propget'],
        HRESULT,
        'OnFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(333), 'propput'],
        HRESULT,
        'OnFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propget'],
        HRESULT,
        'OnApplyFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(334), 'propput'],
        HRESULT,
        'OnApplyFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propget'],
        HRESULT,
        'OnTimer',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(110), 'propput'],
        HRESULT,
        'OnTimer',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propget'],
        HRESULT,
        'MouseWheel',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(441), 'propput'],
        HRESULT,
        'MouseWheel',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(561), 'propget'],
        HRESULT,
        'DisplayOnSharePointSite',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(561), 'propput'],
        HRESULT,
        'DisplayOnSharePointSite',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(2500), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(585), 'propget'],
        HRESULT,
        'RibbonName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(585), 'propput'],
        HRESULT,
        'RibbonName',
        (['in'], BSTR, 'pRet')
    ),
]

################################################################
# code template for _Report3 implementation
# class _Report3_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageHeader = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageFooter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DateGrouping = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GrpKeepTogether = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintSection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NextRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MoveLayout = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormatCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNoData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     def Circle(self, flags, X, Y, radius, color, start, end, aspect):
#         '-no docstring-'
#         #return 
#
#     def Line(self, flags, x1, y1, x2, y2, color):
#         '-no docstring-'
#         #return 
#
#     def PSet(self, flags, X, Y, color):
#         '-no docstring-'
#         #return 
#
#     def Scale(self, flags, x1, y1, x2, y2):
#         '-no docstring-'
#         #return 
#
#     def TextWidth(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def TextHeight(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def Print(self, Expr):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SectionOld(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def GroupLevel(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoCenter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PopUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Modal = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlBox = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinMaxButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CloseButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowHeight = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def WindowTop(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def WindowLeft(self):
#         '-no docstring-'
#         #return pRet
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OpenArgs = property(_get, _set, doc = _set.__doc__)
#
#     def Printer(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Moveable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseDefaultPrinter = property(_get, _set, doc = _set.__doc__)
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSourceQualifier = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Shape(self):
#         '-no docstring-'
#         #return pbstr
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowReportView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Cycle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowDesignChanges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyPreview = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TimerInterval = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentView = property(_get, _set, doc = _set.__doc__)
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpenMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCloseMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNoDataMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPageMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnErrorMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnCurrentMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoadMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResizeMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnloadMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimerMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MouseWheelMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShowPageMargins = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FitToPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowLayoutView = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLoad = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUnload = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnApplyFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnTimer = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MouseWheel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayOnSharePointSite = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RibbonName = property(_get, _set, doc = _set.__doc__)
#

_Section._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(151), 'propget'],
        HRESULT,
        'ForceNewPage',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(151), 'propput'],
        HRESULT,
        'ForceNewPage',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(231), 'propget'],
        HRESULT,
        'NewRowOrCol',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(231), 'propput'],
        HRESULT,
        'NewRowOrCol',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(75), 'propget'],
        HRESULT,
        'KeepTogether',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(75), 'propput'],
        HRESULT,
        'KeepTogether',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propget'],
        HRESULT,
        'CanGrow',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(14), 'propput'],
        HRESULT,
        'CanGrow',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propget'],
        HRESULT,
        'CanShrink',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(16), 'propput'],
        HRESULT,
        'CanShrink',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(15), 'propget'],
        HRESULT,
        'RepeatSection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(15), 'propput'],
        HRESULT,
        'RepeatSection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(80), 'propget'],
        HRESULT,
        'OnFormat',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(80), 'propput'],
        HRESULT,
        'OnFormat',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(82), 'propget'],
        HRESULT,
        'OnPrint',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(82), 'propput'],
        HRESULT,
        'OnPrint',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(84), 'propget'],
        HRESULT,
        'OnRetreat',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(84), 'propput'],
        HRESULT,
        'OnRetreat',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(200), 'propget'],
        HRESULT,
        'HasContinued',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(200), 'propput'],
        HRESULT,
        'HasContinued',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(201), 'propget'],
        HRESULT,
        'WillContinue',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(201), 'propput'],
        HRESULT,
        'WillContinue',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(475), 'propget'],
        HRESULT,
        'AutoHeight',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(475), 'propput'],
        HRESULT,
        'AutoHeight',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(493), 'hidden', 'propget'],
        HRESULT,
        'OnFormatMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(493), 'hidden', 'propput'],
        HRESULT,
        'OnFormatMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(494), 'hidden', 'propget'],
        HRESULT,
        'OnPrintMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(494), 'hidden', 'propput'],
        HRESULT,
        'OnPrintMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(495), 'hidden', 'propget'],
        HRESULT,
        'OnRetreatMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(495), 'hidden', 'propput'],
        HRESULT,
        'OnRetreatMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(571), 'propget'],
        HRESULT,
        'AlternateBackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(571), 'propput'],
        HRESULT,
        'AlternateBackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(569), 'propget'],
        HRESULT,
        'OnPaint',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(569), 'propput'],
        HRESULT,
        'OnPaint',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(570), 'hidden', 'propget'],
        HRESULT,
        'OnPaintMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(570), 'hidden', 'propput'],
        HRESULT,
        'OnPaintMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD([dispid(2503)], HRESULT, 'SetTabOrder'),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(628), 'propget'],
        HRESULT,
        'AlternateBackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(628), 'propput'],
        HRESULT,
        'AlternateBackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(629), 'propget'],
        HRESULT,
        'AlternateBackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(629), 'propput'],
        HRESULT,
        'AlternateBackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(630), 'propget'],
        HRESULT,
        'AlternateBackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(630), 'propput'],
        HRESULT,
        'AlternateBackShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Section implementation
# class _Section_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForceNewPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NewRowOrCol = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeepTogether = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanGrow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CanShrink = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RepeatSection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFormat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnRetreat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasContinued = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WillContinue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnFormatMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPrintMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnRetreatMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AlternateBackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPaint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPaintMacro = property(_get, _set, doc = _set.__doc__)
#
#     def SetTabOrder(self):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AlternateBackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AlternateBackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AlternateBackShade = property(_get, _set, doc = _set.__doc__)
#

_SmartTagAction._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD([dispid(2444)], HRESULT, 'Execute'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _SmartTagAction implementation
# class _SmartTagAction_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     def Execute(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class Entities(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4B0E334D-B734-458A-A041-B528D031D4E5}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'Entity': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


WebService._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2582), 'propget'],
        HRESULT,
        'Entities',
        (['out', 'retval'], POINTER(POINTER(Entities)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for WebService implementation
# class WebService_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Entities(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class CommandButton(CoClass):
    _reg_clsid_ = GUID('{3B06E94F-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispCommandButtonEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70526B-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


CommandButton._com_interfaces_ = [_CommandButton]
CommandButton._outgoing_interfaces_ = [DispCommandButtonEvents, _CommandButtonEvents]


class DispNavigationControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E992-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Dirty(self) -> hints.Incomplete: ...
        def Undo(self) -> hints.Incomplete: ...


DispNavigationControlEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2077)], None, 'Change'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2144)],
        None,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]

_OptionButtonEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _OptionButtonEvents implementation
# class _OptionButtonEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#


class _ObjectFrame(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E95E-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Object(self) -> hints.Incomplete: ...
        Object = hints.normal_property(_get_Object)
        def _get_ObjectVerbs(self, Index: hints.Incomplete) -> hints.Incomplete: ...
        ObjectVerbs = hints.named_property('ObjectVerbs', _get_ObjectVerbs)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_SizeMode(self) -> hints.Incomplete: ...
        def _set_SizeMode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SizeMode = hints.normal_property(_get_SizeMode, _set_SizeMode)
        def _get_OLEClass(self) -> hints.Incomplete: ...
        def _set_OLEClass(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLEClass = hints.normal_property(_get_OLEClass, _set_OLEClass)
        def _get_Item(self) -> hints.Incomplete: ...
        def _set_Item(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Item = hints.normal_property(_get_Item, _set_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_RowSourceType(self) -> hints.Incomplete: ...
        def _set_RowSourceType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSourceType = hints.normal_property(_get_RowSourceType, _set_RowSourceType)
        def _get_RowSource(self) -> hints.Incomplete: ...
        def _set_RowSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RowSource = hints.normal_property(_get_RowSource, _set_RowSource)
        def _get_LinkChildFields(self) -> hints.Incomplete: ...
        def _set_LinkChildFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkChildFields = hints.normal_property(_get_LinkChildFields, _set_LinkChildFields)
        def _get_LinkMasterFields(self) -> hints.Incomplete: ...
        def _set_LinkMasterFields(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LinkMasterFields = hints.normal_property(_get_LinkMasterFields, _set_LinkMasterFields)
        def _get_AutoActivate(self) -> hints.Incomplete: ...
        def _set_AutoActivate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoActivate = hints.normal_property(_get_AutoActivate, _set_AutoActivate)
        def _get_DisplayType(self) -> hints.Incomplete: ...
        def _set_DisplayType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayType = hints.normal_property(_get_DisplayType, _set_DisplayType)
        def _get_UpdateOptions(self) -> hints.Incomplete: ...
        def _set_UpdateOptions(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UpdateOptions = hints.normal_property(_get_UpdateOptions, _set_UpdateOptions)
        def _get_Verb(self) -> hints.Incomplete: ...
        def _set_Verb(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Verb = hints.normal_property(_get_Verb, _set_Verb)
        def _get_OLEType(self) -> hints.Incomplete: ...
        def _set_OLEType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLEType = hints.normal_property(_get_OLEType, _set_OLEType)
        def _get_OLETypeAllowed(self) -> hints.Incomplete: ...
        def _set_OLETypeAllowed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OLETypeAllowed = hints.normal_property(_get_OLETypeAllowed, _set_OLETypeAllowed)
        def _get_SourceObject(self) -> hints.Incomplete: ...
        def _set_SourceObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceObject = hints.normal_property(_get_SourceObject, _set_SourceObject)
        def _get_Class(self) -> hints.Incomplete: ...
        def _set_Class(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Class = hints.normal_property(_get_Class, _set_Class)
        def _get_SourceDoc(self) -> hints.Incomplete: ...
        def _set_SourceDoc(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceDoc = hints.normal_property(_get_SourceDoc, _set_SourceDoc)
        def _get_SourceItem(self) -> hints.Incomplete: ...
        def _set_SourceItem(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SourceItem = hints.normal_property(_get_SourceItem, _set_SourceItem)
        def _get_ColumnCount(self) -> hints.Incomplete: ...
        def _set_ColumnCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnCount = hints.normal_property(_get_ColumnCount, _set_ColumnCount)
        def _get_ColumnHeads(self) -> hints.Incomplete: ...
        def _set_ColumnHeads(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHeads = hints.normal_property(_get_ColumnHeads, _set_ColumnHeads)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_OleData(self) -> hints.Incomplete: ...
        def _set_OleData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OleData = hints.normal_property(_get_OleData, _set_OleData)
        def _get_UpdateMethod(self) -> hints.Incomplete: ...
        def _set_UpdateMethod(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        UpdateMethod = hints.normal_property(_get_UpdateMethod, _set_UpdateMethod)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Data(self) -> hints.Incomplete: ...
        def _set_Data(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Data = hints.normal_property(_get_Data, _set_Data)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ObjectPalette(self) -> hints.Incomplete: ...
        def _set_ObjectPalette(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectPalette = hints.normal_property(_get_ObjectPalette, _set_ObjectPalette)
        def _get_LpOleObject(self) -> hints.Incomplete: ...
        def _set_LpOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LpOleObject = hints.normal_property(_get_LpOleObject, _set_LpOleObject)
        def _get_ObjectVerbsCount(self) -> hints.Incomplete: ...
        def _set_ObjectVerbsCount(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ObjectVerbsCount = hints.normal_property(_get_ObjectVerbsCount, _set_ObjectVerbsCount)
        def _get_Action(self) -> hints.Incomplete: ...
        def _set_Action(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Action = hints.normal_property(_get_Action, _set_Action)
        def _get_Scaling(self) -> hints.Incomplete: ...
        def _set_Scaling(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Scaling = hints.normal_property(_get_Scaling, _set_Scaling)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnUpdated(self) -> hints.Incomplete: ...
        def _set_OnUpdated(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnUpdated = hints.normal_property(_get_OnUpdated, _set_OnUpdated)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_VarOleObject(self) -> hints.Incomplete: ...
        def _set_VarOleObject(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VarOleObject = hints.normal_property(_get_VarOleObject, _set_VarOleObject)


_ObjectFrame._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2104), 'propget'],
        HRESULT,
        'Object',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2105), 'propget'],
        HRESULT,
        'ObjectVerbs',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propget'],
        HRESULT,
        'SizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propput'],
        HRESULT,
        'SizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(76), 'propget'],
        HRESULT,
        'OLEClass',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(76), 'propput'],
        HRESULT,
        'OLEClass',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(47), 'propget'],
        HRESULT,
        'Item',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(47), 'propput'],
        HRESULT,
        'Item',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propget'],
        HRESULT,
        'RowSourceType',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(93), 'propput'],
        HRESULT,
        'RowSourceType',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propget'],
        HRESULT,
        'RowSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propput'],
        HRESULT,
        'RowSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propget'],
        HRESULT,
        'LinkChildFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propput'],
        HRESULT,
        'LinkChildFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propget'],
        HRESULT,
        'LinkMasterFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propput'],
        HRESULT,
        'LinkMasterFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(101), 'propget'],
        HRESULT,
        'AutoActivate',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(101), 'propput'],
        HRESULT,
        'AutoActivate',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(272), 'propget'],
        HRESULT,
        'DisplayType',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(272), 'propput'],
        HRESULT,
        'DisplayType',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(103), 'propget'],
        HRESULT,
        'UpdateOptions',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(103), 'propput'],
        HRESULT,
        'UpdateOptions',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propget'],
        HRESULT,
        'Verb',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propput'],
        HRESULT,
        'Verb',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(276), 'propget'],
        HRESULT,
        'OLEType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(276), 'propput'],
        HRESULT,
        'OLEType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(275), 'propget'],
        HRESULT,
        'OLETypeAllowed',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(275), 'propput'],
        HRESULT,
        'OLETypeAllowed',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(132), 'propget'],
        HRESULT,
        'SourceObject',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(132), 'propput'],
        HRESULT,
        'SourceObject',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propget'],
        HRESULT,
        'Class',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propput'],
        HRESULT,
        'Class',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(133), 'propget'],
        HRESULT,
        'SourceDoc',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(133), 'propput'],
        HRESULT,
        'SourceDoc',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(48), 'propget'],
        HRESULT,
        'SourceItem',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(48), 'propput'],
        HRESULT,
        'SourceItem',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propget'],
        HRESULT,
        'ColumnCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(70), 'propput'],
        HRESULT,
        'ColumnCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propget'],
        HRESULT,
        'ColumnHeads',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(131), 'propput'],
        HRESULT,
        'ColumnHeads',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(171), 'hidden', 'propget'],
        HRESULT,
        'OleData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(171), 'hidden', 'propput'],
        HRESULT,
        'OleData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(142), 'propget'],
        HRESULT,
        'UpdateMethod',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(142), 'propput'],
        HRESULT,
        'UpdateMethod',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(242), 'hidden', 'propget'],
        HRESULT,
        'Data',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(242), 'hidden', 'propput'],
        HRESULT,
        'Data',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propget'],
        HRESULT,
        'LpOleObject',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propput'],
        HRESULT,
        'LpOleObject',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propget'],
        HRESULT,
        'ObjectVerbsCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propput'],
        HRESULT,
        'ObjectVerbsCount',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(273), 'propget'],
        HRESULT,
        'Action',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(273), 'propput'],
        HRESULT,
        'Action',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(88), 'propget'],
        HRESULT,
        'Scaling',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(88), 'propput'],
        HRESULT,
        'Scaling',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propget'],
        HRESULT,
        'OnUpdated',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propput'],
        HRESULT,
        'OnUpdated',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propget'],
        HRESULT,
        'VarOleObject',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propput'],
        HRESULT,
        'VarOleObject',
        (['in'], VARIANT, 'pRet')
    ),
]

################################################################
# code template for _ObjectFrame implementation
# class _ObjectFrame_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Object(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ObjectVerbs(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLEClass = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Item = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSourceType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkChildFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkMasterFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UpdateOptions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Verb = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLEType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLETypeAllowed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceObject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Class = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceDoc = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceItem = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHeads = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OleData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UpdateMethod = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Data = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LpOleObject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectVerbsCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Action = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Scaling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdated = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VarOleObject = property(_get, _set, doc = _set.__doc__)
#

DispCommandButtonEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]


class PageBreak(CoClass):
    _reg_clsid_ = GUID('{3B06E95F-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _PageBreak(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E960-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


class _PageBreakEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E434E-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']


class DispPageBreakEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527A-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []


PageBreak._com_interfaces_ = [_PageBreak]
PageBreak._outgoing_interfaces_ = [DispPageBreakEvents, _PageBreakEvents]

_ToggleButtonEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _ToggleButtonEvents implementation
# class _ToggleButtonEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#

DispPageBreakEvents._disp_methods_ = [
]

Properties._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Properties implementation
# class Properties_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_ToggleButton._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propget'],
        HRESULT,
        'OptionValue',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propput'],
        HRESULT,
        'OptionValue',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propget'],
        HRESULT,
        'TripleState',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propput'],
        HRESULT,
        'TripleState',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propget'],
        HRESULT,
        'HoverColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propput'],
        HRESULT,
        'HoverColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propget'],
        HRESULT,
        'HoverThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propput'],
        HRESULT,
        'HoverThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propget'],
        HRESULT,
        'HoverTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propput'],
        HRESULT,
        'HoverTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propget'],
        HRESULT,
        'HoverShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propput'],
        HRESULT,
        'HoverShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propget'],
        HRESULT,
        'HoverForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propput'],
        HRESULT,
        'HoverForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propget'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propput'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propget'],
        HRESULT,
        'HoverForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propput'],
        HRESULT,
        'HoverForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propget'],
        HRESULT,
        'HoverForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propput'],
        HRESULT,
        'HoverForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propget'],
        HRESULT,
        'PressedColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propput'],
        HRESULT,
        'PressedColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propget'],
        HRESULT,
        'PressedThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propput'],
        HRESULT,
        'PressedThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propget'],
        HRESULT,
        'PressedTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propput'],
        HRESULT,
        'PressedTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propget'],
        HRESULT,
        'PressedShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propput'],
        HRESULT,
        'PressedShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propget'],
        HRESULT,
        'PressedForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propput'],
        HRESULT,
        'PressedForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propget'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propput'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propget'],
        HRESULT,
        'PressedForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propput'],
        HRESULT,
        'PressedForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propget'],
        HRESULT,
        'PressedForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propput'],
        HRESULT,
        'PressedForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propget'],
        HRESULT,
        'UseTheme',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(648), 'propput'],
        HRESULT,
        'UseTheme',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propput'],
        HRESULT,
        'Shape',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propget'],
        HRESULT,
        'Bevel',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propput'],
        HRESULT,
        'Bevel',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propget'],
        HRESULT,
        'Glow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propput'],
        HRESULT,
        'Glow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propget'],
        HRESULT,
        'Shadow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propput'],
        HRESULT,
        'Shadow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propget'],
        HRESULT,
        'SoftEdges',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propput'],
        HRESULT,
        'SoftEdges',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propget'],
        HRESULT,
        'QuickStyle',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propput'],
        HRESULT,
        'QuickStyle',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propget'],
        HRESULT,
        'QuickStyleMask',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propput'],
        HRESULT,
        'QuickStyleMask',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propget'],
        HRESULT,
        'Gradient',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propput'],
        HRESULT,
        'Gradient',
        (['in'], c_int, 'pRet')
    ),
]

################################################################
# code template for _ToggleButton implementation
# class _ToggleButton_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OptionValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TripleState = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseTheme = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shape = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bevel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Glow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shadow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SoftEdges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyleMask = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Gradient = property(_get, _set, doc = _set.__doc__)
#


class DependencyObjects(CoClass):
    _reg_clsid_ = GUID('{1C4367A8-EAEE-4C23-9582-4A229DF2403E}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


DependencyObjects._com_interfaces_ = [_DependencyObjects]

_ReturnVar._methods_ = [
    COMMETHOD(
        [dispid(2103), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'bstrName')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _ReturnVar implementation
# class _ReturnVar_Impl(object):
#     @property
#     def _Value(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return bstrName
#
#     @property
#     def Value(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class CheckBox(CoClass):
    _reg_clsid_ = GUID('{3B06E953-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispCheckBoxEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70526A-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...


CheckBox._com_interfaces_ = [_Checkbox]
CheckBox._outgoing_interfaces_ = [DispCheckBoxEvents, _CheckBoxEvents]


class Page(CoClass):
    _reg_clsid_ = GUID('{3B06E973-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Page(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E974-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_Picture(self) -> hints.Incomplete: ...
        def _set_Picture(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Picture = hints.normal_property(_get_Picture, _set_Picture)
        def _get_PictureType(self) -> hints.Incomplete: ...
        def _set_PictureType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureType = hints.normal_property(_get_PictureType, _set_PictureType)
        def _get_PageIndex(self) -> hints.Incomplete: ...
        def _set_PageIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PageIndex = hints.normal_property(_get_PageIndex, _set_PageIndex)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_PictureData(self) -> hints.Incomplete: ...
        def _set_PictureData(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        PictureData = hints.normal_property(_get_PictureData, _set_PictureData)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def SetTabOrder(self) -> hints.Hresult: ...


class _PageEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E975-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


Page._com_interfaces_ = [_Page]
Page._outgoing_interfaces_ = [DispPageEvents, _PageEvents]

Pages._methods_ = [
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Page)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in', 'optional'], VARIANT, 'Before'),
        (['out', 'retval'], POINTER(POINTER(Page)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2192)],
        HRESULT,
        'Remove',
        (['in', 'optional'], VARIANT, 'Item')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Pages implementation
# class Pages_Impl(object):
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Before):
#         '-no docstring-'
#         #return pRet
#
#     def Remove(self, Item):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class Entity(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3D1E34BD-F23F-46D1-B80A-2BA8ACA850A9}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Operations(self) -> 'Operations': ...
        Operations = hints.normal_property(_get_Operations)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Entities._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Entity)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Entities implementation
# class Entities_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _ChildLabelEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4358-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']


_ChildLabelEvents._methods_ = [
]

################################################################
# code template for _ChildLabelEvents implementation
# class _ChildLabelEvents_Impl(object):


class _CheckBoxInOptionEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E435D-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def GotFocus(self) -> hints.Hresult: ...
        def LostFocus(self) -> hints.Hresult: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...


_CheckBoxInOptionEvents._methods_ = [
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _CheckBoxInOptionEvents implementation
# class _CheckBoxInOptionEvents_Impl(object):
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#

DispCheckBoxEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

_PageEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _PageEvents implementation
# class _PageEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#


class Label(CoClass):
    _reg_clsid_ = GUID('{3B06E947-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _Label(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E948-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_Caption(self) -> hints.Incomplete: ...
        def _set_Caption(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Caption = hints.normal_property(_get_Caption, _set_Caption)
        def _get_HyperlinkAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkAddress = hints.normal_property(_get_HyperlinkAddress, _set_HyperlinkAddress)
        def _get_HyperlinkSubAddress(self) -> hints.Incomplete: ...
        def _set_HyperlinkSubAddress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HyperlinkSubAddress = hints.normal_property(_get_HyperlinkSubAddress, _set_HyperlinkSubAddress)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Vertical(self) -> hints.Incomplete: ...
        def _set_Vertical(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Vertical = hints.normal_property(_get_Vertical, _set_Vertical)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_FontName(self) -> hints.Incomplete: ...
        def _set_FontName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontName = hints.normal_property(_get_FontName, _set_FontName)
        def _get_FontSize(self) -> hints.Incomplete: ...
        def _set_FontSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontSize = hints.normal_property(_get_FontSize, _set_FontSize)
        def _get_FontWeight(self) -> hints.Incomplete: ...
        def _set_FontWeight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontWeight = hints.normal_property(_get_FontWeight, _set_FontWeight)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_TextFontCharSet(self) -> hints.Incomplete: ...
        def _set_TextFontCharSet(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextFontCharSet = hints.normal_property(_get_TextFontCharSet, _set_TextFontCharSet)
        def _get_TextAlign(self) -> hints.Incomplete: ...
        def _set_TextAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TextAlign = hints.normal_property(_get_TextAlign, _set_TextAlign)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_NumeralShapes(self) -> hints.Incomplete: ...
        def _set_NumeralShapes(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NumeralShapes = hints.normal_property(_get_NumeralShapes, _set_NumeralShapes)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_LeftMargin(self) -> hints.Incomplete: ...
        def _set_LeftMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftMargin = hints.normal_property(_get_LeftMargin, _set_LeftMargin)
        def _get_TopMargin(self) -> hints.Incomplete: ...
        def _set_TopMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopMargin = hints.normal_property(_get_TopMargin, _set_TopMargin)
        def _get_LineSpacing(self) -> hints.Incomplete: ...
        def _set_LineSpacing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LineSpacing = hints.normal_property(_get_LineSpacing, _set_LineSpacing)
        def _get_RightMargin(self) -> hints.Incomplete: ...
        def _set_RightMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightMargin = hints.normal_property(_get_RightMargin, _set_RightMargin)
        def _get_BottomMargin(self) -> hints.Incomplete: ...
        def _set_BottomMargin(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomMargin = hints.normal_property(_get_BottomMargin, _set_BottomMargin)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_ForeThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_ForeThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeThemeColorIndex = hints.normal_property(_get_ForeThemeColorIndex, _set_ForeThemeColorIndex)
        def _get_ForeTint(self) -> hints.Incomplete: ...
        def _set_ForeTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeTint = hints.normal_property(_get_ForeTint, _set_ForeTint)
        def _get_ForeShade(self) -> hints.Incomplete: ...
        def _set_ForeShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ForeShade = hints.normal_property(_get_ForeShade, _set_ForeShade)
        def _get_ThemeFontIndex(self) -> hints.Incomplete: ...
        def _set_ThemeFontIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ThemeFontIndex = hints.normal_property(_get_ThemeFontIndex, _set_ThemeFontIndex)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)


class _LabelEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4341-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


class DispLabelEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E982-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


Label._com_interfaces_ = [_Label]
Label._outgoing_interfaces_ = [DispLabelEvents, _LabelEvents]

_Page._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(352), 'propget'],
        HRESULT,
        'PageIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(352), 'propput'],
        HRESULT,
        'PageIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD([dispid(2503)], HRESULT, 'SetTabOrder'),
]

################################################################
# code template for _Page implementation
# class _Page_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def SetTabOrder(self):
#         '-no docstring-'
#         #return 
#

DispLabelEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class Operations(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{CB2DF2B1-383D-4A3E-BBA1-B0E6D1CC48AC}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'Operation': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Entity._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2583), 'propget'],
        HRESULT,
        'Operations',
        (['out', 'retval'], POINTER(POINTER(Operations)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Entity implementation
# class Entity_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Operations(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _SectionInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4361-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def Format(self, FormatCount: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Print(self, PrintCount: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete]: ...
        def Retreat(self) -> hints.Hresult: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def Paint(self) -> hints.Hresult: ...


_SectionInReportEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Format',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FormatCount')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Print',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'PrintCount')
    ),
    COMMETHOD([], HRESULT, 'Retreat'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD([], HRESULT, 'Paint'),
]

################################################################
# code template for _SectionInReportEvents implementation
# class _SectionInReportEvents_Impl(object):
#     def Format(self):
#         '-no docstring-'
#         #return Cancel, FormatCount
#
#     def Print(self):
#         '-no docstring-'
#         #return Cancel, PrintCount
#
#     def Retreat(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def Paint(self):
#         '-no docstring-'
#         #return 
#


class TabControl(CoClass):
    _reg_clsid_ = GUID('{3B06E970-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispTabControlEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705281-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def KeyDown(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def KeyPress(self, KeyAscii: hints.Incomplete) -> hints.Incomplete: ...
        def KeyUp(self, KeyCode: hints.Incomplete, Shift: hints.Incomplete) -> hints.Incomplete: ...
        def Change(self) -> hints.Incomplete: ...


TabControl._com_interfaces_ = [_TabControl]
TabControl._outgoing_interfaces_ = [DispTabControlEvents, _TabControlEvents]

DispTabControlEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD([dispid(2077)], None, 'Change'),
]

Children._methods_ = [
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Children implementation
# class Children_Impl(object):
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _ControlInReportEvents(CoClass):
    _reg_clsid_ = GUID('{90B322A4-F1D9-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class __ControlInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{90B322A5-F1D9-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']


class _DispControlInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527D-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []


_ControlInReportEvents._com_interfaces_ = [_Control]
_ControlInReportEvents._outgoing_interfaces_ = [_DispControlInReportEvents, __ControlInReportEvents]

_LabelEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _LabelEvents implementation
# class _LabelEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#


class OptionGroup(CoClass):
    _reg_clsid_ = GUID('{3B06E955-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _OptionGroup(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E956-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_ControlSource(self) -> hints.Incomplete: ...
        def _set_ControlSource(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlSource = hints.normal_property(_get_ControlSource, _set_ControlSource)
        def _get_DefaultValue(self) -> hints.Incomplete: ...
        def _set_DefaultValue(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DefaultValue = hints.normal_property(_get_DefaultValue, _set_DefaultValue)
        def _get_ValidationRule(self) -> hints.Incomplete: ...
        def _set_ValidationRule(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationRule = hints.normal_property(_get_ValidationRule, _set_ValidationRule)
        def _get_ValidationText(self) -> hints.Incomplete: ...
        def _set_ValidationText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ValidationText = hints.normal_property(_get_ValidationText, _set_ValidationText)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Locked(self) -> hints.Incomplete: ...
        def _set_Locked(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Locked = hints.normal_property(_get_Locked, _set_Locked)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_HideDuplicates(self) -> hints.Incomplete: ...
        def _set_HideDuplicates(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HideDuplicates = hints.normal_property(_get_HideDuplicates, _set_HideDuplicates)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_ColumnWidth(self) -> hints.Incomplete: ...
        def _set_ColumnWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnWidth = hints.normal_property(_get_ColumnWidth, _set_ColumnWidth)
        def _get_ColumnOrder(self) -> hints.Incomplete: ...
        def _set_ColumnOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnOrder = hints.normal_property(_get_ColumnOrder, _set_ColumnOrder)
        def _get_ColumnHidden(self) -> hints.Incomplete: ...
        def _set_ColumnHidden(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ColumnHidden = hints.normal_property(_get_ColumnHidden, _set_ColumnHidden)
        def _get_AutoLabel(self) -> hints.Incomplete: ...
        def _set_AutoLabel(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoLabel = hints.normal_property(_get_AutoLabel, _set_AutoLabel)
        def _get_AddColon(self) -> hints.Incomplete: ...
        def _set_AddColon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AddColon = hints.normal_property(_get_AddColon, _set_AddColon)
        def _get_LabelX(self) -> hints.Incomplete: ...
        def _set_LabelX(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelX = hints.normal_property(_get_LabelX, _set_LabelX)
        def _get_LabelY(self) -> hints.Incomplete: ...
        def _set_LabelY(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelY = hints.normal_property(_get_LabelY, _set_LabelY)
        def _get_LabelAlign(self) -> hints.Incomplete: ...
        def _set_LabelAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LabelAlign = hints.normal_property(_get_LabelAlign, _set_LabelAlign)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_BeforeUpdate(self) -> hints.Incomplete: ...
        def _set_BeforeUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdate = hints.normal_property(_get_BeforeUpdate, _set_BeforeUpdate)
        def _get_AfterUpdate(self) -> hints.Incomplete: ...
        def _set_AfterUpdate(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdate = hints.normal_property(_get_AfterUpdate, _set_AfterUpdate)
        def _get_OnEnter(self) -> hints.Incomplete: ...
        def _set_OnEnter(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnter = hints.normal_property(_get_OnEnter, _set_OnEnter)
        def _get_OnExit(self) -> hints.Incomplete: ...
        def _set_OnExit(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExit = hints.normal_property(_get_OnExit, _set_OnExit)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_BeforeUpdateMacro(self) -> hints.Incomplete: ...
        def _set_BeforeUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BeforeUpdateMacro = hints.normal_property(_get_BeforeUpdateMacro, _set_BeforeUpdateMacro)
        def _get_AfterUpdateMacro(self) -> hints.Incomplete: ...
        def _set_AfterUpdateMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AfterUpdateMacro = hints.normal_property(_get_AfterUpdateMacro, _set_AfterUpdateMacro)
        def _get_OnEnterMacro(self) -> hints.Incomplete: ...
        def _set_OnEnterMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnEnterMacro = hints.normal_property(_get_OnEnterMacro, _set_OnEnterMacro)
        def _get_OnExitMacro(self) -> hints.Incomplete: ...
        def _set_OnExitMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnExitMacro = hints.normal_property(_get_OnExitMacro, _set_OnExitMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)


class _OptionGroupEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{BC9E4348-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Hresult: ...
        def Enter(self) -> hints.Hresult: ...
        def Exit(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Hresult: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Tuple[hints.Incomplete, hints.Incomplete, hints.Incomplete, hints.Incomplete]: ...


class DispOptionGroupEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705274-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def BeforeUpdate(self) -> hints.Incomplete: ...
        def AfterUpdate(self) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


OptionGroup._com_interfaces_ = [_OptionGroup]
OptionGroup._outgoing_interfaces_ = [DispOptionGroupEvents, _OptionGroupEvents]

_DispControlInReportEvents._disp_methods_ = [
]

_BoundObjectFrameEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _BoundObjectFrameEvents implementation
# class _BoundObjectFrameEvents_Impl(object):
#     def Updated(self):
#         '-no docstring-'
#         #return Code
#
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#


class NavigationControl(CoClass):
    _reg_clsid_ = GUID('{3B06E989-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _NavigationControl(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAccessible):
    _case_insensitive_ = True
    _iid_ = GUID('{3B06E990-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def Undo(self) -> hints.Hresult: ...
        def _get_OldValue(self) -> hints.Incomplete: ...
        OldValue = hints.normal_property(_get_OldValue)
        def _get_Properties(self) -> 'Properties': ...
        Properties = hints.normal_property(_get_Properties)
        def SizeToFit(self) -> hints.Hresult: ...
        def Requery(self) -> hints.Hresult: ...
        def Goto(self) -> hints.Hresult: ...
        def SetFocus(self) -> hints.Hresult: ...
        def _get_Controls(self) -> 'Children': ...
        Controls = hints.normal_property(_get_Controls)
        def _Evaluate(self, bstrExpr: hints.Incomplete, ppsa: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Hyperlink(self) -> '_Hyperlink': ...
        Hyperlink = hints.normal_property(_get_Hyperlink)
        def _get_FormatConditions(self) -> 'FormatConditions': ...
        FormatConditions = hints.normal_property(_get_FormatConditions)
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def _get_EventProcPrefix(self) -> hints.Incomplete: ...
        def _set_EventProcPrefix(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        EventProcPrefix = hints.normal_property(_get_EventProcPrefix, _set_EventProcPrefix)
        def _get__Name(self) -> hints.Incomplete: ...
        def _set__Name(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        _Name = hints.normal_property(_get__Name, _set__Name)
        def _get_ControlType(self) -> hints.Incomplete: ...
        def _set_ControlType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlType = hints.normal_property(_get_ControlType, _set_ControlType)
        def _get_StatusBarText(self) -> hints.Incomplete: ...
        def _set_StatusBarText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StatusBarText = hints.normal_property(_get_StatusBarText, _set_StatusBarText)
        def _get_Visible(self) -> hints.Incomplete: ...
        def _set_Visible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Visible = hints.normal_property(_get_Visible, _set_Visible)
        def _get_DisplayWhen(self) -> hints.Incomplete: ...
        def _set_DisplayWhen(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayWhen = hints.normal_property(_get_DisplayWhen, _set_DisplayWhen)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_FilterLookup(self) -> hints.Incomplete: ...
        def _set_FilterLookup(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FilterLookup = hints.normal_property(_get_FilterLookup, _set_FilterLookup)
        def _get_AutoTab(self) -> hints.Incomplete: ...
        def _set_AutoTab(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AutoTab = hints.normal_property(_get_AutoTab, _set_AutoTab)
        def _get_TabStop(self) -> hints.Incomplete: ...
        def _set_TabStop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabStop = hints.normal_property(_get_TabStop, _set_TabStop)
        def _get_TabIndex(self) -> hints.Incomplete: ...
        def _set_TabIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TabIndex = hints.normal_property(_get_TabIndex, _set_TabIndex)
        def _get_Left(self) -> hints.Incomplete: ...
        def _set_Left(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Left = hints.normal_property(_get_Left, _set_Left)
        def _get_Top(self) -> hints.Incomplete: ...
        def _set_Top(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Top = hints.normal_property(_get_Top, _set_Top)
        def _get_Width(self) -> hints.Incomplete: ...
        def _set_Width(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Width = hints.normal_property(_get_Width, _set_Width)
        def _get_Height(self) -> hints.Incomplete: ...
        def _set_Height(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Height = hints.normal_property(_get_Height, _set_Height)
        def _get_BackStyle(self) -> hints.Incomplete: ...
        def _set_BackStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackStyle = hints.normal_property(_get_BackStyle, _set_BackStyle)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_SpecialEffect(self) -> hints.Incomplete: ...
        def _set_SpecialEffect(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        SpecialEffect = hints.normal_property(_get_SpecialEffect, _set_SpecialEffect)
        def _get_BorderStyle(self) -> hints.Incomplete: ...
        def _set_BorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderStyle = hints.normal_property(_get_BorderStyle, _set_BorderStyle)
        def _get_OldBorderStyle(self) -> hints.Incomplete: ...
        def _set_OldBorderStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OldBorderStyle = hints.normal_property(_get_OldBorderStyle, _set_OldBorderStyle)
        def _get_BorderColor(self) -> hints.Incomplete: ...
        def _set_BorderColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderColor = hints.normal_property(_get_BorderColor, _set_BorderColor)
        def _get_BorderWidth(self) -> hints.Incomplete: ...
        def _set_BorderWidth(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderWidth = hints.normal_property(_get_BorderWidth, _set_BorderWidth)
        def _get_BorderLineStyle(self) -> hints.Incomplete: ...
        def _set_BorderLineStyle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderLineStyle = hints.normal_property(_get_BorderLineStyle, _set_BorderLineStyle)
        def _get_ShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_ShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ShortcutMenuBar = hints.normal_property(_get_ShortcutMenuBar, _set_ShortcutMenuBar)
        def _get_ControlTipText(self) -> hints.Incomplete: ...
        def _set_ControlTipText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlTipText = hints.normal_property(_get_ControlTipText, _set_ControlTipText)
        def _get_HelpContextId(self) -> hints.Incomplete: ...
        def _set_HelpContextId(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HelpContextId = hints.normal_property(_get_HelpContextId, _set_HelpContextId)
        def _get_Section(self) -> hints.Incomplete: ...
        def _set_Section(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Section = hints.normal_property(_get_Section, _set_Section)
        def _get_ControlName(self) -> hints.Incomplete: ...
        def _set_ControlName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ControlName = hints.normal_property(_get_ControlName, _set_ControlName)
        def _get_Tag(self) -> hints.Incomplete: ...
        def _set_Tag(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Tag = hints.normal_property(_get_Tag, _set_Tag)
        def _get_IsVisible(self) -> hints.Incomplete: ...
        def _set_IsVisible(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        IsVisible = hints.normal_property(_get_IsVisible, _set_IsVisible)
        def _get_InSelection(self) -> hints.Incomplete: ...
        def _set_InSelection(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        InSelection = hints.normal_property(_get_InSelection, _set_InSelection)
        def _get_OnGotFocus(self) -> hints.Incomplete: ...
        def _set_OnGotFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocus = hints.normal_property(_get_OnGotFocus, _set_OnGotFocus)
        def _get_OnLostFocus(self) -> hints.Incomplete: ...
        def _set_OnLostFocus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocus = hints.normal_property(_get_OnLostFocus, _set_OnLostFocus)
        def _get_OnClick(self) -> hints.Incomplete: ...
        def _set_OnClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClick = hints.normal_property(_get_OnClick, _set_OnClick)
        def _get_OnDblClick(self) -> hints.Incomplete: ...
        def _set_OnDblClick(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClick = hints.normal_property(_get_OnDblClick, _set_OnDblClick)
        def _get_OnMouseDown(self) -> hints.Incomplete: ...
        def _set_OnMouseDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDown = hints.normal_property(_get_OnMouseDown, _set_OnMouseDown)
        def _get_OnMouseMove(self) -> hints.Incomplete: ...
        def _set_OnMouseMove(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMove = hints.normal_property(_get_OnMouseMove, _set_OnMouseMove)
        def _get_OnMouseUp(self) -> hints.Incomplete: ...
        def _set_OnMouseUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUp = hints.normal_property(_get_OnMouseUp, _set_OnMouseUp)
        def _get_OnKeyDown(self) -> hints.Incomplete: ...
        def _set_OnKeyDown(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDown = hints.normal_property(_get_OnKeyDown, _set_OnKeyDown)
        def _get_OnKeyUp(self) -> hints.Incomplete: ...
        def _set_OnKeyUp(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUp = hints.normal_property(_get_OnKeyUp, _set_OnKeyUp)
        def _get_OnKeyPress(self) -> hints.Incomplete: ...
        def _set_OnKeyPress(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPress = hints.normal_property(_get_OnKeyPress, _set_OnKeyPress)
        def _get_ReadingOrder(self) -> hints.Incomplete: ...
        def _set_ReadingOrder(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReadingOrder = hints.normal_property(_get_ReadingOrder, _set_ReadingOrder)
        def _get_KeyboardLanguage(self) -> hints.Incomplete: ...
        def _set_KeyboardLanguage(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        KeyboardLanguage = hints.normal_property(_get_KeyboardLanguage, _set_KeyboardLanguage)
        def _get_AllowedText(self) -> hints.Incomplete: ...
        def _set_AllowedText(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowedText = hints.normal_property(_get_AllowedText, _set_AllowedText)
        def _get_ScrollBarAlign(self) -> hints.Incomplete: ...
        def _set_ScrollBarAlign(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ScrollBarAlign = hints.normal_property(_get_ScrollBarAlign, _set_ScrollBarAlign)
        def _get_NumeralShapes(self) -> hints.Incomplete: ...
        def _set_NumeralShapes(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NumeralShapes = hints.normal_property(_get_NumeralShapes, _set_NumeralShapes)
        def _get_Name(self) -> hints.Incomplete: ...
        def _set_Name(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        Name = hints.normal_property(_get_Name, _set_Name)
        def _get_LineSpacing(self) -> hints.Incomplete: ...
        def _set_LineSpacing(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LineSpacing = hints.normal_property(_get_LineSpacing, _set_LineSpacing)
        def Move(self, Left: hints.Incomplete, Top: hints.Incomplete = ..., Width: hints.Incomplete = ..., Height: hints.Incomplete = ...) -> hints.Hresult: ...
        def _get_SmartTags(self) -> '_SmartTags': ...
        SmartTags = hints.normal_property(_get_SmartTags)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_Layout(self) -> hints.Incomplete: ...
        Layout = hints.normal_property(_get_Layout)
        def _get_LeftPadding(self) -> hints.Incomplete: ...
        def _set_LeftPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LeftPadding = hints.normal_property(_get_LeftPadding, _set_LeftPadding)
        def _get_TopPadding(self) -> hints.Incomplete: ...
        def _set_TopPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        TopPadding = hints.normal_property(_get_TopPadding, _set_TopPadding)
        def _get_RightPadding(self) -> hints.Incomplete: ...
        def _set_RightPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        RightPadding = hints.normal_property(_get_RightPadding, _set_RightPadding)
        def _get_BottomPadding(self) -> hints.Incomplete: ...
        def _set_BottomPadding(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BottomPadding = hints.normal_property(_get_BottomPadding, _set_BottomPadding)
        def _get_GridlineStyleLeft(self) -> hints.Incomplete: ...
        def _set_GridlineStyleLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleLeft = hints.normal_property(_get_GridlineStyleLeft, _set_GridlineStyleLeft)
        def _get_GridlineStyleTop(self) -> hints.Incomplete: ...
        def _set_GridlineStyleTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleTop = hints.normal_property(_get_GridlineStyleTop, _set_GridlineStyleTop)
        def _get_GridlineStyleRight(self) -> hints.Incomplete: ...
        def _set_GridlineStyleRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleRight = hints.normal_property(_get_GridlineStyleRight, _set_GridlineStyleRight)
        def _get_GridlineStyleBottom(self) -> hints.Incomplete: ...
        def _set_GridlineStyleBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineStyleBottom = hints.normal_property(_get_GridlineStyleBottom, _set_GridlineStyleBottom)
        def _get_GridlineWidthLeft(self) -> hints.Incomplete: ...
        def _set_GridlineWidthLeft(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthLeft = hints.normal_property(_get_GridlineWidthLeft, _set_GridlineWidthLeft)
        def _get_GridlineWidthTop(self) -> hints.Incomplete: ...
        def _set_GridlineWidthTop(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthTop = hints.normal_property(_get_GridlineWidthTop, _set_GridlineWidthTop)
        def _get_GridlineWidthRight(self) -> hints.Incomplete: ...
        def _set_GridlineWidthRight(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthRight = hints.normal_property(_get_GridlineWidthRight, _set_GridlineWidthRight)
        def _get_GridlineWidthBottom(self) -> hints.Incomplete: ...
        def _set_GridlineWidthBottom(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineWidthBottom = hints.normal_property(_get_GridlineWidthBottom, _set_GridlineWidthBottom)
        def _get_GridlineColor(self) -> hints.Incomplete: ...
        def _set_GridlineColor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineColor = hints.normal_property(_get_GridlineColor, _set_GridlineColor)
        def _get_HorizontalAnchor(self) -> hints.Incomplete: ...
        def _set_HorizontalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        HorizontalAnchor = hints.normal_property(_get_HorizontalAnchor, _set_HorizontalAnchor)
        def _get_VerticalAnchor(self) -> hints.Incomplete: ...
        def _set_VerticalAnchor(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        VerticalAnchor = hints.normal_property(_get_VerticalAnchor, _set_VerticalAnchor)
        def _get_OnGotFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnGotFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnGotFocusMacro = hints.normal_property(_get_OnGotFocusMacro, _set_OnGotFocusMacro)
        def _get_OnLostFocusMacro(self) -> hints.Incomplete: ...
        def _set_OnLostFocusMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnLostFocusMacro = hints.normal_property(_get_OnLostFocusMacro, _set_OnLostFocusMacro)
        def _get_OnClickMacro(self) -> hints.Incomplete: ...
        def _set_OnClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnClickMacro = hints.normal_property(_get_OnClickMacro, _set_OnClickMacro)
        def _get_OnDblClickMacro(self) -> hints.Incomplete: ...
        def _set_OnDblClickMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnDblClickMacro = hints.normal_property(_get_OnDblClickMacro, _set_OnDblClickMacro)
        def _get_OnMouseDownMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseDownMacro = hints.normal_property(_get_OnMouseDownMacro, _set_OnMouseDownMacro)
        def _get_OnMouseMoveMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseMoveMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseMoveMacro = hints.normal_property(_get_OnMouseMoveMacro, _set_OnMouseMoveMacro)
        def _get_OnMouseUpMacro(self) -> hints.Incomplete: ...
        def _set_OnMouseUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnMouseUpMacro = hints.normal_property(_get_OnMouseUpMacro, _set_OnMouseUpMacro)
        def _get_OnKeyDownMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyDownMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyDownMacro = hints.normal_property(_get_OnKeyDownMacro, _set_OnKeyDownMacro)
        def _get_OnKeyUpMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyUpMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyUpMacro = hints.normal_property(_get_OnKeyUpMacro, _set_OnKeyUpMacro)
        def _get_OnKeyPressMacro(self) -> hints.Incomplete: ...
        def _set_OnKeyPressMacro(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        OnKeyPressMacro = hints.normal_property(_get_OnKeyPressMacro, _set_OnKeyPressMacro)
        def _get_LayoutID(self) -> hints.Incomplete: ...
        LayoutID = hints.normal_property(_get_LayoutID)
        def _get_Target(self) -> hints.Incomplete: ...
        def _set_Target(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Target = hints.normal_property(_get_Target, _set_Target)
        def _get_BackThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BackThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackThemeColorIndex = hints.normal_property(_get_BackThemeColorIndex, _set_BackThemeColorIndex)
        def _get_BackTint(self) -> hints.Incomplete: ...
        def _set_BackTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackTint = hints.normal_property(_get_BackTint, _set_BackTint)
        def _get_BackShade(self) -> hints.Incomplete: ...
        def _set_BackShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BackShade = hints.normal_property(_get_BackShade, _set_BackShade)
        def _get_BorderThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_BorderThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderThemeColorIndex = hints.normal_property(_get_BorderThemeColorIndex, _set_BorderThemeColorIndex)
        def _get_BorderTint(self) -> hints.Incomplete: ...
        def _set_BorderTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderTint = hints.normal_property(_get_BorderTint, _set_BorderTint)
        def _get_BorderShade(self) -> hints.Incomplete: ...
        def _set_BorderShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        BorderShade = hints.normal_property(_get_BorderShade, _set_BorderShade)
        def _get_GridlineThemeColorIndex(self) -> hints.Incomplete: ...
        def _set_GridlineThemeColorIndex(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineThemeColorIndex = hints.normal_property(_get_GridlineThemeColorIndex, _set_GridlineThemeColorIndex)
        def _get_GridlineTint(self) -> hints.Incomplete: ...
        def _set_GridlineTint(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineTint = hints.normal_property(_get_GridlineTint, _set_GridlineTint)
        def _get_GridlineShade(self) -> hints.Incomplete: ...
        def _set_GridlineShade(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        GridlineShade = hints.normal_property(_get_GridlineShade, _set_GridlineShade)
        def _get_SubForm(self) -> hints.Incomplete: ...
        def _set_SubForm(self, pbstrName: hints.Incomplete) -> hints.Hresult: ...
        SubForm = hints.normal_property(_get_SubForm, _set_SubForm)
        def _get_Tabs(self) -> 'Children': ...
        Tabs = hints.normal_property(_get_Tabs)
        def _get_SelectedTab(self) -> hints.Annotated['_NavigationButton', hints.FirstComItfOf['NavigationButton']]: ...
        SelectedTab = hints.normal_property(_get_SelectedTab)
        def _get_Span(self) -> hints.Incomplete: ...
        def _set_Span(self, pNavigationSpan: hints.Incomplete) -> hints.Hresult: ...
        Span = hints.normal_property(_get_Span, _set_Span)


NavigationControl._com_interfaces_ = [_NavigationControl]
NavigationControl._outgoing_interfaces_ = [DispNavigationControlEvents]


class SmartTagAction(CoClass):
    _reg_clsid_ = GUID('{0D944D89-82BC-43DE-9659-699DD3FBCD72}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


SmartTagAction._com_interfaces_ = [_SmartTagAction]


class Operation(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{96EFA5B6-F286-4590-96B5-F944707646A1}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_WSParameters(self) -> 'WSParameters': ...
        WSParameters = hints.normal_property(_get_WSParameters)
        def Execute(self, bstrParameters: hints.Incomplete = ...) -> hints.Incomplete: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Operations._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Operation)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Operations implementation
# class Operations_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_OptionButton._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propget'],
        HRESULT,
        'OptionValue',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(58), 'propput'],
        HRESULT,
        'OptionValue',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propget'],
        HRESULT,
        'TripleState',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(294), 'propput'],
        HRESULT,
        'TripleState',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _OptionButton implementation
# class _OptionButton_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OptionValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TripleState = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#

_Label._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propget'],
        HRESULT,
        'HyperlinkAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propput'],
        HRESULT,
        'HyperlinkAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propget'],
        HRESULT,
        'HyperlinkSubAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propput'],
        HRESULT,
        'HyperlinkSubAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(355), 'propget'],
        HRESULT,
        'Vertical',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(355), 'propput'],
        HRESULT,
        'Vertical',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propget'],
        HRESULT,
        'TextAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(136), 'propput'],
        HRESULT,
        'TextAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propget'],
        HRESULT,
        'NumeralShapes',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propput'],
        HRESULT,
        'NumeralShapes',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(384), 'propget'],
        HRESULT,
        'LeftMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(384), 'propput'],
        HRESULT,
        'LeftMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propget'],
        HRESULT,
        'TopMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(385), 'propput'],
        HRESULT,
        'TopMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(386), 'propget'],
        HRESULT,
        'LineSpacing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(386), 'propput'],
        HRESULT,
        'LineSpacing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propget'],
        HRESULT,
        'RightMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(388), 'propput'],
        HRESULT,
        'RightMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propget'],
        HRESULT,
        'BottomMargin',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(389), 'propput'],
        HRESULT,
        'BottomMargin',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Label implementation
# class _Label_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkSubAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Vertical = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NumeralShapes = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LineSpacing = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightMargin = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomMargin = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#

DispOptionGroupEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class _ChartValues(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B713598D-18BF-4368-B84D-432EED96A8C3}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_AggregateType(self) -> hints.Incomplete: ...
        def _set_AggregateType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AggregateType = hints.normal_property(_get_AggregateType, _set_AggregateType)



_ChartValues._methods_ = [
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2658), 'propget'],
        HRESULT,
        'AggregateType',
        (['out', 'retval'], POINTER(AcAggregateType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2658), 'propput'],
        HRESULT,
        'AggregateType',
        (['in'], AcAggregateType, 'pRet')
    ),
]

################################################################
# code template for _ChartValues implementation
# class _ChartValues_Impl(object):
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrResult
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AggregateType = property(_get, _set, doc = _set.__doc__)
#


class SmartTagActions(CoClass):
    _reg_clsid_ = GUID('{AA533187-6399-4E6C-B6EC-6FC999E1C855}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


SmartTagActions._com_interfaces_ = [_SmartTagActions]


class _ChildLabel(CoClass):
    _reg_clsid_ = GUID('{BC9E4359-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispChildLabelEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E705270-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []


_ChildLabel._com_interfaces_ = [_Label]
_ChildLabel._outgoing_interfaces_ = [DispChildLabelEvents, _ChildLabelEvents]


class ChartValues(CoClass):
    _reg_clsid_ = GUID('{47F87268-B60C-4C6D-8C71-230D96996A69}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


ChartValues._com_interfaces_ = [_ChartValues]

_RectangleEvents._methods_ = [
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _RectangleEvents implementation
# class _RectangleEvents_Impl(object):
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#

_NavigationControl._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2203), 'propget'],
        HRESULT,
        'FormatConditions',
        (['out', 'retval'], POINTER(POINTER(FormatConditions)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(305), 'propget'],
        HRESULT,
        'FilterLookup',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(305), 'propput'],
        HRESULT,
        'FilterLookup',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(73), 'propget'],
        HRESULT,
        'AutoTab',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(73), 'propput'],
        HRESULT,
        'AutoTab',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propget'],
        HRESULT,
        'KeyboardLanguage',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(368), 'propput'],
        HRESULT,
        'KeyboardLanguage',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propget'],
        HRESULT,
        'AllowedText',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(369), 'hidden', 'propput'],
        HRESULT,
        'AllowedText',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propget'],
        HRESULT,
        'ScrollBarAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(371), 'propput'],
        HRESULT,
        'ScrollBarAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propget'],
        HRESULT,
        'NumeralShapes',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(372), 'propput'],
        HRESULT,
        'NumeralShapes',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(386), 'propget'],
        HRESULT,
        'LineSpacing',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(386), 'propput'],
        HRESULT,
        'LineSpacing',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2445), 'propget'],
        HRESULT,
        'SmartTags',
        (['out', 'retval'], POINTER(POINTER(_SmartTags)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(639), 'propget'],
        HRESULT,
        'SubForm',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(639), 'propput'],
        HRESULT,
        'SubForm',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(680), 'propget'],
        HRESULT,
        'Tabs',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(681), 'propget'],
        HRESULT,
        'SelectedTab',
        (['out', 'retval'], POINTER(POINTER(NavigationButton)), 'pRet')
    ),
    COMMETHOD(
        [dispid(645), 'propget'],
        HRESULT,
        'Span',
        (['out', 'retval'], POINTER(AcNavigationSpan), 'pNavigationSpan')
    ),
    COMMETHOD(
        [dispid(645), 'propput'],
        HRESULT,
        'Span',
        (['in'], AcNavigationSpan, 'pNavigationSpan')
    ),
]

################################################################
# code template for _NavigationControl implementation
# class _NavigationControl_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def FormatConditions(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterLookup = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoTab = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     KeyboardLanguage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowedText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScrollBarAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NumeralShapes = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LineSpacing = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     @property
#     def SmartTags(self):
#         '-no docstring-'
#         #return ppRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     SubForm = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Tabs(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def SelectedTab(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pNavigationSpan
#     def _set(self, pNavigationSpan):
#         '-no docstring-'
#     Span = property(_get, _set, doc = _set.__doc__)
#


class ChartAxisCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{1657FD90-05DB-4B82-BA9C-ED9CDFC8A676}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_ChartAxis': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ChartAxisCollection._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_ChartAxis)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for ChartAxisCollection implementation
# class ChartAxisCollection_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

DispChildLabelEvents._disp_methods_ = [
]

_Rectangle._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _Rectangle implementation
# class _Rectangle_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#


class WSParameters(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{540FC6D0-9BCA-4236-B6C0-E5598CB7A332}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> 'WSParameter': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Operation._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2585), 'propget'],
        HRESULT,
        'WSParameters',
        (['out', 'retval'], POINTER(POINTER(WSParameters)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2584)],
        HRESULT,
        'Execute',
        (['in', 'optional'], BSTR, 'bstrParameters'),
        (['out', 'retval'], POINTER(VARIANT), 'pVarResult')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Operation implementation
# class Operation_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def WSParameters(self):
#         '-no docstring-'
#         #return pRet
#
#     def Execute(self, bstrParameters):
#         '-no docstring-'
#         #return pVarResult
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

DispRectangleEvents._disp_methods_ = [
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class FormatCondition(CoClass):
    _reg_clsid_ = GUID('{E27A992D-A330-11D0-81DD-00C04FC2F51B}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _FormatCondition(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{E27A992C-A330-11D0-81DD-00C04FC2F51B}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_ForeColor(self) -> hints.Incomplete: ...
        def _set_ForeColor(self, plResult: hints.Incomplete) -> hints.Hresult: ...
        ForeColor = hints.normal_property(_get_ForeColor, _set_ForeColor)
        def _get_BackColor(self) -> hints.Incomplete: ...
        def _set_BackColor(self, plResult: hints.Incomplete) -> hints.Hresult: ...
        BackColor = hints.normal_property(_get_BackColor, _set_BackColor)
        def _get_FontBold(self) -> hints.Incomplete: ...
        def _set_FontBold(self, pfResult: hints.Incomplete) -> hints.Hresult: ...
        FontBold = hints.normal_property(_get_FontBold, _set_FontBold)
        def _get_FontItalic(self) -> hints.Incomplete: ...
        def _set_FontItalic(self, pfResult: hints.Incomplete) -> hints.Hresult: ...
        FontItalic = hints.normal_property(_get_FontItalic, _set_FontItalic)
        def _get_FontUnderline(self) -> hints.Incomplete: ...
        def _set_FontUnderline(self, pfResult: hints.Incomplete) -> hints.Hresult: ...
        FontUnderline = hints.normal_property(_get_FontUnderline, _set_FontUnderline)
        def _get_Enabled(self) -> hints.Incomplete: ...
        def _set_Enabled(self, pfResult: hints.Incomplete) -> hints.Hresult: ...
        Enabled = hints.normal_property(_get_Enabled, _set_Enabled)
        def _get_Type(self) -> hints.Incomplete: ...
        Type = hints.normal_property(_get_Type)
        def _get_Operator(self) -> hints.Incomplete: ...
        Operator = hints.normal_property(_get_Operator)
        def _get_Expression1(self) -> hints.Incomplete: ...
        Expression1 = hints.normal_property(_get_Expression1)
        def _get_Expression2(self) -> hints.Incomplete: ...
        Expression2 = hints.normal_property(_get_Expression2)
        def Modify(self, Type: hints.Incomplete, Operator: hints.Incomplete = ..., Expression1: hints.Incomplete = ..., Expression2: hints.Incomplete = ...) -> hints.Hresult: ...
        def Delete(self) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...
        def _get_ShortestBarLimit(self) -> hints.Incomplete: ...
        def _set_ShortestBarLimit(self, pacfctResult: hints.Incomplete) -> hints.Hresult: ...
        ShortestBarLimit = hints.normal_property(_get_ShortestBarLimit, _set_ShortestBarLimit)
        def _get_ShortestBarValue(self) -> hints.Incomplete: ...
        def _set_ShortestBarValue(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        ShortestBarValue = hints.normal_property(_get_ShortestBarValue, _set_ShortestBarValue)
        def _get_LongestBarLimit(self) -> hints.Incomplete: ...
        def _set_LongestBarLimit(self, pacfctResult: hints.Incomplete) -> hints.Hresult: ...
        LongestBarLimit = hints.normal_property(_get_LongestBarLimit, _set_LongestBarLimit)
        def _get_LongestBarValue(self) -> hints.Incomplete: ...
        def _set_LongestBarValue(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        LongestBarValue = hints.normal_property(_get_LongestBarValue, _set_LongestBarValue)
        def _get_ShowBarOnly(self) -> hints.Incomplete: ...
        def _set_ShowBarOnly(self, pbstrResult: hints.Incomplete) -> hints.Hresult: ...
        ShowBarOnly = hints.normal_property(_get_ShowBarOnly, _set_ShowBarOnly)


FormatCondition._com_interfaces_ = [_FormatCondition]

_NavigationButton._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2181), 'propget'],
        HRESULT,
        'Hyperlink',
        (['out', 'retval'], POINTER(POINTER(_Hyperlink)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(46), 'propget'],
        HRESULT,
        'Transparent',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(46), 'propput'],
        HRESULT,
        'Transparent',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(5), 'propget'],
        HRESULT,
        'AutoRepeat',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(5), 'propput'],
        HRESULT,
        'AutoRepeat',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(155), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnPush',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(155), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnPush',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propget'],
        HRESULT,
        'HyperlinkAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(343), 'propput'],
        HRESULT,
        'HyperlinkAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propget'],
        HRESULT,
        'HyperlinkSubAddress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(347), 'propput'],
        HRESULT,
        'HyperlinkSubAddress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propget'],
        HRESULT,
        'FontWeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(37), 'propput'],
        HRESULT,
        'FontWeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propget'],
        HRESULT,
        'TextFontCharSet',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(193), 'hidden', 'propput'],
        HRESULT,
        'TextFontCharSet',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propget'],
        HRESULT,
        'ReadingOrder',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(367), 'nonbrowsable', 'propput'],
        HRESULT,
        'ReadingOrder',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(584), 'propget'],
        HRESULT,
        'CursorOnHover',
        (['out', 'retval'], POINTER(AcCursorOnHover), 'pRet')
    ),
    COMMETHOD(
        [dispid(584), 'propput'],
        HRESULT,
        'CursorOnHover',
        (['in'], AcCursorOnHover, 'pRet')
    ),
    COMMETHOD(
        [dispid(593), 'propget'],
        HRESULT,
        'PictureCaptionArrangement',
        (['out', 'retval'], POINTER(AcPictureCaptionArrangement), 'pRet')
    ),
    COMMETHOD(
        [dispid(593), 'propput'],
        HRESULT,
        'PictureCaptionArrangement',
        (['in'], AcPictureCaptionArrangement, 'pRet')
    ),
    COMMETHOD(
        [dispid(594), 'propget'],
        HRESULT,
        'Alignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(594), 'propput'],
        HRESULT,
        'Alignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propget'],
        HRESULT,
        'Target',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(634), 'hidden', 'propput'],
        HRESULT,
        'Target',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propget'],
        HRESULT,
        'ForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(622), 'propput'],
        HRESULT,
        'ForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propget'],
        HRESULT,
        'ForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(623), 'propput'],
        HRESULT,
        'ForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propget'],
        HRESULT,
        'ForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(624), 'propput'],
        HRESULT,
        'ForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propget'],
        HRESULT,
        'ThemeFontIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(615), 'propput'],
        HRESULT,
        'ThemeFontIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(642), 'propget'],
        HRESULT,
        'NavigationTargetName',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(642), 'propput'],
        HRESULT,
        'NavigationTargetName',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(647), 'propget'],
        HRESULT,
        'NavigationWhereClause',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(647), 'propput'],
        HRESULT,
        'NavigationWhereClause',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(682), 'propget'],
        HRESULT,
        'ParentTab',
        (['out', 'retval'], POINTER(POINTER(NavigationButton)), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propget'],
        HRESULT,
        'HoverColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(652), 'propput'],
        HRESULT,
        'HoverColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propget'],
        HRESULT,
        'HoverThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(653), 'propput'],
        HRESULT,
        'HoverThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propget'],
        HRESULT,
        'HoverTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(654), 'propput'],
        HRESULT,
        'HoverTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propget'],
        HRESULT,
        'HoverShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(655), 'propput'],
        HRESULT,
        'HoverShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propget'],
        HRESULT,
        'HoverForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(660), 'propput'],
        HRESULT,
        'HoverForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propget'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(661), 'propput'],
        HRESULT,
        'HoverForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propget'],
        HRESULT,
        'HoverForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(662), 'propput'],
        HRESULT,
        'HoverForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propget'],
        HRESULT,
        'HoverForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(663), 'propput'],
        HRESULT,
        'HoverForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propget'],
        HRESULT,
        'PressedColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(656), 'propput'],
        HRESULT,
        'PressedColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propget'],
        HRESULT,
        'PressedThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(657), 'propput'],
        HRESULT,
        'PressedThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propget'],
        HRESULT,
        'PressedTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(658), 'propput'],
        HRESULT,
        'PressedTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propget'],
        HRESULT,
        'PressedShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(659), 'propput'],
        HRESULT,
        'PressedShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propget'],
        HRESULT,
        'PressedForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(664), 'propput'],
        HRESULT,
        'PressedForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propget'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(665), 'propput'],
        HRESULT,
        'PressedForeThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propget'],
        HRESULT,
        'PressedForeTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(666), 'propput'],
        HRESULT,
        'PressedForeTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propget'],
        HRESULT,
        'PressedForeShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(667), 'propput'],
        HRESULT,
        'PressedForeShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(649), 'propput'],
        HRESULT,
        'Shape',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propget'],
        HRESULT,
        'Bevel',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(650), 'propput'],
        HRESULT,
        'Bevel',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propget'],
        HRESULT,
        'Glow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(651), 'propput'],
        HRESULT,
        'Glow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propget'],
        HRESULT,
        'Shadow',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(668), 'propput'],
        HRESULT,
        'Shadow',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propget'],
        HRESULT,
        'SoftEdges',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(669), 'propput'],
        HRESULT,
        'SoftEdges',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propget'],
        HRESULT,
        'QuickStyle',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(689), 'propput'],
        HRESULT,
        'QuickStyle',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propget'],
        HRESULT,
        'QuickStyleMask',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(690), 'propput'],
        HRESULT,
        'QuickStyleMask',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propget'],
        HRESULT,
        'Gradient',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(692), 'propput'],
        HRESULT,
        'Gradient',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
]

################################################################
# code template for _NavigationButton implementation
# class _NavigationButton_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Hyperlink(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Transparent = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoRepeat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPush = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HyperlinkSubAddress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Left(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Top(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontWeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TextFontCharSet = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReadingOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CursorOnHover = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureCaptionArrangement = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Alignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Target = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ThemeFontIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     NavigationTargetName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     NavigationWhereClause = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ParentTab(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HoverForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PressedForeShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shape = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Bevel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Glow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Shadow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SoftEdges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     QuickStyleMask = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Gradient = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#


class WSParameter(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{4A99C8DB-1308-448B-9EE9-AA6A9AC050E7}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Name(self) -> hints.Incomplete: ...
        Name = hints.normal_property(_get_Name)
        def _get_Type(self) -> hints.Incomplete: ...
        Type = hints.normal_property(_get_Type)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


WSParameters._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(WSParameter)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for WSParameters implementation
# class WSParameters_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

FormatConditions._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_FormatCondition)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191)],
        HRESULT,
        'Add',
        (['in'], AcFormatConditionType, 'Type'),
        (['in', 'optional'], AcFormatConditionOperator, 'Operator', 0),
        (['in', 'optional'], VARIANT, 'Expression1'),
        (['in', 'optional'], VARIANT, 'Expression2'),
        (['out', 'retval'], POINTER(POINTER(_FormatCondition)), 'pRet')
    ),
    COMMETHOD([dispid(2063)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for FormatConditions implementation
# class FormatConditions_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Type, Operator, Expression1, Expression2):
#         '-no docstring-'
#         #return pRet
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_BoundObjectFrame._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2104), 'propget'],
        HRESULT,
        'Object',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2105), 'propget'],
        HRESULT,
        'ObjectVerbs',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propget'],
        HRESULT,
        'SizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(89), 'propput'],
        HRESULT,
        'SizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propget'],
        HRESULT,
        'Class',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(274), 'propput'],
        HRESULT,
        'Class',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(133), 'propget'],
        HRESULT,
        'SourceDoc',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(133), 'propput'],
        HRESULT,
        'SourceDoc',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(48), 'propget'],
        HRESULT,
        'SourceItem',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(48), 'propput'],
        HRESULT,
        'SourceItem',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(101), 'propget'],
        HRESULT,
        'AutoActivate',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(101), 'propput'],
        HRESULT,
        'AutoActivate',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(272), 'propget'],
        HRESULT,
        'DisplayType',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(272), 'propput'],
        HRESULT,
        'DisplayType',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(103), 'propget'],
        HRESULT,
        'UpdateOptions',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(103), 'propput'],
        HRESULT,
        'UpdateOptions',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propget'],
        HRESULT,
        'Verb',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(102), 'propput'],
        HRESULT,
        'Verb',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(275), 'propget'],
        HRESULT,
        'OLETypeAllowed',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(275), 'propput'],
        HRESULT,
        'OLETypeAllowed',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propget'],
        HRESULT,
        'ObjectPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(99), 'nonbrowsable', 'propput'],
        HRESULT,
        'ObjectPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propget'],
        HRESULT,
        'LpOleObject',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(172), 'hidden', 'propput'],
        HRESULT,
        'LpOleObject',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propget'],
        HRESULT,
        'ObjectVerbsCount',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(173), 'propput'],
        HRESULT,
        'ObjectVerbsCount',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(273), 'propget'],
        HRESULT,
        'Action',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(273), 'propput'],
        HRESULT,
        'Action',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(88), 'propget'],
        HRESULT,
        'Scaling',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(88), 'propput'],
        HRESULT,
        'Scaling',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(276), 'propget'],
        HRESULT,
        'OLEType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(276), 'propput'],
        HRESULT,
        'OLEType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propget'],
        HRESULT,
        'OnUpdated',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(118), 'propput'],
        HRESULT,
        'OnUpdated',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propget'],
        HRESULT,
        'OnUpdatedMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(504), 'hidden', 'propput'],
        HRESULT,
        'OnUpdatedMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propget'],
        HRESULT,
        'VarOleObject',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(713), 'propput'],
        HRESULT,
        'VarOleObject',
        (['in'], VARIANT, 'pRet')
    ),
]

################################################################
# code template for _BoundObjectFrame implementation
# class _BoundObjectFrame_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Object(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ObjectVerbs(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Class = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceDoc = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SourceItem = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UpdateOptions = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Verb = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLETypeAllowed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LpOleObject = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ObjectVerbsCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Action = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Scaling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OLEType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdated = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnUpdatedMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VarOleObject = property(_get, _set, doc = _set.__doc__)
#

WSParameter._methods_ = [
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2095), 'propget'],
        HRESULT,
        'Type',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for WSParameter implementation
# class WSParameter_Impl(object):
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pbstrName
#
#     @property
#     def Type(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class Reports(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{D1523700-6128-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Reports._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Reports implementation
# class Reports_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _AccessField(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{B1C1EAC1-486F-11CE-A65D-00AA003F0F07}')
    _idlflags_ = ['hidden', 'dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Value(self) -> hints.Incomplete: ...
        def _set_Value(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Value = hints.normal_property(_get_Value, _set_Value)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


_AccessField._methods_ = [
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _AccessField implementation
# class _AccessField_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class ObjectFrame(CoClass):
    _reg_clsid_ = GUID('{3B06E95D-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class DispObjectFrameEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70526D-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Updated(self, Code: hints.Incomplete) -> hints.Incomplete: ...
        def Enter(self) -> hints.Incomplete: ...
        def Exit(self) -> hints.Incomplete: ...
        def GotFocus(self) -> hints.Incomplete: ...
        def LostFocus(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...


ObjectFrame._com_interfaces_ = [_ObjectFrame]
ObjectFrame._outgoing_interfaces_ = [DispObjectFrameEvents, _ObjectFrameEvents]

_PageBreakEvents._methods_ = [
]

################################################################
# code template for _PageBreakEvents implementation
# class _PageBreakEvents_Impl(object):

DispIvyChartEvents._disp_methods_ = [
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]


class AccessField(CoClass):
    _reg_clsid_ = GUID('{044E54C5-B19B-11CE-A689-00AA003F0F07}')
    _idlflags_ = ['hidden', 'control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


AccessField._com_interfaces_ = [_AccessField]

DispObjectFrameEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2076)],
        None,
        'Updated',
        (['in', 'out'], POINTER(c_short), 'Code')
    ),
    DISPMETHOD([dispid(2019)], None, 'Enter'),
    DISPMETHOD(
        [dispid(2075)],
        None,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]


class ChartValuesCollection(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{11D6CD3F-7A25-47DF-A859-C1DC8CBF2620}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> '_ChartValues': ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


ChartValuesCollection._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(_ChartValues)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2001), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for ChartValuesCollection implementation
# class ChartValuesCollection_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#


class _CheckBoxInOption(CoClass):
    _reg_clsid_ = GUID('{BC9E435C-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


_CheckBoxInOption._com_interfaces_ = [_Checkbox]
_CheckBoxInOption._outgoing_interfaces_ = [DispCheckBoxEvents, _CheckBoxInOptionEvents]

_OptionGroupEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _OptionGroupEvents implementation
# class _OptionGroupEvents_Impl(object):
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#


class Screen(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{DC6B66C0-6128-101B-AF4E-00AA003F0F07}')
    _idlflags_ = ['dual', 'nonextensible', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_ActiveDatasheet(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        ActiveDatasheet = hints.normal_property(_get_ActiveDatasheet)
        def _get_ActiveControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        ActiveControl = hints.normal_property(_get_ActiveControl)
        def _get_PreviousControl(self) -> hints.Annotated['_Control', hints.FirstComItfOf['Control']]: ...
        PreviousControl = hints.normal_property(_get_PreviousControl)
        def _get_ActiveForm(self) -> hints.Annotated['_Form3', hints.FirstComItfOf['Form']]: ...
        ActiveForm = hints.normal_property(_get_ActiveForm)
        def _get_ActiveReport(self) -> hints.Annotated['_Report3', hints.FirstComItfOf['Report']]: ...
        ActiveReport = hints.normal_property(_get_ActiveReport)
        def _get_MousePointer(self) -> hints.Incomplete: ...
        def _set_MousePointer(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MousePointer = hints.normal_property(_get_MousePointer, _set_MousePointer)
        def _get_ActiveDataAccessPage(self) -> hints.Annotated['_DataAccessPage', hints.FirstComItfOf['DataAccessPage']]: ...
        ActiveDataAccessPage = hints.normal_property(_get_ActiveDataAccessPage)
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


Screen._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2146), 'propget'],
        HRESULT,
        'ActiveDatasheet',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2007), 'propget'],
        HRESULT,
        'PreviousControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2008), 'propget'],
        HRESULT,
        'ActiveForm',
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2009), 'propget'],
        HRESULT,
        'ActiveReport',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2106), 'propget'],
        HRESULT,
        'MousePointer',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2106), 'propput'],
        HRESULT,
        'MousePointer',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(2214), 'hidden', 'propget'],
        HRESULT,
        'ActiveDataAccessPage',
        (['out', 'retval'], POINTER(POINTER(DataAccessPage)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for Screen implementation
# class Screen_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveDatasheet(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def PreviousControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveForm(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveReport(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MousePointer = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ActiveDataAccessPage(self):
#         '-no docstring-'
#         #return pRet
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_OptionGroup._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD([dispid(2144)], HRESULT, 'Undo'),
    COMMETHOD(
        [dispid(2102), 'propget'],
        HRESULT,
        'OldValue',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(2190), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Children)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Value',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propput'],
        HRESULT,
        'Value',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propget'],
        HRESULT,
        'ControlSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(27), 'propput'],
        HRESULT,
        'ControlSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propget'],
        HRESULT,
        'DefaultValue',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(23), 'propput'],
        HRESULT,
        'DefaultValue',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propget'],
        HRESULT,
        'ValidationRule',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(145), 'propput'],
        HRESULT,
        'ValidationRule',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propget'],
        HRESULT,
        'ValidationText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(61), 'propput'],
        HRESULT,
        'ValidationText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propget'],
        HRESULT,
        'Locked',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(56), 'propput'],
        HRESULT,
        'Locked',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propget'],
        HRESULT,
        'HideDuplicates',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(69), 'propput'],
        HRESULT,
        'HideDuplicates',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propget'],
        HRESULT,
        'ColumnWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(166), 'propput'],
        HRESULT,
        'ColumnWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propget'],
        HRESULT,
        'ColumnOrder',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(165), 'propput'],
        HRESULT,
        'ColumnOrder',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propget'],
        HRESULT,
        'ColumnHidden',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(167), 'propput'],
        HRESULT,
        'ColumnHidden',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propget'],
        HRESULT,
        'AutoLabel',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(57), 'propput'],
        HRESULT,
        'AutoLabel',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propget'],
        HRESULT,
        'AddColon',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(3), 'propput'],
        HRESULT,
        'AddColon',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propget'],
        HRESULT,
        'LabelX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(52), 'propput'],
        HRESULT,
        'LabelX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propget'],
        HRESULT,
        'LabelY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(53), 'propput'],
        HRESULT,
        'LabelY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propget'],
        HRESULT,
        'LabelAlign',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(51), 'propput'],
        HRESULT,
        'LabelAlign',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propget'],
        HRESULT,
        'BeforeUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(85), 'propput'],
        HRESULT,
        'BeforeUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propget'],
        HRESULT,
        'AfterUpdate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(86), 'propput'],
        HRESULT,
        'AfterUpdate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propget'],
        HRESULT,
        'BeforeUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(496), 'hidden', 'propput'],
        HRESULT,
        'BeforeUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propget'],
        HRESULT,
        'AfterUpdateMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(505), 'hidden', 'propput'],
        HRESULT,
        'AfterUpdateMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _OptionGroup implementation
# class _OptionGroup_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     def Undo(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def OldValue(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Value = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DefaultValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationRule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ValidationText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Locked = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HideDuplicates = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnOrder = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ColumnHidden = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoLabel = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AddColon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LabelAlign = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BeforeUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AfterUpdateMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#


class DispSectionInReportEvents(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{2E70527C-92D1-43CC-A57B-ED48BCCC711D}')
    _idlflags_ = ['hidden']
    _methods_ = []

    if TYPE_CHECKING:  # dispmembers
        def Format(self, FormatCount: hints.Incomplete) -> hints.Incomplete: ...
        def Print(self, PrintCount: hints.Incomplete) -> hints.Incomplete: ...
        def Retreat(self) -> hints.Incomplete: ...
        def Click(self) -> hints.Incomplete: ...
        def DblClick(self) -> hints.Incomplete: ...
        def MouseDown(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseMove(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def MouseUp(self, Button: hints.Incomplete, Shift: hints.Incomplete, X: hints.Incomplete, Y: hints.Incomplete) -> hints.Incomplete: ...
        def Paint(self) -> hints.Incomplete: ...


DispSectionInReportEvents._disp_methods_ = [
    DISPMETHOD(
        [dispid(2079)],
        None,
        'Format',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FormatCount')
    ),
    DISPMETHOD(
        [dispid(2080)],
        None,
        'Print',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'PrintCount')
    ),
    DISPMETHOD([dispid(2081)], None, 'Retreat'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD([dispid(2486)], None, 'Paint'),
]

_PageHdrFtrInReportEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'Format',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FormatCount')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Print',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'PrintCount')
    ),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
]

################################################################
# code template for _PageHdrFtrInReportEvents implementation
# class _PageHdrFtrInReportEvents_Impl(object):
#     def Format(self):
#         '-no docstring-'
#         #return Cancel, FormatCount
#
#     def Print(self):
#         '-no docstring-'
#         #return Cancel, PrintCount
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#


class _SectionInReport(CoClass):
    _reg_clsid_ = GUID('{BC9E4360-F037-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


_SectionInReport._com_interfaces_ = [_Section]
_SectionInReport._outgoing_interfaces_ = [DispSectionInReportEvents, _SectionInReportEvents]

_IvyChart._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD([dispid(2018)], HRESULT, 'Requery'),
    COMMETHOD([dispid(2023), 'hidden'], HRESULT, 'Goto'),
    COMMETHOD([dispid(2022)], HRESULT, 'SetFocus'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propget'],
        HRESULT,
        'RowSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(91), 'propput'],
        HRESULT,
        'RowSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propget'],
        HRESULT,
        'LinkChildFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(49), 'propput'],
        HRESULT,
        'LinkChildFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propget'],
        HRESULT,
        'LinkMasterFields',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(50), 'propput'],
        HRESULT,
        'LinkMasterFields',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propget'],
        HRESULT,
        'DisplayWhen',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(149), 'propput'],
        HRESULT,
        'DisplayWhen',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(25), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propget'],
        HRESULT,
        'StatusBarText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(135), 'propput'],
        HRESULT,
        'StatusBarText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propget'],
        HRESULT,
        'TabStop',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(262), 'propput'],
        HRESULT,
        'TabStop',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propget'],
        HRESULT,
        'TabIndex',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(261), 'propput'],
        HRESULT,
        'TabIndex',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propget'],
        HRESULT,
        'BackStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(29), 'propput'],
        HRESULT,
        'BackStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(28), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propget'],
        HRESULT,
        'SpecialEffect',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(4), 'propput'],
        HRESULT,
        'SpecialEffect',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propget'],
        HRESULT,
        'OldBorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(329), 'propput'],
        HRESULT,
        'OldBorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propget'],
        HRESULT,
        'BorderColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(8), 'propput'],
        HRESULT,
        'BorderColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propget'],
        HRESULT,
        'BorderWidth',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(10), 'propput'],
        HRESULT,
        'BorderWidth',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propget'],
        HRESULT,
        'BorderLineStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(11), 'hidden', 'propput'],
        HRESULT,
        'BorderLineStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propget'],
        HRESULT,
        'ControlTipText',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(317), 'propput'],
        HRESULT,
        'ControlTipText',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propget'],
        HRESULT,
        'OnEnter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(222), 'propput'],
        HRESULT,
        'OnEnter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propget'],
        HRESULT,
        'OnExit',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(223), 'propput'],
        HRESULT,
        'OnExit',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propget'],
        HRESULT,
        'OnGotFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(115), 'propput'],
        HRESULT,
        'OnGotFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propget'],
        HRESULT,
        'OnLostFocus',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(116), 'propput'],
        HRESULT,
        'OnLostFocus',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propget'],
        HRESULT,
        'OnClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(126), 'propput'],
        HRESULT,
        'OnClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propget'],
        HRESULT,
        'OnDblClick',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(224), 'propput'],
        HRESULT,
        'OnDblClick',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propget'],
        HRESULT,
        'OnMouseDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(107), 'propput'],
        HRESULT,
        'OnMouseDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propget'],
        HRESULT,
        'OnMouseMove',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(109), 'propput'],
        HRESULT,
        'OnMouseMove',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propget'],
        HRESULT,
        'OnMouseUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(108), 'propput'],
        HRESULT,
        'OnMouseUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propget'],
        HRESULT,
        'OnKeyDown',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(104), 'propput'],
        HRESULT,
        'OnKeyDown',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propget'],
        HRESULT,
        'OnKeyUp',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(105), 'propput'],
        HRESULT,
        'OnKeyUp',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propget'],
        HRESULT,
        'OnKeyPress',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(106), 'propput'],
        HRESULT,
        'OnKeyPress',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propget'],
        HRESULT,
        'OnEnterMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(497), 'hidden', 'propput'],
        HRESULT,
        'OnEnterMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propget'],
        HRESULT,
        'OnExitMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(498), 'hidden', 'propput'],
        HRESULT,
        'OnExitMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propget'],
        HRESULT,
        'OnGotFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(502), 'hidden', 'propput'],
        HRESULT,
        'OnGotFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propget'],
        HRESULT,
        'OnLostFocusMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(503), 'hidden', 'propput'],
        HRESULT,
        'OnLostFocusMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propget'],
        HRESULT,
        'OnClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(490), 'hidden', 'propput'],
        HRESULT,
        'OnClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propget'],
        HRESULT,
        'OnDblClickMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(491), 'hidden', 'propput'],
        HRESULT,
        'OnDblClickMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propget'],
        HRESULT,
        'OnMouseDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(487), 'hidden', 'propput'],
        HRESULT,
        'OnMouseDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propget'],
        HRESULT,
        'OnMouseMoveMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(489), 'hidden', 'propput'],
        HRESULT,
        'OnMouseMoveMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propget'],
        HRESULT,
        'OnMouseUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(488), 'hidden', 'propput'],
        HRESULT,
        'OnMouseUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propget'],
        HRESULT,
        'OnKeyDownMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(500), 'hidden', 'propput'],
        HRESULT,
        'OnKeyDownMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propget'],
        HRESULT,
        'OnKeyUpMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(501), 'hidden', 'propput'],
        HRESULT,
        'OnKeyUpMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propget'],
        HRESULT,
        'OnKeyPressMacro',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(499), 'hidden', 'propput'],
        HRESULT,
        'OnKeyPressMacro',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2460), 'propget'],
        HRESULT,
        'Layout',
        (['out', 'retval'], POINTER(AcLayoutType), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propget'],
        HRESULT,
        'LeftPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(454), 'propput'],
        HRESULT,
        'LeftPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propget'],
        HRESULT,
        'TopPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(455), 'propput'],
        HRESULT,
        'TopPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propget'],
        HRESULT,
        'RightPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(456), 'propput'],
        HRESULT,
        'RightPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propget'],
        HRESULT,
        'BottomPadding',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(457), 'propput'],
        HRESULT,
        'BottomPadding',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propget'],
        HRESULT,
        'GridlineStyleLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(458), 'propput'],
        HRESULT,
        'GridlineStyleLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propget'],
        HRESULT,
        'GridlineStyleTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(459), 'propput'],
        HRESULT,
        'GridlineStyleTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propget'],
        HRESULT,
        'GridlineStyleRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(460), 'propput'],
        HRESULT,
        'GridlineStyleRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propget'],
        HRESULT,
        'GridlineStyleBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(461), 'propput'],
        HRESULT,
        'GridlineStyleBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propget'],
        HRESULT,
        'GridlineWidthLeft',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(463), 'propput'],
        HRESULT,
        'GridlineWidthLeft',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propget'],
        HRESULT,
        'GridlineWidthTop',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(464), 'propput'],
        HRESULT,
        'GridlineWidthTop',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propget'],
        HRESULT,
        'GridlineWidthRight',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(465), 'propput'],
        HRESULT,
        'GridlineWidthRight',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propget'],
        HRESULT,
        'GridlineWidthBottom',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(466), 'propput'],
        HRESULT,
        'GridlineWidthBottom',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propget'],
        HRESULT,
        'GridlineColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(462), 'propput'],
        HRESULT,
        'GridlineColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propget'],
        HRESULT,
        'HorizontalAnchor',
        (['out', 'retval'], POINTER(AcHorizontalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(478), 'propput'],
        HRESULT,
        'HorizontalAnchor',
        (['in'], AcHorizontalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propget'],
        HRESULT,
        'VerticalAnchor',
        (['out', 'retval'], POINTER(AcVerticalAnchor), 'pRet')
    ),
    COMMETHOD(
        [dispid(477), 'propput'],
        HRESULT,
        'VerticalAnchor',
        (['in'], AcVerticalAnchor, 'pRet')
    ),
    COMMETHOD(
        [dispid(2492), 'propget'],
        HRESULT,
        'LayoutID',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propget'],
        HRESULT,
        'BackThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(616), 'propput'],
        HRESULT,
        'BackThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propget'],
        HRESULT,
        'BackTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(617), 'propput'],
        HRESULT,
        'BackTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propget'],
        HRESULT,
        'BackShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(618), 'propput'],
        HRESULT,
        'BackShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propget'],
        HRESULT,
        'BorderThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(619), 'propput'],
        HRESULT,
        'BorderThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propget'],
        HRESULT,
        'BorderTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(620), 'propput'],
        HRESULT,
        'BorderTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propget'],
        HRESULT,
        'BorderShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(621), 'propput'],
        HRESULT,
        'BorderShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propget'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(625), 'propput'],
        HRESULT,
        'GridlineThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propget'],
        HRESULT,
        'GridlineTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(626), 'propput'],
        HRESULT,
        'GridlineTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propget'],
        HRESULT,
        'GridlineShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(627), 'propput'],
        HRESULT,
        'GridlineShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(750), 'propget'],
        HRESULT,
        'ChartAxis',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(750), 'propput'],
        HRESULT,
        'ChartAxis',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(751), 'propget'],
        HRESULT,
        'ChartLegend',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(751), 'propput'],
        HRESULT,
        'ChartLegend',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(752), 'propget'],
        HRESULT,
        'ChartValues',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(752), 'propput'],
        HRESULT,
        'ChartValues',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(754), 'propget'],
        HRESULT,
        'HasLegend',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(754), 'propput'],
        HRESULT,
        'HasLegend',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(755), 'propget'],
        HRESULT,
        'HasTitle',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(755), 'propput'],
        HRESULT,
        'HasTitle',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(756), 'propget'],
        HRESULT,
        'ChartTitle',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(756), 'propput'],
        HRESULT,
        'ChartTitle',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(757), 'propget'],
        HRESULT,
        'HasAxisTitles',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(757), 'propput'],
        HRESULT,
        'HasAxisTitles',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(758), 'propget'],
        HRESULT,
        'CategoryAxisTitle',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(758), 'propput'],
        HRESULT,
        'CategoryAxisTitle',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(759), 'propget'],
        HRESULT,
        'PrimaryValuesAxisTitle',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(759), 'propput'],
        HRESULT,
        'PrimaryValuesAxisTitle',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(809), 'propget'],
        HRESULT,
        'SecondaryValuesAxisTitle',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(809), 'propput'],
        HRESULT,
        'SecondaryValuesAxisTitle',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(760), 'propget'],
        HRESULT,
        'TransformedRowSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(753), 'propget'],
        HRESULT,
        'ChartType',
        (['out', 'retval'], POINTER(AcChartType), 'pChartType')
    ),
    COMMETHOD(
        [dispid(753), 'propput'],
        HRESULT,
        'ChartType',
        (['in'], AcChartType, 'pChartType')
    ),
    COMMETHOD(
        [dispid(768), 'propget'],
        HRESULT,
        'LegendPosition',
        (['out', 'retval'], POINTER(AcLegendPosition), 'pLegendPosition')
    ),
    COMMETHOD(
        [dispid(768), 'propput'],
        HRESULT,
        'LegendPosition',
        (['in'], AcLegendPosition, 'pLegendPosition')
    ),
    COMMETHOD(
        [dispid(764), 'propget'],
        HRESULT,
        'PrimaryValuesAxisMinimum',
        (['out', 'retval'], POINTER(c_float), 'pMin')
    ),
    COMMETHOD(
        [dispid(764), 'propput'],
        HRESULT,
        'PrimaryValuesAxisMinimum',
        (['in'], c_float, 'pMin')
    ),
    COMMETHOD(
        [dispid(765), 'propget'],
        HRESULT,
        'PrimaryValuesAxisMaximum',
        (['out', 'retval'], POINTER(c_float), 'pMax')
    ),
    COMMETHOD(
        [dispid(765), 'propput'],
        HRESULT,
        'PrimaryValuesAxisMaximum',
        (['in'], c_float, 'pMax')
    ),
    COMMETHOD(
        [dispid(766), 'propget'],
        HRESULT,
        'SecondaryValuesAxisMinimum',
        (['out', 'retval'], POINTER(c_float), 'pMin')
    ),
    COMMETHOD(
        [dispid(766), 'propput'],
        HRESULT,
        'SecondaryValuesAxisMinimum',
        (['in'], c_float, 'pMin')
    ),
    COMMETHOD(
        [dispid(767), 'propget'],
        HRESULT,
        'SecondaryValuesAxisMaximum',
        (['out', 'retval'], POINTER(c_float), 'pMax')
    ),
    COMMETHOD(
        [dispid(767), 'propput'],
        HRESULT,
        'SecondaryValuesAxisMaximum',
        (['in'], c_float, 'pMax')
    ),
    COMMETHOD(
        [dispid(769), 'propget'],
        HRESULT,
        'PrimaryValuesAxisRange',
        (['out', 'retval'], POINTER(AcAxisRange), 'pPrimaryValueAxisRange')
    ),
    COMMETHOD(
        [dispid(769), 'propput'],
        HRESULT,
        'PrimaryValuesAxisRange',
        (['in'], AcAxisRange, 'pPrimaryValueAxisRange')
    ),
    COMMETHOD(
        [dispid(770), 'propget'],
        HRESULT,
        'SecondaryValuesAxisRange',
        (['out', 'retval'], POINTER(AcAxisRange), 'pSecondaryValueAxisRange')
    ),
    COMMETHOD(
        [dispid(770), 'propput'],
        HRESULT,
        'SecondaryValuesAxisRange',
        (['in'], AcAxisRange, 'pSecondaryValueAxisRange')
    ),
    COMMETHOD(
        [dispid(775), 'propget'],
        HRESULT,
        'PrimaryValuesAxisFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(775), 'propput'],
        HRESULT,
        'PrimaryValuesAxisFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(778), 'propget'],
        HRESULT,
        'PrimaryValuesAxisFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(778), 'propput'],
        HRESULT,
        'PrimaryValuesAxisFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(779), 'propget'],
        HRESULT,
        'PrimaryValuesAxisThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(779), 'propput'],
        HRESULT,
        'PrimaryValuesAxisThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(780), 'propget'],
        HRESULT,
        'PrimaryValuesAxisFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(780), 'propput'],
        HRESULT,
        'PrimaryValuesAxisFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(781), 'propget'],
        HRESULT,
        'PrimaryValuesAxisFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(781), 'propput'],
        HRESULT,
        'PrimaryValuesAxisFontShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(776), 'propget'],
        HRESULT,
        'SecondaryValuesAxisFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(776), 'propput'],
        HRESULT,
        'SecondaryValuesAxisFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(783), 'propget'],
        HRESULT,
        'SecondaryValuesAxisThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(783), 'propput'],
        HRESULT,
        'SecondaryValuesAxisThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(784), 'propget'],
        HRESULT,
        'SecondaryValuesAxisFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(784), 'propput'],
        HRESULT,
        'SecondaryValuesAxisFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(785), 'propget'],
        HRESULT,
        'SecondaryValuesAxisFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(785), 'propput'],
        HRESULT,
        'SecondaryValuesAxisFontShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(782), 'propget'],
        HRESULT,
        'SecondaryValuesAxisFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(782), 'propput'],
        HRESULT,
        'SecondaryValuesAxisFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(777), 'propget'],
        HRESULT,
        'CategoryAxisFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(777), 'propput'],
        HRESULT,
        'CategoryAxisFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(786), 'propget'],
        HRESULT,
        'CategoryAxisFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(786), 'propput'],
        HRESULT,
        'CategoryAxisFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(787), 'propget'],
        HRESULT,
        'CategoryAxisThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(787), 'propput'],
        HRESULT,
        'CategoryAxisThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(788), 'propget'],
        HRESULT,
        'CategoryAxisFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(788), 'propput'],
        HRESULT,
        'CategoryAxisFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(789), 'propget'],
        HRESULT,
        'CategoryAxisFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(789), 'propput'],
        HRESULT,
        'CategoryAxisFontShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(791), 'propget'],
        HRESULT,
        'ChartTitleFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(791), 'propput'],
        HRESULT,
        'ChartTitleFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(792), 'propget'],
        HRESULT,
        'ChartTitleThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(792), 'propput'],
        HRESULT,
        'ChartTitleThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(793), 'propget'],
        HRESULT,
        'ChartTitleFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(793), 'propput'],
        HRESULT,
        'ChartTitleFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(794), 'propget'],
        HRESULT,
        'ChartTitleFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(794), 'propput'],
        HRESULT,
        'ChartTitleFontShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(795), 'propget'],
        HRESULT,
        'ChartTitleFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(795), 'propput'],
        HRESULT,
        'ChartTitleFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(2649), 'propget'],
        HRESULT,
        'ChartSeriesCollection',
        (['out', 'retval'], POINTER(POINTER(ChartSeriesCollection)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2656), 'propget'],
        HRESULT,
        'ChartAxisCollection',
        (['out', 'retval'], POINTER(POINTER(ChartAxisCollection)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(2659), 'propget'],
        HRESULT,
        'ChartValuesCollection',
        (['out', 'retval'], POINTER(POINTER(ChartValuesCollection)), 'ppRet')
    ),
    COMMETHOD(
        [dispid(771), 'propget'],
        HRESULT,
        'PrimaryValuesAxisFormat',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(771), 'propput'],
        HRESULT,
        'PrimaryValuesAxisFormat',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(772), 'propget'],
        HRESULT,
        'SecondaryValuesAxisFormat',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(772), 'propput'],
        HRESULT,
        'SecondaryValuesAxisFormat',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(773), 'propget'],
        HRESULT,
        'PrimaryValuesAxisDisplayUnits',
        (
            ['out', 'retval'],
            POINTER(AcAxisUnits),
            'pPrimaryValueAxisDisplayUnits',
        )
    ),
    COMMETHOD(
        [dispid(773), 'propput'],
        HRESULT,
        'PrimaryValuesAxisDisplayUnits',
        (['in'], AcAxisUnits, 'pPrimaryValueAxisDisplayUnits')
    ),
    COMMETHOD(
        [dispid(774), 'propget'],
        HRESULT,
        'SecondaryValuesAxisDisplayUnits',
        (
            ['out', 'retval'],
            POINTER(AcAxisUnits),
            'pSecondaryValueAxisDisplayUnits',
        )
    ),
    COMMETHOD(
        [dispid(774), 'propput'],
        HRESULT,
        'SecondaryValuesAxisDisplayUnits',
        (['in'], AcAxisUnits, 'pSecondaryValueAxisDisplayUnits')
    ),
    COMMETHOD(
        [dispid(796), 'propget'],
        HRESULT,
        'ChartTitleFontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(796), 'propput'],
        HRESULT,
        'ChartTitleFontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(797), 'propget'],
        HRESULT,
        'LegendTextFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(797), 'propput'],
        HRESULT,
        'LegendTextFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(798), 'propget'],
        HRESULT,
        'LegendTextFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(798), 'propput'],
        HRESULT,
        'LegendTextFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(799), 'propget'],
        HRESULT,
        'LegendTextThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(799), 'propput'],
        HRESULT,
        'LegendTextThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(800), 'propget'],
        HRESULT,
        'LegendTextFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(800), 'propput'],
        HRESULT,
        'LegendTextFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(801), 'propget'],
        HRESULT,
        'LegendTextFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(801), 'propput'],
        HRESULT,
        'LegendTextFontShade',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(802), 'propget'],
        HRESULT,
        'HasSubtitle',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(802), 'propput'],
        HRESULT,
        'HasSubtitle',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(803), 'propget'],
        HRESULT,
        'ChartSubtitle',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(803), 'propput'],
        HRESULT,
        'ChartSubtitle',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(804), 'propget'],
        HRESULT,
        'ChartSubtitleFontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(804), 'propput'],
        HRESULT,
        'ChartSubtitleFontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(805), 'propget'],
        HRESULT,
        'ChartSubtitleFontColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(805), 'propput'],
        HRESULT,
        'ChartSubtitleFontColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(806), 'propget'],
        HRESULT,
        'ChartSubtitleThemeColorIndex',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(806), 'propput'],
        HRESULT,
        'ChartSubtitleThemeColorIndex',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(807), 'propget'],
        HRESULT,
        'ChartSubtitleFontTint',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(807), 'propput'],
        HRESULT,
        'ChartSubtitleFontTint',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(808), 'propget'],
        HRESULT,
        'ChartSubtitleFontShade',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(808), 'propput'],
        HRESULT,
        'ChartSubtitleFontShade',
        (['in'], c_float, 'pRet')
    ),
]

################################################################
# code template for _IvyChart implementation
# class _IvyChart_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def Requery(self):
#         '-no docstring-'
#         #return 
#
#     def Goto(self):
#         '-no docstring-'
#         #return 
#
#     def SetFocus(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RowSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkChildFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LinkMasterFields = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayWhen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StatusBarText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabStop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TabIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SpecialEffect = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OldBorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderLineStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlTipText = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClick = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMove = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDown = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPress = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnEnterMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnExitMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnGotFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnLostFocusMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDblClickMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseMoveMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMouseUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyDownMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyUpMacro = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnKeyPressMacro = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Layout(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LeftPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     TopPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RightPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BottomPadding = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineStyleBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthRight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineWidthBottom = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HorizontalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     VerticalAnchor = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def LayoutID(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BackShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridlineShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartAxis = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartLegend = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartValues = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasLegend = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasTitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasAxisTitles = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisTitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisTitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisTitle = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def TransformedRowSource(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pChartType
#     def _set(self, pChartType):
#         '-no docstring-'
#     ChartType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pLegendPosition
#     def _set(self, pLegendPosition):
#         '-no docstring-'
#     LegendPosition = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pMin
#     def _set(self, pMin):
#         '-no docstring-'
#     PrimaryValuesAxisMinimum = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pMax
#     def _set(self, pMax):
#         '-no docstring-'
#     PrimaryValuesAxisMaximum = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pMin
#     def _set(self, pMin):
#         '-no docstring-'
#     SecondaryValuesAxisMinimum = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pMax
#     def _set(self, pMax):
#         '-no docstring-'
#     SecondaryValuesAxisMaximum = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pPrimaryValueAxisRange
#     def _set(self, pPrimaryValueAxisRange):
#         '-no docstring-'
#     PrimaryValuesAxisRange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pSecondaryValueAxisRange
#     def _set(self, pSecondaryValueAxisRange):
#         '-no docstring-'
#     SecondaryValuesAxisRange = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisFontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisFontShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisFontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisFontShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisFontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CategoryAxisFontShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleFontShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleFontSize = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def ChartSeriesCollection(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def ChartAxisCollection(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def ChartValuesCollection(self):
#         '-no docstring-'
#         #return ppRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrimaryValuesAxisFormat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     SecondaryValuesAxisFormat = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pPrimaryValueAxisDisplayUnits
#     def _set(self, pPrimaryValueAxisDisplayUnits):
#         '-no docstring-'
#     PrimaryValuesAxisDisplayUnits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pSecondaryValueAxisDisplayUnits
#     def _set(self, pSecondaryValueAxisDisplayUnits):
#         '-no docstring-'
#     SecondaryValuesAxisDisplayUnits = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartTitleFontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LegendTextFontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LegendTextFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LegendTextThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LegendTextFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LegendTextFontShade = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasSubtitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitleFontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitleFontColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitleThemeColorIndex = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitleFontTint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ChartSubtitleFontShade = property(_get, _set, doc = _set.__doc__)
#

_ListBoxEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
]

################################################################
# code template for _ListBoxEvents implementation
# class _ListBoxEvents_Impl(object):
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#


class Hyperlink(CoClass):
    _reg_clsid_ = GUID('{50D56610-60AC-11CF-82C9-00AA004B9FE6}')
    _idlflags_ = []
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


Hyperlink._com_interfaces_ = [_Hyperlink]

_Report2._methods_ = [
    COMMETHOD(
        [dispid(39), 'hidden', 'propget'],
        HRESULT,
        'FormName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(39), 'hidden', 'propput'],
        HRESULT,
        'FormName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propget'],
        HRESULT,
        'RecordSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(156), 'propput'],
        HRESULT,
        'RecordSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propget'],
        HRESULT,
        'Filter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(245), 'propput'],
        HRESULT,
        'Filter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propget'],
        HRESULT,
        'FilterOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(332), 'propput'],
        HRESULT,
        'FilterOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propget'],
        HRESULT,
        'OrderBy',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(331), 'propput'],
        HRESULT,
        'OrderBy',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propget'],
        HRESULT,
        'OrderByOn',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(336), 'propput'],
        HRESULT,
        'OrderByOn',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propget'],
        HRESULT,
        'ServerFilter',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(246), 'propput'],
        HRESULT,
        'ServerFilter',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propget'],
        HRESULT,
        'Caption',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(17), 'propput'],
        HRESULT,
        'Caption',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propget'],
        HRESULT,
        'RecordLocks',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(26), 'propput'],
        HRESULT,
        'RecordLocks',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propget'],
        HRESULT,
        'PageHeader',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(43), 'propput'],
        HRESULT,
        'PageHeader',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propget'],
        HRESULT,
        'PageFooter',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(40), 'propput'],
        HRESULT,
        'PageFooter',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propget'],
        HRESULT,
        'DateGrouping',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(282), 'propput'],
        HRESULT,
        'DateGrouping',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propget'],
        HRESULT,
        'GrpKeepTogether',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(283), 'propput'],
        HRESULT,
        'GrpKeepTogether',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propget'],
        HRESULT,
        'MinButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(95), 'hidden', 'propput'],
        HRESULT,
        'MinButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propget'],
        HRESULT,
        'MaxButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(94), 'hidden', 'propput'],
        HRESULT,
        'MaxButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propget'],
        HRESULT,
        'Width',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(150), 'propput'],
        HRESULT,
        'Width',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propget'],
        HRESULT,
        'Picture',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(7), 'propput'],
        HRESULT,
        'Picture',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propget'],
        HRESULT,
        'PictureType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(341), 'propput'],
        HRESULT,
        'PictureType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propget'],
        HRESULT,
        'PictureSizeMode',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(312), 'propput'],
        HRESULT,
        'PictureSizeMode',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propget'],
        HRESULT,
        'PictureAlignment',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(309), 'propput'],
        HRESULT,
        'PictureAlignment',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propget'],
        HRESULT,
        'PictureTiling',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(313), 'propput'],
        HRESULT,
        'PictureTiling',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propget'],
        HRESULT,
        'PicturePages',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(310), 'propput'],
        HRESULT,
        'PicturePages',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(240), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propget'],
        HRESULT,
        'Toolbar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(353), 'propput'],
        HRESULT,
        'Toolbar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(304), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propget'],
        HRESULT,
        'GridX',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(41), 'propput'],
        HRESULT,
        'GridX',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propget'],
        HRESULT,
        'GridY',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(42), 'propput'],
        HRESULT,
        'GridY',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propget'],
        HRESULT,
        'LayoutForPrint',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(143), 'propput'],
        HRESULT,
        'LayoutForPrint',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propget'],
        HRESULT,
        'FastLaserPrinting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(144), 'propput'],
        HRESULT,
        'FastLaserPrinting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propget'],
        HRESULT,
        'HelpFile',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(218), 'propput'],
        HRESULT,
        'HelpFile',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propget'],
        HRESULT,
        'HelpContextId',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(219), 'propput'],
        HRESULT,
        'HelpContextId',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propget'],
        HRESULT,
        'Hwnd',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(192), 'propput'],
        HRESULT,
        'Hwnd',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(195), 'propput'],
        HRESULT,
        'Count',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propget'],
        HRESULT,
        'Page',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(196), 'propput'],
        HRESULT,
        'Page',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propget'],
        HRESULT,
        'Pages',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(197), 'propput'],
        HRESULT,
        'Pages',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageWidth',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(198), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageWidth',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propget'],
        HRESULT,
        'LogicalPageHeight',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(199), 'hidden', 'propput'],
        HRESULT,
        'LogicalPageHeight',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propget'],
        HRESULT,
        'ZoomControl',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(217), 'hidden', 'propput'],
        HRESULT,
        'ZoomControl',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propget'],
        HRESULT,
        'HasData',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(202), 'propput'],
        HRESULT,
        'HasData',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propget'],
        HRESULT,
        'Height',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(44), 'propput'],
        HRESULT,
        'Height',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propget'],
        HRESULT,
        'PrintSection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(225), 'propput'],
        HRESULT,
        'PrintSection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propget'],
        HRESULT,
        'NextRecord',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(226), 'propput'],
        HRESULT,
        'NextRecord',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propget'],
        HRESULT,
        'MoveLayout',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(227), 'propput'],
        HRESULT,
        'MoveLayout',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propget'],
        HRESULT,
        'FormatCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(228), 'propput'],
        HRESULT,
        'FormatCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propget'],
        HRESULT,
        'PrintCount',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(229), 'propput'],
        HRESULT,
        'PrintCount',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propget'],
        HRESULT,
        'Painting',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(241), 'propput'],
        HRESULT,
        'Painting',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtMip',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(189), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtMip',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevMode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(190), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevMode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propget'],
        HRESULT,
        'PrtDevNames',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(191), 'nonbrowsable', 'propput'],
        HRESULT,
        'PrtDevNames',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(204), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propget'],
        HRESULT,
        'CurrentX',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(205), 'propput'],
        HRESULT,
        'CurrentX',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propget'],
        HRESULT,
        'CurrentY',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(206), 'propput'],
        HRESULT,
        'CurrentY',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propget'],
        HRESULT,
        'ScaleHeight',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(207), 'propput'],
        HRESULT,
        'ScaleHeight',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propget'],
        HRESULT,
        'ScaleLeft',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(208), 'propput'],
        HRESULT,
        'ScaleLeft',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propget'],
        HRESULT,
        'ScaleMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(209), 'propput'],
        HRESULT,
        'ScaleMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propget'],
        HRESULT,
        'ScaleTop',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(210), 'propput'],
        HRESULT,
        'ScaleTop',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propget'],
        HRESULT,
        'ScaleWidth',
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(211), 'propput'],
        HRESULT,
        'ScaleWidth',
        (['in'], c_float, 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(32), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(33), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propget'],
        HRESULT,
        'FontName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(34), 'propput'],
        HRESULT,
        'FontName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propget'],
        HRESULT,
        'FontSize',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(35), 'propput'],
        HRESULT,
        'FontSize',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(36), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propget'],
        HRESULT,
        'DrawMode',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(212), 'propput'],
        HRESULT,
        'DrawMode',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propget'],
        HRESULT,
        'DrawStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(213), 'propput'],
        HRESULT,
        'DrawStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propget'],
        HRESULT,
        'DrawWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(214), 'propput'],
        HRESULT,
        'DrawWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propget'],
        HRESULT,
        'FillColor',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(216), 'propput'],
        HRESULT,
        'FillColor',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propget'],
        HRESULT,
        'FillStyle',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(215), 'propput'],
        HRESULT,
        'FillStyle',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propget'],
        HRESULT,
        'PaletteSource',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(98), 'propput'],
        HRESULT,
        'PaletteSource',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propget'],
        HRESULT,
        'PaintPalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(100), 'nonbrowsable', 'propput'],
        HRESULT,
        'PaintPalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propget'],
        HRESULT,
        'OnMenu',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(60), 'nonbrowsable', 'propput'],
        HRESULT,
        'OnMenu',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propget'],
        HRESULT,
        'OnOpen',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(77), 'propput'],
        HRESULT,
        'OnOpen',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propget'],
        HRESULT,
        'OnClose',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(78), 'propput'],
        HRESULT,
        'OnClose',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propget'],
        HRESULT,
        'OnActivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(112), 'propput'],
        HRESULT,
        'OnActivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propget'],
        HRESULT,
        'OnDeactivate',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(113), 'propput'],
        HRESULT,
        'OnDeactivate',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propget'],
        HRESULT,
        'OnNoData',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(121), 'propput'],
        HRESULT,
        'OnNoData',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propget'],
        HRESULT,
        'OnPage',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(83), 'propput'],
        HRESULT,
        'OnPage',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propget'],
        HRESULT,
        'OnError',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(119), 'propput'],
        HRESULT,
        'OnError',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propget'],
        HRESULT,
        'Dirty',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(286), 'propput'],
        HRESULT,
        'Dirty',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propget'],
        HRESULT,
        'CurrentRecord',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(302), 'propput'],
        HRESULT,
        'CurrentRecord',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propget'],
        HRESULT,
        'PictureData',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(188), 'nonbrowsable', 'propput'],
        HRESULT,
        'PictureData',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propget'],
        HRESULT,
        'PicturePalette',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(311), 'nonbrowsable', 'propput'],
        HRESULT,
        'PicturePalette',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propget'],
        HRESULT,
        'HasModule',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(342), 'propput'],
        HRESULT,
        'HasModule',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propget'],
        HRESULT,
        'acHiddenCurrentPage',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(365), 'hidden', 'propput'],
        HRESULT,
        'acHiddenCurrentPage',
        (['in'], c_int, 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propget'],
        HRESULT,
        'Orientation',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(370), 'propput'],
        HRESULT,
        'Orientation',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propget'],
        HRESULT,
        'InputParameters',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(66), 'propput'],
        HRESULT,
        'InputParameters',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2006), 'propget'],
        HRESULT,
        'ActiveControl',
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2150), 'propget'],
        HRESULT,
        'DefaultControl',
        (['in'], c_int, 'ControlType'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2118)],
        HRESULT,
        'Circle',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_float, 'radius'),
        (['in'], c_int, 'color'),
        (['in'], c_float, 'start'),
        (['in'], c_float, 'end'),
        (['in'], c_float, 'aspect')
    ),
    COMMETHOD(
        [dispid(2152)],
        HRESULT,
        'Line',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2117)],
        HRESULT,
        'PSet',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'X'),
        (['in'], c_float, 'Y'),
        (['in'], c_int, 'color')
    ),
    COMMETHOD(
        [dispid(2116)],
        HRESULT,
        'Scale',
        (['in'], c_short, 'flags'),
        (['in'], c_float, 'x1'),
        (['in'], c_float, 'y1'),
        (['in'], c_float, 'x2'),
        (['in'], c_float, 'y2')
    ),
    COMMETHOD(
        [dispid(2114)],
        HRESULT,
        'TextWidth',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2115)],
        HRESULT,
        'TextHeight',
        (['in'], BSTR, 'Expr'),
        (['out', 'retval'], POINTER(c_float), 'pRet')
    ),
    COMMETHOD(
        [dispid(2153)],
        HRESULT,
        'Print',
        (['in'], BSTR, 'Expr')
    ),
    COMMETHOD(
        [dispid(2088), 'propget'],
        HRESULT,
        'Section',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(Section)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2098), 'propget'],
        HRESULT,
        'GroupLevel',
        (['in'], c_int, 'Index'),
        (['out', 'retval'], POINTER(POINTER(GroupLevel)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2097), 'propget'],
        HRESULT,
        'Report',
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2090), 'propget'],
        HRESULT,
        'Module',
        (['out', 'retval'], POINTER(POINTER(Module)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'propget'],
        HRESULT,
        'Controls',
        (['out', 'retval'], POINTER(POINTER(Controls)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(6), 'propget'],
        HRESULT,
        'AutoResize',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(6), 'propput'],
        HRESULT,
        'AutoResize',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propget'],
        HRESULT,
        'AutoCenter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(278), 'propput'],
        HRESULT,
        'AutoCenter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propget'],
        HRESULT,
        'PopUp',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(90), 'propput'],
        HRESULT,
        'PopUp',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propget'],
        HRESULT,
        'Modal',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(62), 'propput'],
        HRESULT,
        'Modal',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propget'],
        HRESULT,
        'BorderStyle',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(9), 'propput'],
        HRESULT,
        'BorderStyle',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propget'],
        HRESULT,
        'ControlBox',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(97), 'propput'],
        HRESULT,
        'ControlBox',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propget'],
        HRESULT,
        'MinMaxButtons',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(328), 'propput'],
        HRESULT,
        'MinMaxButtons',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propget'],
        HRESULT,
        'CloseButton',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(303), 'propput'],
        HRESULT,
        'CloseButton',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propget'],
        HRESULT,
        'WindowWidth',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(287), 'propput'],
        HRESULT,
        'WindowWidth',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propget'],
        HRESULT,
        'WindowHeight',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(288), 'propput'],
        HRESULT,
        'WindowHeight',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(402), 'propget'],
        HRESULT,
        'WindowTop',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(403), 'propget'],
        HRESULT,
        'WindowLeft',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(284), 'propget'],
        HRESULT,
        'OpenArgs',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(284), 'propput'],
        HRESULT,
        'OpenArgs',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propget'],
        HRESULT,
        'Printer',
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propput'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propputref'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propget'],
        HRESULT,
        'Moveable',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(410), 'propput'],
        HRESULT,
        'Moveable',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propget'],
        HRESULT,
        'UseDefaultPrinter',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2418), 'propput'],
        HRESULT,
        'UseDefaultPrinter',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propget'],
        HRESULT,
        'Recordset',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2196), 'propputref'],
        HRESULT,
        'Recordset',
        (['in'], POINTER(IDispatch), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propget'],
        HRESULT,
        'RecordSourceQualifier',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(445), 'propput'],
        HRESULT,
        'RecordSourceQualifier',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2423), 'propget'],
        HRESULT,
        'Shape',
        (['out', 'retval'], POINTER(BSTR), 'pbstr')
    ),
]

################################################################
# code template for _Report2 implementation
# class _Report2_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Filter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FilterOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderBy = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OrderByOn = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ServerFilter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Caption = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordLocks = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageHeader = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PageFooter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DateGrouping = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GrpKeepTogether = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MaxButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Width = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Picture = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureSizeMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureAlignment = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureTiling = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Toolbar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     GridY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LayoutForPrint = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FastLaserPrinting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpFile = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HelpContextId = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Hwnd = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Count = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Page = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Pages = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogicalPageHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ZoomControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Height = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintSection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NextRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MoveLayout = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FormatCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrintCount = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Painting = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtMip = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PrtDevNames = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentX = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentY = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleHeight = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleLeft = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleTop = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ScaleWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawMode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DrawWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FillStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaletteSource = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PaintPalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnMenu = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnOpen = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnClose = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnActivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnDeactivate = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnNoData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OnError = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Dirty = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CurrentRecord = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PictureData = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PicturePalette = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     HasModule = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     acHiddenCurrentPage = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Orientation = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InputParameters = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ActiveControl(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultControl(self, ControlType):
#         '-no docstring-'
#         #return pRet
#
#     def Circle(self, flags, X, Y, radius, color, start, end, aspect):
#         '-no docstring-'
#         #return 
#
#     def Line(self, flags, x1, y1, x2, y2, color):
#         '-no docstring-'
#         #return 
#
#     def PSet(self, flags, X, Y, color):
#         '-no docstring-'
#         #return 
#
#     def Scale(self, flags, x1, y1, x2, y2):
#         '-no docstring-'
#         #return 
#
#     def TextWidth(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def TextHeight(self, Expr):
#         '-no docstring-'
#         #return pRet
#
#     def Print(self, Expr):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Section(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def GroupLevel(self, Index):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Report(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Module(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Controls(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoResize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AutoCenter = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     PopUp = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Modal = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     BorderStyle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlBox = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MinMaxButtons = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     CloseButton = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowWidth = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     WindowHeight = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def WindowTop(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def WindowLeft(self):
#         '-no docstring-'
#         #return pRet
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     OpenArgs = property(_get, _set, doc = _set.__doc__)
#
#     def Printer(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Moveable = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     UseDefaultPrinter = property(_get, _set, doc = _set.__doc__)
#
#     def Recordset(self, pRet):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     RecordSourceQualifier = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Shape(self):
#         '-no docstring-'
#         #return pbstr
#


class LocalVars(CoClass):
    _reg_clsid_ = GUID('{8357BB53-95A2-4043-A040-2825FACEF50D}')
    _idlflags_ = ['hidden']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


class _LocalVars(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IDispatch):
    _case_insensitive_ = True
    _iid_ = GUID('{8357BB54-95A2-4043-A040-2825FACEF50D}')
    _idlflags_ = ['hidden', 'dual', 'oleautomation']

    if TYPE_CHECKING:  # commembers
        def _get_Application(self) -> hints.Annotated['_Application', hints.FirstComItfOf['Application']]: ...
        Application = hints.normal_property(_get_Application)
        def _get_Parent(self) -> hints.Incomplete: ...
        Parent = hints.normal_property(_get_Parent)
        def _get_Item(self, Index: hints.Incomplete) -> hints.Annotated['_LocalVar', hints.FirstComItfOf['LocalVar']]: ...
        Item = hints.named_property('Item', _get_Item)
        __call__ = hints.to_dunder_call(Item)
        __getitem__ = hints.to_dunder_getitem(Item)
        __setitem__ = hints.to_dunder_setitem(Item)
        def _get_Count(self) -> hints.Incomplete: ...
        Count = hints.normal_property(_get_Count)
        __len__ = hints.to_dunder_len(Count)
        def _NewEnum(self) -> hints.Incomplete: ...
        __iter__ = hints.to_dunder_iter(_NewEnum)
        def Add(self, Name: hints.Incomplete, Value: hints.Incomplete) -> hints.Hresult: ...
        def IsMemberSafe(self, dispid: hints.Incomplete) -> hints.Incomplete: ...


LocalVars._com_interfaces_ = [_LocalVars]

_PageBreak._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2091), 'propget'],
        HRESULT,
        'Properties',
        (['out', 'retval'], POINTER(POINTER(Properties)), 'pRet')
    ),
    COMMETHOD([dispid(2151)], HRESULT, 'SizeToFit'),
    COMMETHOD(
        [dispid(-5), 'hidden'],
        HRESULT,
        '_Evaluate',
        (['in'], BSTR, 'bstrExpr'),
        (['in'], POINTER(_midlSAFEARRAY(VARIANT)), 'ppsa'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propget'],
        HRESULT,
        'EventProcPrefix',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(22), 'propput'],
        HRESULT,
        'EventProcPrefix',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propget'],
        HRESULT,
        '_Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(20), 'hidden', 'nonbrowsable', 'propput'],
        HRESULT,
        '_Name',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propget'],
        HRESULT,
        'ControlType',
        (['out', 'retval'], POINTER(c_ubyte), 'pRet')
    ),
    COMMETHOD(
        [dispid(21), 'propput'],
        HRESULT,
        'ControlType',
        (['in'], c_ubyte, 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propget'],
        HRESULT,
        'Left',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(54), 'propput'],
        HRESULT,
        'Left',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propget'],
        HRESULT,
        'Top',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(141), 'propput'],
        HRESULT,
        'Top',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propget'],
        HRESULT,
        'Tag',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(266), 'propput'],
        HRESULT,
        'Tag',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propget'],
        HRESULT,
        'Section',
        (['out', 'retval'], POINTER(c_short), 'pRet')
    ),
    COMMETHOD(
        [dispid(237), 'propput'],
        HRESULT,
        'Section',
        (['in'], c_short, 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propget'],
        HRESULT,
        'IsVisible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(140), 'propput'],
        HRESULT,
        'IsVisible',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propget'],
        HRESULT,
        'InSelection',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(280), 'nonbrowsable', 'propput'],
        HRESULT,
        'InSelection',
        (['in'], VARIANT_BOOL, 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propget'],
        HRESULT,
        'ControlName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(265), 'hidden', 'propput'],
        HRESULT,
        'ControlName',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pbstrName')
    ),
    COMMETHOD(
        [dispid(-2147418112), 'propput'],
        HRESULT,
        'Name',
        (['in'], BSTR, 'pbstrName')
    ),
    COMMETHOD(
        [dispid(2328)],
        HRESULT,
        'Move',
        (['in'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _PageBreak implementation
# class _PageBreak_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Properties(self):
#         '-no docstring-'
#         #return pRet
#
#     def SizeToFit(self):
#         '-no docstring-'
#         #return 
#
#     def _Evaluate(self, bstrExpr, ppsa):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     EventProcPrefix = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     _Name = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Left = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Top = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Tag = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Section = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     IsVisible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     InSelection = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ControlName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrName
#     def _set(self, pbstrName):
#         '-no docstring-'
#     Name = property(_get, _set, doc = _set.__doc__)
#
#     def Move(self, Left, Top, Width, Height):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_LocalVars._methods_ = [
    COMMETHOD(
        [dispid(2005), 'hidden', 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'hidden', 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(0), 'hidden', 'propget'],
        HRESULT,
        'Item',
        (['in'], VARIANT, 'Index'),
        (['out', 'retval'], POINTER(POINTER(LocalVar)), 'ppTempVar')
    ),
    COMMETHOD(
        [dispid(2001), 'hidden', 'propget'],
        HRESULT,
        'Count',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(-4), 'restricted', 'hidden'],
        HRESULT,
        '_NewEnum',
        (['out', 'retval'], POINTER(POINTER(IUnknown)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2191), 'hidden'],
        HRESULT,
        'Add',
        (['in'], BSTR, 'Name'),
        (['in'], VARIANT, 'Value')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
]

################################################################
# code template for _LocalVars implementation
# class _LocalVars_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Item(self, Index):
#         '-no docstring-'
#         #return ppTempVar
#
#     @property
#     def Count(self):
#         '-no docstring-'
#         #return pRet
#
#     def _NewEnum(self):
#         '-no docstring-'
#         #return pRet
#
#     def Add(self, Name, Value):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#

_FormEvents2._disp_methods_ = [
    DISPMETHOD([dispid(2067)], None, 'Load'),
    DISPMETHOD([dispid(2058)], None, 'Current'),
    DISPMETHOD(
        [dispid(2059)],
        None,
        'BeforeInsert',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2060)], None, 'AfterInsert'),
    DISPMETHOD(
        [dispid(2061)],
        None,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2062)], None, 'AfterUpdate'),
    DISPMETHOD(
        [dispid(2063)],
        None,
        'Delete',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2064)],
        None,
        'BeforeDelConfirm',
        (['out'], POINTER(c_short), 'Cancel'),
        (['out'], POINTER(c_short), 'Response')
    ),
    DISPMETHOD(
        [dispid(2065)],
        None,
        'AfterDelConfirm',
        (['in', 'out'], POINTER(c_short), 'Status')
    ),
    DISPMETHOD(
        [dispid(2066)],
        None,
        'Open',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2068)], None, 'Resize'),
    DISPMETHOD(
        [dispid(2069)],
        None,
        'Unload',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2070)], None, 'Close'),
    DISPMETHOD([dispid(2071)], None, 'Activate'),
    DISPMETHOD([dispid(2072)], None, 'Deactivate'),
    DISPMETHOD([dispid(2073)], None, 'GotFocus'),
    DISPMETHOD([dispid(2074)], None, 'LostFocus'),
    DISPMETHOD([dispid(-600)], None, 'Click'),
    DISPMETHOD(
        [dispid(-601)],
        None,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(-605)],
        None,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-606)],
        None,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-607)],
        None,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    DISPMETHOD(
        [dispid(-602)],
        None,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(-603)],
        None,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    DISPMETHOD(
        [dispid(-604)],
        None,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    DISPMETHOD(
        [dispid(2083)],
        None,
        'Error',
        (['in', 'out'], POINTER(c_short), 'DataErr'),
        (['out'], POINTER(c_short), 'Response')
    ),
    DISPMETHOD([dispid(2084)], None, 'Timer'),
    DISPMETHOD(
        [dispid(2155)],
        None,
        'Filter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'FilterType')
    ),
    DISPMETHOD(
        [dispid(2156)],
        None,
        'ApplyFilter',
        (['out'], POINTER(c_short), 'Cancel'),
        (['in', 'out'], POINTER(c_short), 'ApplyType')
    ),
    DISPMETHOD(
        [dispid(2205)],
        None,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2145)],
        None,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2334), 'hidden'],
        None,
        'RecordExit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2369), 'hidden'],
        None,
        'BeginBatchEdit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2370), 'hidden'],
        None,
        'UndoBatchEdit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    DISPMETHOD([dispid(2383)], None, 'OnConnect'),
    DISPMETHOD([dispid(2384)], None, 'OnDisconnect'),
    DISPMETHOD(
        [dispid(2385)],
        None,
        'PivotTableChange',
        (['in'], c_int, 'Reason')
    ),
    DISPMETHOD([dispid(2386)], None, 'Query'),
    DISPMETHOD([dispid(2387)], None, 'BeforeQuery'),
    DISPMETHOD([dispid(2388)], None, 'SelectionChange'),
    DISPMETHOD(
        [dispid(2389)],
        None,
        'CommandBeforeExecute',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2390)],
        None,
        'CommandChecked',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Checked')
    ),
    DISPMETHOD(
        [dispid(2391)],
        None,
        'CommandEnabled',
        (['in'], VARIANT, 'Command'),
        (['in'], POINTER(IDispatch), 'Enabled')
    ),
    DISPMETHOD(
        [dispid(2392)],
        None,
        'CommandExecute',
        (['in'], VARIANT, 'Command')
    ),
    DISPMETHOD([dispid(2394)], None, 'DataSetChange'),
    DISPMETHOD(
        [dispid(2395)],
        None,
        'BeforeScreenTip',
        (['in'], POINTER(IDispatch), 'ScreenTipText'),
        (['in'], POINTER(IDispatch), 'SourceObject')
    ),
    DISPMETHOD(
        [dispid(2399)],
        None,
        'BeforeRender',
        (['in'], POINTER(IDispatch), 'drawObject'),
        (['in'], POINTER(IDispatch), 'chartObject'),
        (['in'], POINTER(IDispatch), 'Cancel')
    ),
    DISPMETHOD(
        [dispid(2397)],
        None,
        'AfterRender',
        (['in'], POINTER(IDispatch), 'drawObject'),
        (['in'], POINTER(IDispatch), 'chartObject')
    ),
    DISPMETHOD(
        [dispid(2396)],
        None,
        'AfterFinalRender',
        (['in'], POINTER(IDispatch), 'drawObject')
    ),
    DISPMETHOD(
        [dispid(2398)],
        None,
        'AfterLayout',
        (['in'], POINTER(IDispatch), 'drawObject')
    ),
    DISPMETHOD(
        [dispid(2401)],
        None,
        'MouseWheel',
        (['in'], VARIANT_BOOL, 'Page'),
        (['in'], c_int, 'Count')
    ),
    DISPMETHOD(
        [dispid(2402)],
        None,
        'ViewChange',
        (['in'], c_int, 'Reason')
    ),
    DISPMETHOD(
        [dispid(2403)],
        None,
        'DataChange',
        (['in'], c_int, 'Reason')
    ),
]

_FormatCondition._methods_ = [
    COMMETHOD(
        [dispid(-513), 'propget'],
        HRESULT,
        'ForeColor',
        (['out', 'retval'], POINTER(c_int), 'plResult')
    ),
    COMMETHOD(
        [dispid(-513), 'propput'],
        HRESULT,
        'ForeColor',
        (['in'], c_int, 'plResult')
    ),
    COMMETHOD(
        [dispid(-501), 'propget'],
        HRESULT,
        'BackColor',
        (['out', 'retval'], POINTER(c_int), 'plResult')
    ),
    COMMETHOD(
        [dispid(-501), 'propput'],
        HRESULT,
        'BackColor',
        (['in'], c_int, 'plResult')
    ),
    COMMETHOD(
        [dispid(2127), 'propget'],
        HRESULT,
        'FontBold',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfResult')
    ),
    COMMETHOD(
        [dispid(2127), 'propput'],
        HRESULT,
        'FontBold',
        (['in'], VARIANT_BOOL, 'pfResult')
    ),
    COMMETHOD(
        [dispid(2128), 'propget'],
        HRESULT,
        'FontItalic',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfResult')
    ),
    COMMETHOD(
        [dispid(2128), 'propput'],
        HRESULT,
        'FontItalic',
        (['in'], VARIANT_BOOL, 'pfResult')
    ),
    COMMETHOD(
        [dispid(2131), 'propget'],
        HRESULT,
        'FontUnderline',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfResult')
    ),
    COMMETHOD(
        [dispid(2131), 'propput'],
        HRESULT,
        'FontUnderline',
        (['in'], VARIANT_BOOL, 'pfResult')
    ),
    COMMETHOD(
        [dispid(-514), 'propget'],
        HRESULT,
        'Enabled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfResult')
    ),
    COMMETHOD(
        [dispid(-514), 'propput'],
        HRESULT,
        'Enabled',
        (['in'], VARIANT_BOOL, 'pfResult')
    ),
    COMMETHOD(
        [dispid(2095), 'propget'],
        HRESULT,
        'Type',
        (['out', 'retval'], POINTER(AcFormatConditionType), 'pacfctResult')
    ),
    COMMETHOD(
        [dispid(2199), 'propget'],
        HRESULT,
        'Operator',
        (['out', 'retval'], POINTER(AcFormatConditionOperator), 'pacfcoResult')
    ),
    COMMETHOD(
        [dispid(2200), 'propget'],
        HRESULT,
        'Expression1',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2201), 'propget'],
        HRESULT,
        'Expression2',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2202)],
        HRESULT,
        'Modify',
        (['in'], AcFormatConditionType, 'Type'),
        (['in', 'optional'], AcFormatConditionOperator, 'Operator', 0),
        (['in', 'optional'], VARIANT, 'Expression1'),
        (['in', 'optional'], VARIANT, 'Expression2')
    ),
    COMMETHOD([dispid(2063)], HRESULT, 'Delete'),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2574), 'propget'],
        HRESULT,
        'ShortestBarLimit',
        (['out', 'retval'], POINTER(AcFormatBarLimits), 'pacfctResult')
    ),
    COMMETHOD(
        [dispid(2574), 'propput'],
        HRESULT,
        'ShortestBarLimit',
        (['in'], AcFormatBarLimits, 'pacfctResult')
    ),
    COMMETHOD(
        [dispid(2575), 'propget'],
        HRESULT,
        'ShortestBarValue',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2575), 'propput'],
        HRESULT,
        'ShortestBarValue',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2576), 'propget'],
        HRESULT,
        'LongestBarLimit',
        (['out', 'retval'], POINTER(AcFormatBarLimits), 'pacfctResult')
    ),
    COMMETHOD(
        [dispid(2576), 'propput'],
        HRESULT,
        'LongestBarLimit',
        (['in'], AcFormatBarLimits, 'pacfctResult')
    ),
    COMMETHOD(
        [dispid(2577), 'propget'],
        HRESULT,
        'LongestBarValue',
        (['out', 'retval'], POINTER(BSTR), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2577), 'propput'],
        HRESULT,
        'LongestBarValue',
        (['in'], VARIANT, 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2578), 'propget'],
        HRESULT,
        'ShowBarOnly',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pbstrResult')
    ),
    COMMETHOD(
        [dispid(2578), 'propput'],
        HRESULT,
        'ShowBarOnly',
        (['in'], VARIANT_BOOL, 'pbstrResult')
    ),
]

################################################################
# code template for _FormatCondition implementation
# class _FormatCondition_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return plResult
#     def _set(self, plResult):
#         '-no docstring-'
#     ForeColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return plResult
#     def _set(self, plResult):
#         '-no docstring-'
#     BackColor = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfResult
#     def _set(self, pfResult):
#         '-no docstring-'
#     FontBold = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfResult
#     def _set(self, pfResult):
#         '-no docstring-'
#     FontItalic = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfResult
#     def _set(self, pfResult):
#         '-no docstring-'
#     FontUnderline = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfResult
#     def _set(self, pfResult):
#         '-no docstring-'
#     Enabled = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def Type(self):
#         '-no docstring-'
#         #return pacfctResult
#
#     @property
#     def Operator(self):
#         '-no docstring-'
#         #return pacfcoResult
#
#     @property
#     def Expression1(self):
#         '-no docstring-'
#         #return pbstrResult
#
#     @property
#     def Expression2(self):
#         '-no docstring-'
#         #return pbstrResult
#
#     def Modify(self, Type, Operator, Expression1, Expression2):
#         '-no docstring-'
#         #return 
#
#     def Delete(self):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pacfctResult
#     def _set(self, pacfctResult):
#         '-no docstring-'
#     ShortestBarLimit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     ShortestBarValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pacfctResult
#     def _set(self, pacfctResult):
#         '-no docstring-'
#     LongestBarLimit = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     LongestBarValue = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pbstrResult
#     def _set(self, pbstrResult):
#         '-no docstring-'
#     ShowBarOnly = property(_get, _set, doc = _set.__doc__)
#


class TextBox(CoClass):
    _reg_clsid_ = GUID('{3B06E945-E47C-11CD-8701-00AA003F0F07}')
    _idlflags_ = ['control']
    _typelib_path_ = typelib_path
    _reg_typelib_ = ('{4AFFC9A0-5F99-101B-AF4E-00AA003F0F07}', 9, 0)


TextBox._com_interfaces_ = [_Textbox]
TextBox._outgoing_interfaces_ = [DispTextBoxEvents, _TextBoxEvents]

_Application._methods_ = [
    COMMETHOD(
        [dispid(2005), 'propget'],
        HRESULT,
        'Application',
        (['out', 'retval'], POINTER(POINTER(Application)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2087), 'propget'],
        HRESULT,
        'Parent',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2082), 'propget'],
        HRESULT,
        'CodeContextObject',
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2142), 'hidden'],
        HRESULT,
        'NewCurrentDatabaseOld',
        (['in'], BSTR, 'filepath')
    ),
    COMMETHOD(
        [dispid(2140), 'hidden'],
        HRESULT,
        'OpenCurrentDatabaseOld',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], VARIANT_BOOL, 'Exclusive', False)
    ),
    COMMETHOD(
        [dispid(2010), 'propget'],
        HRESULT,
        'MenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2010), 'propput'],
        HRESULT,
        'MenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2011), 'propget'],
        HRESULT,
        'CurrentObjectType',
        (['out', 'retval'], POINTER(AcObjectType), 'pRet')
    ),
    COMMETHOD(
        [dispid(2012), 'propget'],
        HRESULT,
        'CurrentObjectName',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2013)],
        HRESULT,
        'GetOption',
        (['in'], BSTR, 'OptionName'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2014)],
        HRESULT,
        'SetOption',
        (['in'], BSTR, 'OptionName'),
        (['in'], VARIANT, 'Setting')
    ),
    COMMETHOD(
        [dispid(2015)],
        HRESULT,
        'Echo',
        (['in'], c_short, 'EchoOn'),
        (['in', 'optional'], BSTR, 'bstrStatusBarText')
    ),
    COMMETHOD([dispid(2141)], HRESULT, 'CloseCurrentDatabase'),
    COMMETHOD(
        [dispid(2016)],
        HRESULT,
        'Quit',
        (['in', 'optional'], AcQuitOption, 'Option', 1)
    ),
    COMMETHOD(
        [dispid(2002), 'propget'],
        HRESULT,
        'Forms',
        (['out', 'retval'], POINTER(POINTER(Forms)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2003), 'propget'],
        HRESULT,
        'Reports',
        (['out', 'retval'], POINTER(POINTER(Reports)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2004), 'propget'],
        HRESULT,
        'Screen',
        (['out', 'retval'], POINTER(POINTER(Screen)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2025), 'propget'],
        HRESULT,
        'DoCmd',
        (['out', 'retval'], POINTER(POINTER(DoCmd)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2107), 'propget'],
        HRESULT,
        'ShortcutMenuBar',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2107), 'propput'],
        HRESULT,
        'ShortcutMenuBar',
        (['in'], BSTR, 'pRet')
    ),
    COMMETHOD(
        [dispid(2148), 'propget'],
        HRESULT,
        'Visible',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfVisible')
    ),
    COMMETHOD(
        [dispid(2148), 'propput'],
        HRESULT,
        'Visible',
        (['in'], VARIANT_BOOL, 'pfVisible')
    ),
    COMMETHOD(
        [dispid(2149), 'propget'],
        HRESULT,
        'UserControl',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfUserCtrl')
    ),
    COMMETHOD(
        [dispid(2149), 'propput'],
        HRESULT,
        'UserControl',
        (['in'], VARIANT_BOOL, 'pfUserCtrl')
    ),
    COMMETHOD(
        [dispid(2028)],
        HRESULT,
        'SysCmd',
        (['in'], AcSysCmdAction, 'Action'),
        (['in', 'optional'], VARIANT, 'Argument2'),
        (['in', 'optional'], VARIANT, 'Argument3'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2029)],
        HRESULT,
        'CreateForm',
        (['in', 'optional'], VARIANT, 'Database'),
        (['in', 'optional'], VARIANT, 'FormTemplate'),
        (['out', 'retval'], POINTER(POINTER(Form)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2030)],
        HRESULT,
        'CreateReport',
        (['in', 'optional'], VARIANT, 'Database'),
        (['in', 'optional'], VARIANT, 'ReportTemplate'),
        (['out', 'retval'], POINTER(POINTER(Report)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2031), 'hidden'],
        HRESULT,
        'CreateControlOld',
        (['in'], BSTR, 'FormName'),
        (['in'], AcControlType, 'ControlType'),
        (['in', 'optional'], AcSection, 'Section', 0),
        (['in', 'optional'], VARIANT, 'Parent'),
        (['in', 'optional'], VARIANT, 'ColumnName'),
        (['in', 'optional'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2032), 'hidden'],
        HRESULT,
        'CreateReportControlOld',
        (['in'], BSTR, 'ReportName'),
        (['in'], AcControlType, 'ControlType'),
        (['in', 'optional'], AcSection, 'Section', 0),
        (['in', 'optional'], VARIANT, 'Parent'),
        (['in', 'optional'], VARIANT, 'ColumnName'),
        (['in', 'optional'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2164), 'hidden'],
        HRESULT,
        'CreateControlExOld',
        (['in'], BSTR, 'FormName'),
        (['in'], AcControlType, 'ControlType'),
        (['in'], AcSection, 'Section'),
        (['in'], BSTR, 'Parent'),
        (['in'], BSTR, 'ControlSource'),
        (['in'], c_int, 'Left'),
        (['in'], c_int, 'Top'),
        (['in'], c_int, 'Width'),
        (['in'], c_int, 'Height'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2165), 'hidden'],
        HRESULT,
        'CreateReportControlExOld',
        (['in'], BSTR, 'ReportName'),
        (['in'], AcControlType, 'ControlType'),
        (['in'], AcSection, 'Section'),
        (['in'], BSTR, 'Parent'),
        (['in'], BSTR, 'ControlName'),
        (['in'], c_int, 'Left'),
        (['in'], c_int, 'Top'),
        (['in'], c_int, 'Width'),
        (['in'], c_int, 'Height'),
        (['out', 'retval'], POINTER(POINTER(Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2033)],
        HRESULT,
        'DeleteControl',
        (['in'], BSTR, 'FormName'),
        (['in'], BSTR, 'ControlName')
    ),
    COMMETHOD(
        [dispid(2034)],
        HRESULT,
        'DeleteReportControl',
        (['in'], BSTR, 'ReportName'),
        (['in'], BSTR, 'ControlName')
    ),
    COMMETHOD(
        [dispid(2051)],
        HRESULT,
        'CreateGroupLevel',
        (['in'], BSTR, 'ReportName'),
        (['in'], BSTR, 'Expression'),
        (['in'], c_short, 'Header'),
        (['in'], c_short, 'Footer'),
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2035)],
        HRESULT,
        'DMin',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2036)],
        HRESULT,
        'DMax',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2037)],
        HRESULT,
        'DSum',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2038)],
        HRESULT,
        'DAvg',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2039)],
        HRESULT,
        'DLookup',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2040)],
        HRESULT,
        'DLast',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2041)],
        HRESULT,
        'DVar',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2042)],
        HRESULT,
        'DVarP',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2043)],
        HRESULT,
        'DStDev',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2044)],
        HRESULT,
        'DStDevP',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2045)],
        HRESULT,
        'DFirst',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2046)],
        HRESULT,
        'DCount',
        (['in'], BSTR, 'Expr'),
        (['in'], BSTR, 'Domain'),
        (['in', 'optional'], VARIANT, 'Criteria'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2047)],
        HRESULT,
        'Eval',
        (['in'], BSTR, 'StringExpr'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2048)],
        HRESULT,
        'CurrentUser',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2052)],
        HRESULT,
        'DDEInitiate',
        (['in'], BSTR, 'Application'),
        (['in'], BSTR, 'Topic'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2053)],
        HRESULT,
        'DDEExecute',
        (['in'], VARIANT, 'ChanNum'),
        (['in'], BSTR, 'Command')
    ),
    COMMETHOD(
        [dispid(2054)],
        HRESULT,
        'DDEPoke',
        (['in'], VARIANT, 'ChanNum'),
        (['in'], BSTR, 'Item'),
        (['in'], BSTR, 'Data')
    ),
    COMMETHOD(
        [dispid(2055)],
        HRESULT,
        'DDERequest',
        (['in'], VARIANT, 'ChanNum'),
        (['in'], BSTR, 'Item'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2056)],
        HRESULT,
        'DDETerminate',
        (['in'], VARIANT, 'ChanNum')
    ),
    COMMETHOD([dispid(2057)], HRESULT, 'DDETerminateAll'),
    COMMETHOD(
        [dispid(2110), 'propget'],
        HRESULT,
        'DBEngine',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.DBEngine)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2049)],
        HRESULT,
        'CurrentDb',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Database)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2050)],
        HRESULT,
        'CodeDb',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Database)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2099), 'hidden'],
        HRESULT,
        'BeginUndoable',
        (['in'], c_int, 'Hwnd')
    ),
    COMMETHOD(
        [dispid(2100), 'hidden'],
        HRESULT,
        'SetUndoRecording',
        (['in'], c_short, 'yesno')
    ),
    COMMETHOD(
        [dispid(2138)],
        HRESULT,
        'BuildCriteria',
        (['in'], BSTR, 'Field'),
        (['in'], c_short, 'FieldType'),
        (['in'], BSTR, 'Expression'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2093), 'hidden'],
        HRESULT,
        'InsertText',
        (['in'], BSTR, 'Text'),
        (['in'], BSTR, 'ModuleName')
    ),
    COMMETHOD([dispid(2154), 'hidden'], HRESULT, 'ReloadAddIns'),
    COMMETHOD(
        [dispid(2157)],
        HRESULT,
        'DefaultWorkspaceClone',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._4AC9E1DA_5BAD_4AC7_86E3_24F4CDCECA28_0_12_0.Workspace)),
            'pRet',
        )
    ),
    COMMETHOD([dispid(2158)], HRESULT, 'RefreshTitleBar'),
    COMMETHOD(
        [dispid(2159), 'hidden'],
        HRESULT,
        'AddAutoCorrect',
        (['in'], BSTR, 'ChangeFrom'),
        (['in'], BSTR, 'ChangeTo')
    ),
    COMMETHOD(
        [dispid(2160), 'hidden'],
        HRESULT,
        'DelAutoCorrect',
        (['in'], BSTR, 'ChangeFrom')
    ),
    COMMETHOD(
        [dispid(2163)],
        HRESULT,
        'hWndAccessApp',
        (['out', 'retval'], POINTER(c_int), 'phWndAccessAppWnd')
    ),
    COMMETHOD(
        [dispid(2134)],
        HRESULT,
        'Run',
        (['in'], BSTR, 'Procedure'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg1'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg2'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg3'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg4'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg5'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg6'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg7'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg8'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg9'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg10'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg11'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg12'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg13'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg14'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg15'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg16'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg17'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg18'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg19'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg20'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg21'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg22'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg23'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg24'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg25'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg26'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg27'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg28'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg29'),
        (['in', 'out', 'optional'], POINTER(VARIANT), 'Arg30'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2135)],
        HRESULT,
        'Nz',
        (['in'], VARIANT, 'Value'),
        (['in', 'optional'], VARIANT, 'ValueIfNull'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2166)],
        HRESULT,
        'LoadPicture',
        (['in'], BSTR, 'FileName'),
        (['out', 'retval'], POINTER(POINTER(IDispatch)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2168), 'hidden'],
        HRESULT,
        'ReplaceModule',
        (['in'], c_int, 'objtyp'),
        (['in'], BSTR, 'ModuleName'),
        (['in'], BSTR, 'FileName'),
        (['in'], c_int, 'token')
    ),
    COMMETHOD(
        [dispid(2169)],
        HRESULT,
        'AccessError',
        (['in'], VARIANT, 'ErrorNumber'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2170), 'hidden'],
        HRESULT,
        'BuilderString',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2171)],
        HRESULT,
        'StringFromGUID',
        (['in'], VARIANT, 'Guid'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2172)],
        HRESULT,
        'GUIDFromString',
        (['in'], VARIANT, 'String'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2173), 'hidden'],
        HRESULT,
        'AppLoadString',
        (['in'], c_int, 'id'),
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        [dispid(2174), 'propget'],
        HRESULT,
        'CommandBars',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.CommandBars)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2175), 'hidden', 'propget'],
        HRESULT,
        'Assistant',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.Assistant)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2176)],
        HRESULT,
        'FollowHyperlink',
        (['in'], BSTR, 'Address'),
        (['in', 'optional'], BSTR, 'SubAddress', ''),
        (['in', 'optional'], VARIANT_BOOL, 'NewWindow', False),
        (['in', 'optional'], VARIANT_BOOL, 'AddHistory', True),
        (['in', 'optional'], VARIANT, 'ExtraInfo'),
        (
            ['in', 'optional'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoExtraInfoMethod,
            'Method',
            0
        ),
        (['in', 'optional'], BSTR, 'HeaderInfo', '')
    ),
    COMMETHOD(
        [dispid(2178), 'hidden'],
        HRESULT,
        'SaveAsText',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD(
        [dispid(2179), 'hidden'],
        HRESULT,
        'LoadFromText',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD([dispid(2184)], HRESULT, 'AddToFavorites'),
    COMMETHOD([dispid(2186)], HRESULT, 'RefreshDatabaseWindow'),
    COMMETHOD(
        [dispid(2187), 'propget'],
        HRESULT,
        'References',
        (['out', 'retval'], POINTER(POINTER(References)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2188), 'propget'],
        HRESULT,
        'Modules',
        (['out', 'retval'], POINTER(POINTER(Modules)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2189), 'hidden', 'propget'],
        HRESULT,
        'FileSearch',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileSearch)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2193), 'propget'],
        HRESULT,
        'IsCompiled',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfCompiled')
    ),
    COMMETHOD(
        [dispid(2194)],
        HRESULT,
        'RunCommand',
        (['in'], AcCommand, 'Command')
    ),
    COMMETHOD(
        [dispid(2195)],
        HRESULT,
        'HyperlinkPart',
        (['in'], VARIANT, 'Hyperlink'),
        (['in', 'optional'], AcHyperlinkPart, 'Part', 0),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2197)],
        HRESULT,
        'GetHiddenAttribute',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfHidden')
    ),
    COMMETHOD(
        [dispid(2198)],
        HRESULT,
        'SetHiddenAttribute',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], VARIANT_BOOL, 'fHidden')
    ),
    COMMETHOD(
        [dispid(2210), 'propget'],
        HRESULT,
        'VBE',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._0002E157_0000_0000_C000_000000000046_0_5_3.VBE)),
            'ppVBE',
        )
    ),
    COMMETHOD(
        [dispid(2212), 'hidden', 'propget'],
        HRESULT,
        'DataAccessPages',
        (['out', 'retval'], POINTER(POINTER(DataAccessPages)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2213), 'hidden'],
        HRESULT,
        'CreateDataAccessPage',
        (['in', 'optional'], VARIANT, 'FileName'),
        (['in', 'optional'], VARIANT_BOOL, 'CreateNewFile', True),
        (['out', 'retval'], POINTER(POINTER(DataAccessPage)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2233), 'hidden', 'propget'],
        HRESULT,
        'ADOConnectString',
        (['out', 'retval'], POINTER(BSTR), 'pbstrADOConnectString')
    ),
    COMMETHOD(
        [dispid(2215), 'propget'],
        HRESULT,
        'CurrentProject',
        (['out', 'retval'], POINTER(POINTER(CurrentProject)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2216), 'propget'],
        HRESULT,
        'CurrentData',
        (['out', 'retval'], POINTER(POINTER(CurrentData)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2217), 'propget'],
        HRESULT,
        'CodeProject',
        (['out', 'retval'], POINTER(POINTER(CodeProject)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2218), 'propget'],
        HRESULT,
        'CodeData',
        (['out', 'retval'], POINTER(POINTER(CodeData)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2262)],
        HRESULT,
        'NewAccessProject',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], VARIANT, 'Connect')
    ),
    COMMETHOD(
        [dispid(2263)],
        HRESULT,
        'OpenAccessProject',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], VARIANT_BOOL, 'Exclusive', False)
    ),
    COMMETHOD(
        [dispid(2264)],
        HRESULT,
        'CreateAccessProject',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], VARIANT, 'Connect')
    ),
    COMMETHOD(
        [dispid(2235), 'hidden', 'propget'],
        HRESULT,
        'WizHook',
        (['out', 'retval'], POINTER(POINTER(WizHook)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2266), 'propget'],
        HRESULT,
        'ProductCode',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2277), 'propget'],
        HRESULT,
        'COMAddIns',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.COMAddIns)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2094), 'propget'],
        HRESULT,
        'Name',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2278), 'hidden', 'propget'],
        HRESULT,
        'DefaultWebOptions',
        (['out', 'retval'], POINTER(POINTER(DefaultWebOptions)), 'ppDWO')
    ),
    COMMETHOD(
        [dispid(2301), 'propget'],
        HRESULT,
        'LanguageSettings',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.LanguageSettings)),
            'ppRet',
        )
    ),
    COMMETHOD(
        [dispid(2304), 'hidden', 'propget'],
        HRESULT,
        'AnswerWizard',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.AnswerWizard)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2322), 'propget'],
        HRESULT,
        'FeatureInstall',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall),
            'FeatureInstall',
        )
    ),
    COMMETHOD(
        [dispid(2322), 'propput'],
        HRESULT,
        'FeatureInstall',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFeatureInstall,
            'FeatureInstall',
        )
    ),
    COMMETHOD(
        [dispid(2325)],
        HRESULT,
        'EuroConvert',
        (['in'], c_double, 'Number'),
        (['in'], BSTR, 'SourceCurrency'),
        (['in'], BSTR, 'TargetCurrency'),
        (['in', 'optional'], VARIANT, 'FullPrecision'),
        (['in', 'optional'], VARIANT, 'TriangulationPrecision'),
        (['out', 'retval'], POINTER(c_double), 'pRet')
    ),
    COMMETHOD(
        [dispid(2326), 'hidden', 'propget'],
        HRESULT,
        'VGXFrameInterval',
        (['out', 'retval'], POINTER(VARIANT), 'pnmsec')
    ),
    COMMETHOD(
        [dispid(2329), 'propget'],
        HRESULT,
        'FileDialog',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoFileDialogType,
            'dialogType',
        ),
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.FileDialog)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2334), 'propget'],
        HRESULT,
        'BrokenReference',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfBrokenReference')
    ),
    COMMETHOD(
        [dispid(2332), 'hidden'],
        HRESULT,
        'CreateNewWorkgroupFile',
        (['in', 'optional'], BSTR, 'Path', ' '),
        (['in', 'optional'], BSTR, 'Name', ' '),
        (['in', 'optional'], BSTR, 'Company', ' '),
        (['in', 'optional'], BSTR, 'WorkgroupID', ' '),
        (['in', 'optional'], VARIANT_BOOL, 'Replace', False)
    ),
    COMMETHOD(
        [dispid(2333)],
        HRESULT,
        'SetDefaultWorkgroupFile',
        (['in'], BSTR, 'Path')
    ),
    COMMETHOD(
        [dispid(2364), 'propget'],
        HRESULT,
        'Printers',
        (['out', 'retval'], POINTER(POINTER(Printers)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propget'],
        HRESULT,
        'Printer',
        (['out', 'retval'], POINTER(POINTER(_Printer)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propput'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2365), 'propputref'],
        HRESULT,
        'Printer',
        (['in'], POINTER(_Printer), 'pRet')
    ),
    COMMETHOD(
        [dispid(2335), 'hidden', 'propget'],
        HRESULT,
        'MsoDebugOptions',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoDebugOptions)),
            'MsoDebugOptions',
        )
    ),
    COMMETHOD(
        [dispid(2376)],
        HRESULT,
        'ConvertAccessProject',
        (['in'], BSTR, 'SourceFilename'),
        (['in'], BSTR, 'DestinationFilename'),
        (['in'], AcFileFormat, 'DestinationFileFormat')
    ),
    COMMETHOD(
        [dispid(2377), 'propget'],
        HRESULT,
        'Version',
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2378), 'propget'],
        HRESULT,
        'Build',
        (['out', 'retval'], POINTER(c_int), 'pRet')
    ),
    COMMETHOD(
        [dispid(2382)],
        HRESULT,
        'OpenCurrentDatabase',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], VARIANT_BOOL, 'Exclusive', False),
        (['in', 'optional'], BSTR, 'bstrPassword', '')
    ),
    COMMETHOD(
        [dispid(2400)],
        HRESULT,
        'CompactRepair',
        (['in'], BSTR, 'SourceFile'),
        (['in'], BSTR, 'DestinationFile'),
        (['in', 'optional'], VARIANT_BOOL, 'LogFile', False),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2424), 'hidden'],
        HRESULT,
        'ExportXMLOld',
        (['in'], AcExportXMLObjectType, 'ObjectType'),
        (['in'], BSTR, 'DataSource'),
        (['in', 'optional'], BSTR, 'DataTarget', ''),
        (['in', 'optional'], BSTR, 'SchemaTarget', ''),
        (['in', 'optional'], BSTR, 'PresentationTarget', ''),
        (['in', 'optional'], BSTR, 'ImageTarget', ''),
        (['in', 'optional'], AcExportXMLEncoding, 'Encoding', 0),
        (['in', 'optional'], c_int, 'OtherFlags', 0)
    ),
    COMMETHOD(
        [dispid(2425)],
        HRESULT,
        'ImportXML',
        (['in'], BSTR, 'DataSource'),
        (['in', 'optional'], AcImportXMLOption, 'ImportOptions', 1)
    ),
    COMMETHOD(
        [dispid(2337), 'propget'],
        HRESULT,
        'NewFileTaskPane',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.NewFile)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2430)],
        HRESULT,
        'TransformXML',
        (['in'], BSTR, 'DataSource'),
        (['in'], BSTR, 'TransformSource'),
        (['in'], BSTR, 'OutputTarget'),
        (['in', 'optional'], VARIANT_BOOL, 'WellFormedXMLOutput', False),
        (['in', 'optional'], AcTransformXMLScriptOption, 'ScriptOption', 1)
    ),
    COMMETHOD(
        [dispid(2431)],
        HRESULT,
        'CreateAdditionalData',
        (['out', 'retval'], POINTER(POINTER(_AdditionalData)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2432), 'propget'],
        HRESULT,
        'AutoCorrect',
        (['out', 'retval'], POINTER(POINTER(_AutoCorrect)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2441)],
        HRESULT,
        'ExportXML',
        (['in'], AcExportXMLObjectType, 'ObjectType'),
        (['in'], BSTR, 'DataSource'),
        (['in', 'optional'], BSTR, 'DataTarget', ''),
        (['in', 'optional'], BSTR, 'SchemaTarget', ''),
        (['in', 'optional'], BSTR, 'PresentationTarget', ''),
        (['in', 'optional'], BSTR, 'ImageTarget', ''),
        (['in', 'optional'], AcExportXMLEncoding, 'Encoding', 0),
        (['in', 'optional'], AcExportXMLOtherFlags, 'OtherFlags', 0),
        (['in', 'optional'], BSTR, 'WhereCondition', ''),
        (['in', 'optional'], VARIANT, 'AdditionalData')
    ),
    COMMETHOD(
        [dispid(2448), 'hidden'],
        HRESULT,
        'IsMemberSafe',
        (['in'], c_int, 'dispid'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pRet')
    ),
    COMMETHOD(
        [dispid(2449), 'propget'],
        HRESULT,
        'AutomationSecurity',
        (
            ['out', 'retval'],
            POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity),
            'pAutomationSecurity',
        )
    ),
    COMMETHOD(
        [dispid(2449), 'propput'],
        HRESULT,
        'AutomationSecurity',
        (
            ['in'],
            comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.MsoAutomationSecurity,
            'pAutomationSecurity',
        )
    ),
    COMMETHOD(
        [dispid(2459)],
        HRESULT,
        'NewCurrentDatabase',
        (['in'], BSTR, 'filepath'),
        (['in', 'optional'], AcNewDatabaseFormat, 'FileFormat', 0),
        (['in', 'optional'], VARIANT, 'Template'),
        (['in', 'optional'], BSTR, 'SiteAddress', ''),
        (['in', 'optional'], BSTR, 'ListID', '')
    ),
    COMMETHOD(
        [dispid(2462)],
        HRESULT,
        'PlainText',
        (['in'], VARIANT, 'RichText'),
        (['in', 'optional'], VARIANT, 'Length'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2485)],
        HRESULT,
        'HtmlEncode',
        (['in'], VARIANT, 'PlainText'),
        (['in', 'optional'], VARIANT, 'Length'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2475), 'propget'],
        HRESULT,
        'MacroError',
        (['out', 'retval'], POINTER(POINTER(MacroError)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2484)],
        HRESULT,
        'LoadCustomUI',
        (['in'], BSTR, 'CustomUIName'),
        (['in'], BSTR, 'CustomUIXML')
    ),
    COMMETHOD(
        [dispid(2487), 'propget'],
        HRESULT,
        'TempVars',
        (['out', 'retval'], POINTER(POINTER(TempVars)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2490)],
        HRESULT,
        'ExportNavigationPane',
        (['in'], BSTR, 'Path')
    ),
    COMMETHOD(
        [dispid(2491)],
        HRESULT,
        'ImportNavigationPane',
        (['in'], BSTR, 'Path'),
        (['in', 'optional'], VARIANT_BOOL, 'fAppendOnly', False)
    ),
    COMMETHOD(
        [dispid(2493)],
        HRESULT,
        'ColumnHistory',
        (['in'], BSTR, 'TableName'),
        (['in'], BSTR, 'ColumnName'),
        (['in'], BSTR, 'queryString'),
        (['out', 'retval'], POINTER(BSTR), 'pRet')
    ),
    COMMETHOD(
        [dispid(2494), 'propget'],
        HRESULT,
        'Assistance',
        (
            ['out', 'retval'],
            POINTER(POINTER(comtypes.gen._2DF8D04C_5BFA_101B_BDE5_00AA0044DE52_0_2_8.IAssistance)),
            'pRet',
        )
    ),
    COMMETHOD(
        [dispid(2495)],
        HRESULT,
        'CreateControl',
        (['in'], BSTR, 'FormName'),
        (['in'], AcControlType, 'ControlType'),
        (['in', 'optional'], AcSection, 'Section', 0),
        (['in', 'optional'], VARIANT, 'Parent'),
        (['in', 'optional'], VARIANT, 'ColumnName'),
        (['in', 'optional'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height'),
        (['out', 'retval'], POINTER(POINTER(_Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2496)],
        HRESULT,
        'CreateReportControl',
        (['in'], BSTR, 'ReportName'),
        (['in'], AcControlType, 'ControlType'),
        (['in', 'optional'], AcSection, 'Section', 0),
        (['in', 'optional'], VARIANT, 'Parent'),
        (['in', 'optional'], VARIANT, 'ColumnName'),
        (['in', 'optional'], VARIANT, 'Left'),
        (['in', 'optional'], VARIANT, 'Top'),
        (['in', 'optional'], VARIANT, 'Width'),
        (['in', 'optional'], VARIANT, 'Height'),
        (['out', 'retval'], POINTER(POINTER(_Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2497), 'hidden'],
        HRESULT,
        'CreateControlEx',
        (['in'], BSTR, 'FormName'),
        (['in'], AcControlType, 'ControlType'),
        (['in'], AcSection, 'Section'),
        (['in'], BSTR, 'Parent'),
        (['in'], BSTR, 'ControlSource'),
        (['in'], c_int, 'Left'),
        (['in'], c_int, 'Top'),
        (['in'], c_int, 'Width'),
        (['in'], c_int, 'Height'),
        (['out', 'retval'], POINTER(POINTER(_Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2498), 'hidden'],
        HRESULT,
        'CreateReportControlEx',
        (['in'], BSTR, 'ReportName'),
        (['in'], AcControlType, 'ControlType'),
        (['in'], AcSection, 'Section'),
        (['in'], BSTR, 'Parent'),
        (['in'], BSTR, 'ControlName'),
        (['in'], c_int, 'Left'),
        (['in'], c_int, 'Top'),
        (['in'], c_int, 'Width'),
        (['in'], c_int, 'Height'),
        (['out', 'retval'], POINTER(POINTER(_Control)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2499), 'hidden'],
        HRESULT,
        'ExportCustomFixedFormat',
        (['in'], VARIANT, 'ExternalExporter'),
        (['in'], BSTR, 'OutputFileName'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], AcOutputObjectType, 'ObjectType'),
        (['in', 'optional'], VARIANT_BOOL, 'SelectedRecords', False),
        (['in', 'optional'], c_int, 'FromPage', 1),
        (['in', 'optional'], c_int, 'ToPage', -1)
    ),
    COMMETHOD(
        [dispid(2505)],
        HRESULT,
        'SaveAsAXL',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD(
        [dispid(2506)],
        HRESULT,
        'LoadFromAXL',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName'),
        (['in'], BSTR, 'FileName')
    ),
    COMMETHOD(
        [dispid(2570)],
        HRESULT,
        'SaveAsTemplate',
        (['in'], BSTR, 'Path'),
        (['in'], BSTR, 'Title'),
        (['in'], BSTR, 'IconPath'),
        (['in'], BSTR, 'CoreTable'),
        (['in'], BSTR, 'Category'),
        (['in', 'optional'], VARIANT, 'PreviewPath'),
        (['in', 'optional'], VARIANT, 'Description'),
        (['in', 'optional'], VARIANT, 'InstantiationForm'),
        (['in', 'optional'], VARIANT, 'ApplicationPart'),
        (['in', 'optional'], VARIANT, 'IncludeData'),
        (['in', 'optional'], VARIANT, 'Variation')
    ),
    COMMETHOD(
        [dispid(2573)],
        HRESULT,
        'InstantiateTemplate',
        (['in'], BSTR, 'Path')
    ),
    COMMETHOD(
        [dispid(2581), 'propget'],
        HRESULT,
        'WebServices',
        (['out', 'retval'], POINTER(POINTER(WebServices)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2579), 'hidden', 'propget'],
        HRESULT,
        'LocalVars',
        (['out', 'retval'], POINTER(POINTER(LocalVars)), 'pRet')
    ),
    COMMETHOD(
        [dispid(2586)],
        HRESULT,
        'CurrentWebUser',
        (['in'], AcWebUserDisplay, 'DisplayOption'),
        (['out', 'retval'], POINTER(VARIANT), 'pvarRet')
    ),
    COMMETHOD(
        [dispid(2587)],
        HRESULT,
        'CurrentWebUserGroups',
        (['in'], AcWebUserGroupsDisplay, 'DisplayOption'),
        (['out', 'retval'], POINTER(VARIANT), 'pvarRet')
    ),
    COMMETHOD(
        [dispid(2588)],
        HRESULT,
        'IsCurrentWebUserInGroup',
        (['in'], VARIANT, 'GroupNameOrID'),
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pfRet')
    ),
    COMMETHOD(
        [dispid(2594)],
        HRESULT,
        'DirtyObject',
        (['in'], AcObjectType, 'ObjectType'),
        (['in'], BSTR, 'ObjectName')
    ),
    COMMETHOD(
        [dispid(2598), 'hidden'],
        HRESULT,
        'IsClient',
        (['out', 'retval'], POINTER(VARIANT_BOOL), 'pf')
    ),
    COMMETHOD(
        [dispid(2599), 'propget'],
        HRESULT,
        'ReturnVars',
        (['out', 'retval'], POINTER(POINTER(ReturnVars)), 'pRet')
    ),
]

################################################################
# code template for _Application implementation
# class _Application_Impl(object):
#     @property
#     def Application(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Parent(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CodeContextObject(self):
#         '-no docstring-'
#         #return pRet
#
#     def NewCurrentDatabaseOld(self, filepath):
#         '-no docstring-'
#         #return 
#
#     def OpenCurrentDatabaseOld(self, filepath, Exclusive):
#         '-no docstring-'
#         #return 
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MenuBar = property(_get, _set, doc = _set.__doc__)
#
#     @property
#     def CurrentObjectType(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CurrentObjectName(self):
#         '-no docstring-'
#         #return pRet
#
#     def GetOption(self, OptionName):
#         '-no docstring-'
#         #return pRet
#
#     def SetOption(self, OptionName, Setting):
#         '-no docstring-'
#         #return 
#
#     def Echo(self, EchoOn, bstrStatusBarText):
#         '-no docstring-'
#         #return 
#
#     def CloseCurrentDatabase(self):
#         '-no docstring-'
#         #return 
#
#     def Quit(self, Option):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Forms(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Reports(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Screen(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DoCmd(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfVisible
#     def _set(self, pfVisible):
#         '-no docstring-'
#     Visible = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pfUserCtrl
#     def _set(self, pfUserCtrl):
#         '-no docstring-'
#     UserControl = property(_get, _set, doc = _set.__doc__)
#
#     def SysCmd(self, Action, Argument2, Argument3):
#         '-no docstring-'
#         #return pRet
#
#     def CreateForm(self, Database, FormTemplate):
#         '-no docstring-'
#         #return pRet
#
#     def CreateReport(self, Database, ReportTemplate):
#         '-no docstring-'
#         #return pRet
#
#     def CreateControlOld(self, FormName, ControlType, Section, Parent, ColumnName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateReportControlOld(self, ReportName, ControlType, Section, Parent, ColumnName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateControlExOld(self, FormName, ControlType, Section, Parent, ControlSource, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateReportControlExOld(self, ReportName, ControlType, Section, Parent, ControlName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def DeleteControl(self, FormName, ControlName):
#         '-no docstring-'
#         #return 
#
#     def DeleteReportControl(self, ReportName, ControlName):
#         '-no docstring-'
#         #return 
#
#     def CreateGroupLevel(self, ReportName, Expression, Header, Footer):
#         '-no docstring-'
#         #return pRet
#
#     def DMin(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DMax(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DSum(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DAvg(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DLookup(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DLast(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DVar(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DVarP(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DStDev(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DStDevP(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DFirst(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def DCount(self, Expr, Domain, Criteria):
#         '-no docstring-'
#         #return pRet
#
#     def Eval(self, StringExpr):
#         '-no docstring-'
#         #return pRet
#
#     def CurrentUser(self):
#         '-no docstring-'
#         #return pRet
#
#     def DDEInitiate(self, Application, Topic):
#         '-no docstring-'
#         #return pRet
#
#     def DDEExecute(self, ChanNum, Command):
#         '-no docstring-'
#         #return 
#
#     def DDEPoke(self, ChanNum, Item, Data):
#         '-no docstring-'
#         #return 
#
#     def DDERequest(self, ChanNum, Item):
#         '-no docstring-'
#         #return pRet
#
#     def DDETerminate(self, ChanNum):
#         '-no docstring-'
#         #return 
#
#     def DDETerminateAll(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def DBEngine(self):
#         '-no docstring-'
#         #return pRet
#
#     def CurrentDb(self):
#         '-no docstring-'
#         #return pRet
#
#     def CodeDb(self):
#         '-no docstring-'
#         #return pRet
#
#     def BeginUndoable(self, Hwnd):
#         '-no docstring-'
#         #return 
#
#     def SetUndoRecording(self, yesno):
#         '-no docstring-'
#         #return 
#
#     def BuildCriteria(self, Field, FieldType, Expression):
#         '-no docstring-'
#         #return pRet
#
#     def InsertText(self, Text, ModuleName):
#         '-no docstring-'
#         #return 
#
#     def ReloadAddIns(self):
#         '-no docstring-'
#         #return 
#
#     def DefaultWorkspaceClone(self):
#         '-no docstring-'
#         #return pRet
#
#     def RefreshTitleBar(self):
#         '-no docstring-'
#         #return 
#
#     def AddAutoCorrect(self, ChangeFrom, ChangeTo):
#         '-no docstring-'
#         #return 
#
#     def DelAutoCorrect(self, ChangeFrom):
#         '-no docstring-'
#         #return 
#
#     def hWndAccessApp(self):
#         '-no docstring-'
#         #return phWndAccessAppWnd
#
#     def Run(self, Procedure):
#         '-no docstring-'
#         #return Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30, pRet
#
#     def Nz(self, Value, ValueIfNull):
#         '-no docstring-'
#         #return pRet
#
#     def LoadPicture(self, FileName):
#         '-no docstring-'
#         #return pRet
#
#     def ReplaceModule(self, objtyp, ModuleName, FileName, token):
#         '-no docstring-'
#         #return 
#
#     def AccessError(self, ErrorNumber):
#         '-no docstring-'
#         #return pRet
#
#     def BuilderString(self):
#         '-no docstring-'
#         #return pRet
#
#     def StringFromGUID(self, Guid):
#         '-no docstring-'
#         #return pRet
#
#     def GUIDFromString(self, String):
#         '-no docstring-'
#         #return pRet
#
#     def AppLoadString(self, id):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CommandBars(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Assistant(self):
#         '-no docstring-'
#         #return pRet
#
#     def FollowHyperlink(self, Address, SubAddress, NewWindow, AddHistory, ExtraInfo, Method, HeaderInfo):
#         '-no docstring-'
#         #return 
#
#     def SaveAsText(self, ObjectType, ObjectName, FileName):
#         '-no docstring-'
#         #return 
#
#     def LoadFromText(self, ObjectType, ObjectName, FileName):
#         '-no docstring-'
#         #return 
#
#     def AddToFavorites(self):
#         '-no docstring-'
#         #return 
#
#     def RefreshDatabaseWindow(self):
#         '-no docstring-'
#         #return 
#
#     @property
#     def References(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Modules(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def FileSearch(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def IsCompiled(self):
#         '-no docstring-'
#         #return pfCompiled
#
#     def RunCommand(self, Command):
#         '-no docstring-'
#         #return 
#
#     def HyperlinkPart(self, Hyperlink, Part):
#         '-no docstring-'
#         #return pRet
#
#     def GetHiddenAttribute(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return pfHidden
#
#     def SetHiddenAttribute(self, ObjectType, ObjectName, fHidden):
#         '-no docstring-'
#         #return 
#
#     @property
#     def VBE(self):
#         '-no docstring-'
#         #return ppVBE
#
#     @property
#     def DataAccessPages(self):
#         '-no docstring-'
#         #return pRet
#
#     def CreateDataAccessPage(self, FileName, CreateNewFile):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ADOConnectString(self):
#         '-no docstring-'
#         #return pbstrADOConnectString
#
#     @property
#     def CurrentProject(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CurrentData(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CodeProject(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def CodeData(self):
#         '-no docstring-'
#         #return pRet
#
#     def NewAccessProject(self, filepath, Connect):
#         '-no docstring-'
#         #return 
#
#     def OpenAccessProject(self, filepath, Exclusive):
#         '-no docstring-'
#         #return 
#
#     def CreateAccessProject(self, filepath, Connect):
#         '-no docstring-'
#         #return 
#
#     @property
#     def WizHook(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def ProductCode(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def COMAddIns(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Name(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def DefaultWebOptions(self):
#         '-no docstring-'
#         #return ppDWO
#
#     @property
#     def LanguageSettings(self):
#         '-no docstring-'
#         #return ppRet
#
#     @property
#     def AnswerWizard(self):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return FeatureInstall
#     def _set(self, FeatureInstall):
#         '-no docstring-'
#     FeatureInstall = property(_get, _set, doc = _set.__doc__)
#
#     def EuroConvert(self, Number, SourceCurrency, TargetCurrency, FullPrecision, TriangulationPrecision):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def VGXFrameInterval(self):
#         '-no docstring-'
#         #return pnmsec
#
#     @property
#     def FileDialog(self, dialogType):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def BrokenReference(self):
#         '-no docstring-'
#         #return pfBrokenReference
#
#     def CreateNewWorkgroupFile(self, Path, Name, Company, WorkgroupID, Replace):
#         '-no docstring-'
#         #return 
#
#     def SetDefaultWorkgroupFile(self, Path):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Printers(self):
#         '-no docstring-'
#         #return pRet
#
#     def Printer(self, pRet):
#         '-no docstring-'
#         #return 
#
#     @property
#     def MsoDebugOptions(self):
#         '-no docstring-'
#         #return MsoDebugOptions
#
#     def ConvertAccessProject(self, SourceFilename, DestinationFilename, DestinationFileFormat):
#         '-no docstring-'
#         #return 
#
#     @property
#     def Version(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Build(self):
#         '-no docstring-'
#         #return pRet
#
#     def OpenCurrentDatabase(self, filepath, Exclusive, bstrPassword):
#         '-no docstring-'
#         #return 
#
#     def CompactRepair(self, SourceFile, DestinationFile, LogFile):
#         '-no docstring-'
#         #return pfRet
#
#     def ExportXMLOld(self, ObjectType, DataSource, DataTarget, SchemaTarget, PresentationTarget, ImageTarget, Encoding, OtherFlags):
#         '-no docstring-'
#         #return 
#
#     def ImportXML(self, DataSource, ImportOptions):
#         '-no docstring-'
#         #return 
#
#     @property
#     def NewFileTaskPane(self):
#         '-no docstring-'
#         #return pRet
#
#     def TransformXML(self, DataSource, TransformSource, OutputTarget, WellFormedXMLOutput, ScriptOption):
#         '-no docstring-'
#         #return 
#
#     def CreateAdditionalData(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def AutoCorrect(self):
#         '-no docstring-'
#         #return pRet
#
#     def ExportXML(self, ObjectType, DataSource, DataTarget, SchemaTarget, PresentationTarget, ImageTarget, Encoding, OtherFlags, WhereCondition, AdditionalData):
#         '-no docstring-'
#         #return 
#
#     def IsMemberSafe(self, dispid):
#         '-no docstring-'
#         #return pRet
#
#     def _get(self):
#         '-no docstring-'
#         #return pAutomationSecurity
#     def _set(self, pAutomationSecurity):
#         '-no docstring-'
#     AutomationSecurity = property(_get, _set, doc = _set.__doc__)
#
#     def NewCurrentDatabase(self, filepath, FileFormat, Template, SiteAddress, ListID):
#         '-no docstring-'
#         #return 
#
#     def PlainText(self, RichText, Length):
#         '-no docstring-'
#         #return pRet
#
#     def HtmlEncode(self, PlainText, Length):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def MacroError(self):
#         '-no docstring-'
#         #return pRet
#
#     def LoadCustomUI(self, CustomUIName, CustomUIXML):
#         '-no docstring-'
#         #return 
#
#     @property
#     def TempVars(self):
#         '-no docstring-'
#         #return pRet
#
#     def ExportNavigationPane(self, Path):
#         '-no docstring-'
#         #return 
#
#     def ImportNavigationPane(self, Path, fAppendOnly):
#         '-no docstring-'
#         #return 
#
#     def ColumnHistory(self, TableName, ColumnName, queryString):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def Assistance(self):
#         '-no docstring-'
#         #return pRet
#
#     def CreateControl(self, FormName, ControlType, Section, Parent, ColumnName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateReportControl(self, ReportName, ControlType, Section, Parent, ColumnName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateControlEx(self, FormName, ControlType, Section, Parent, ControlSource, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def CreateReportControlEx(self, ReportName, ControlType, Section, Parent, ControlName, Left, Top, Width, Height):
#         '-no docstring-'
#         #return pRet
#
#     def ExportCustomFixedFormat(self, ExternalExporter, OutputFileName, ObjectName, ObjectType, SelectedRecords, FromPage, ToPage):
#         '-no docstring-'
#         #return 
#
#     def SaveAsAXL(self, ObjectType, ObjectName, FileName):
#         '-no docstring-'
#         #return 
#
#     def LoadFromAXL(self, ObjectType, ObjectName, FileName):
#         '-no docstring-'
#         #return 
#
#     def SaveAsTemplate(self, Path, Title, IconPath, CoreTable, Category, PreviewPath, Description, InstantiationForm, ApplicationPart, IncludeData, Variation):
#         '-no docstring-'
#         #return 
#
#     def InstantiateTemplate(self, Path):
#         '-no docstring-'
#         #return 
#
#     @property
#     def WebServices(self):
#         '-no docstring-'
#         #return pRet
#
#     @property
#     def LocalVars(self):
#         '-no docstring-'
#         #return pRet
#
#     def CurrentWebUser(self, DisplayOption):
#         '-no docstring-'
#         #return pvarRet
#
#     def CurrentWebUserGroups(self, DisplayOption):
#         '-no docstring-'
#         #return pvarRet
#
#     def IsCurrentWebUserInGroup(self, GroupNameOrID):
#         '-no docstring-'
#         #return pfRet
#
#     def DirtyObject(self, ObjectType, ObjectName):
#         '-no docstring-'
#         #return 
#
#     def IsClient(self):
#         '-no docstring-'
#         #return pf
#
#     @property
#     def ReturnVars(self):
#         '-no docstring-'
#         #return pRet
#


class __Help(comtypes.gen._00020430_0000_0000_C000_000000000046_0_2_0.IUnknown):
    _case_insensitive_ = True
    _iid_ = GUID('{9CD4A761-A6A9-11CE-A686-00AA003F0F07}')
    _idlflags_ = ['hidden']

    if TYPE_CHECKING:  # commembers
        def _get_FieldName(self) -> hints.Incomplete: ...
        def _set_FieldName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FieldName = hints.normal_property(_get_FieldName, _set_FieldName)
        def _get_DataType(self) -> hints.Incomplete: ...
        def _set_DataType(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DataType = hints.normal_property(_get_DataType, _set_DataType)
        def _get_Description(self) -> hints.Incomplete: ...
        def _set_Description(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Description = hints.normal_property(_get_Description, _set_Description)
        def _get_FieldSize(self) -> hints.Incomplete: ...
        def _set_FieldSize(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        FieldSize = hints.normal_property(_get_FieldSize, _set_FieldSize)
        def _get_NewValues(self) -> hints.Incomplete: ...
        def _set_NewValues(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        NewValues = hints.normal_property(_get_NewValues, _set_NewValues)
        def _get_Required(self) -> hints.Incomplete: ...
        def _set_Required(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Required = hints.normal_property(_get_Required, _set_Required)
        def _get_AllowZeroLength(self) -> hints.Incomplete: ...
        def _set_AllowZeroLength(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowZeroLength = hints.normal_property(_get_AllowZeroLength, _set_AllowZeroLength)
        def _get_Indexed(self) -> hints.Incomplete: ...
        def _set_Indexed(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        Indexed = hints.normal_property(_get_Indexed, _set_Indexed)
        def _get_DisplayControl(self) -> hints.Incomplete: ...
        def _set_DisplayControl(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        DisplayControl = hints.normal_property(_get_DisplayControl, _set_DisplayControl)
        def _get_ReplicationConflictFunction(self) -> hints.Incomplete: ...
        def _set_ReplicationConflictFunction(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ReplicationConflictFunction = hints.normal_property(_get_ReplicationConflictFunction, _set_ReplicationConflictFunction)
        def _get_ProjectName(self) -> hints.Incomplete: ...
        def _set_ProjectName(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ProjectName = hints.normal_property(_get_ProjectName, _set_ProjectName)
        def _get_MDE(self) -> hints.Incomplete: ...
        def _set_MDE(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        MDE = hints.normal_property(_get_MDE, _set_MDE)
        def _get_AllowBreakIntoCode(self) -> hints.Incomplete: ...
        def _set_AllowBreakIntoCode(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowBreakIntoCode = hints.normal_property(_get_AllowBreakIntoCode, _set_AllowBreakIntoCode)
        def _get_AllowBuiltInToolbars(self) -> hints.Incomplete: ...
        def _set_AllowBuiltInToolbars(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowBuiltInToolbars = hints.normal_property(_get_AllowBuiltInToolbars, _set_AllowBuiltInToolbars)
        def _get_AllowBypassKey(self) -> hints.Incomplete: ...
        def _set_AllowBypassKey(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowBypassKey = hints.normal_property(_get_AllowBypassKey, _set_AllowBypassKey)
        def _get_AllowFullMenus(self) -> hints.Incomplete: ...
        def _set_AllowFullMenus(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowFullMenus = hints.normal_property(_get_AllowFullMenus, _set_AllowFullMenus)
        def _get_AllowSpecialKeys(self) -> hints.Incomplete: ...
        def _set_AllowSpecialKeys(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowSpecialKeys = hints.normal_property(_get_AllowSpecialKeys, _set_AllowSpecialKeys)
        def _get_AllowToolbarChanges(self) -> hints.Incomplete: ...
        def _set_AllowToolbarChanges(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AllowToolbarChanges = hints.normal_property(_get_AllowToolbarChanges, _set_AllowToolbarChanges)
        def _get_StartUpForm(self) -> hints.Incomplete: ...
        def _set_StartUpForm(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StartUpForm = hints.normal_property(_get_StartUpForm, _set_StartUpForm)
        def _get_StartUpMenuBar(self) -> hints.Incomplete: ...
        def _set_StartUpMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StartUpMenuBar = hints.normal_property(_get_StartUpMenuBar, _set_StartUpMenuBar)
        def _get_StartUpShortcutMenuBar(self) -> hints.Incomplete: ...
        def _set_StartUpShortcutMenuBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StartUpShortcutMenuBar = hints.normal_property(_get_StartUpShortcutMenuBar, _set_StartUpShortcutMenuBar)
        def _get_StartUpShowDBWindow(self) -> hints.Incomplete: ...
        def _set_StartUpShowDBWindow(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StartUpShowDBWindow = hints.normal_property(_get_StartUpShowDBWindow, _set_StartUpShowDBWindow)
        def _get_StartUpShowStatusBar(self) -> hints.Incomplete: ...
        def _set_StartUpShowStatusBar(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        StartUpShowStatusBar = hints.normal_property(_get_StartUpShowStatusBar, _set_StartUpShowStatusBar)
        def _get_AppIcon(self) -> hints.Incomplete: ...
        def _set_AppIcon(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AppIcon = hints.normal_property(_get_AppIcon, _set_AppIcon)
        def _get_AppTitle(self) -> hints.Incomplete: ...
        def _set_AppTitle(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        AppTitle = hints.normal_property(_get_AppTitle, _set_AppTitle)
        def _get_ODBCConnectStr(self) -> hints.Incomplete: ...
        def _set_ODBCConnectStr(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        ODBCConnectStr = hints.normal_property(_get_ODBCConnectStr, _set_ODBCConnectStr)
        def _get_LogMessages(self) -> hints.Incomplete: ...
        def _set_LogMessages(self, pRet: hints.Incomplete) -> hints.Hresult: ...
        LogMessages = hints.normal_property(_get_LogMessages, _set_LogMessages)


__Help._methods_ = [
    COMMETHOD(
        ['propget'],
        HRESULT,
        'FieldName',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'FieldName',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'DataType',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'DataType',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'Description',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'Description',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'FieldSize',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'FieldSize',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'NewValues',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'NewValues',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'Required',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'Required',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowZeroLength',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowZeroLength',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'Indexed',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'Indexed',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'DisplayControl',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'DisplayControl',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'ReplicationConflictFunction',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'ReplicationConflictFunction',
        (['in'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'ProjectName',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'ProjectName',
        (['in'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'MDE',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'MDE',
        (['in'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowBreakIntoCode',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowBreakIntoCode',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowBuiltInToolbars',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowBuiltInToolbars',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowBypassKey',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowBypassKey',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowFullMenus',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowFullMenus',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowSpecialKeys',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowSpecialKeys',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AllowToolbarChanges',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AllowToolbarChanges',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'StartUpForm',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'StartUpForm',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'StartUpMenuBar',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'StartUpMenuBar',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'StartUpShortcutMenuBar',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'StartUpShortcutMenuBar',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'StartUpShowDBWindow',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'StartUpShowDBWindow',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'StartUpShowStatusBar',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'StartUpShowStatusBar',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AppIcon',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AppIcon',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'AppTitle',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'AppTitle',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'ODBCConnectStr',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'ODBCConnectStr',
        (['in'], VARIANT, 'pRet')
    ),
    COMMETHOD(
        ['propget'],
        HRESULT,
        'LogMessages',
        (['out', 'retval'], POINTER(VARIANT), 'pRet')
    ),
    COMMETHOD(
        ['propput'],
        HRESULT,
        'LogMessages',
        (['in'], POINTER(VARIANT), 'pRet')
    ),
]

################################################################
# code template for __Help implementation
# class __Help_Impl(object):
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FieldName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DataType = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Description = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     FieldSize = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     NewValues = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Required = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowZeroLength = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     Indexed = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     DisplayControl = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ReplicationConflictFunction = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ProjectName = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     MDE = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowBreakIntoCode = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowBuiltInToolbars = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowBypassKey = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowFullMenus = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowSpecialKeys = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AllowToolbarChanges = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StartUpForm = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StartUpMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StartUpShortcutMenuBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StartUpShowDBWindow = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     StartUpShowStatusBar = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AppIcon = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     AppTitle = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     ODBCConnectStr = property(_get, _set, doc = _set.__doc__)
#
#     def _get(self):
#         '-no docstring-'
#         #return pRet
#     def _set(self, pRet):
#         '-no docstring-'
#     LogMessages = property(_get, _set, doc = _set.__doc__)
#

__ControlInReportEvents._methods_ = [
]

################################################################
# code template for __ControlInReportEvents implementation
# class __ControlInReportEvents_Impl(object):

_ComboBoxEvents._methods_ = [
    COMMETHOD(
        [],
        HRESULT,
        'BeforeUpdate',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'AfterUpdate'),
    COMMETHOD([], HRESULT, 'Change'),
    COMMETHOD(
        [],
        HRESULT,
        'NotInList',
        (['in', 'out'], POINTER(BSTR), 'NewData'),
        (['out'], POINTER(c_short), 'Response')
    ),
    COMMETHOD([], HRESULT, 'Enter'),
    COMMETHOD(
        [],
        HRESULT,
        'Exit',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD([], HRESULT, 'GotFocus'),
    COMMETHOD([], HRESULT, 'LostFocus'),
    COMMETHOD([], HRESULT, 'Click'),
    COMMETHOD(
        [],
        HRESULT,
        'DblClick',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseDown',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseMove',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'MouseUp',
        (['in', 'out'], POINTER(c_short), 'Button'),
        (['in', 'out'], POINTER(c_short), 'Shift'),
        (['in', 'out'], POINTER(c_float), 'X'),
        (['in', 'out'], POINTER(c_float), 'Y')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyDown',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyPress',
        (['in', 'out'], POINTER(c_short), 'KeyAscii')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'KeyUp',
        (['in', 'out'], POINTER(c_short), 'KeyCode'),
        (['in', 'out'], POINTER(c_short), 'Shift')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Dirty',
        (['out'], POINTER(c_short), 'Cancel')
    ),
    COMMETHOD(
        [],
        HRESULT,
        'Undo',
        (['out'], POINTER(c_short), 'Cancel')
    ),
]

################################################################
# code template for _ComboBoxEvents implementation
# class _ComboBoxEvents_Impl(object):
#     def BeforeUpdate(self):
#         '-no docstring-'
#         #return Cancel
#
#     def AfterUpdate(self):
#         '-no docstring-'
#         #return 
#
#     def Change(self):
#         '-no docstring-'
#         #return 
#
#     def NotInList(self):
#         '-no docstring-'
#         #return NewData, Response
#
#     def Enter(self):
#         '-no docstring-'
#         #return 
#
#     def Exit(self):
#         '-no docstring-'
#         #return Cancel
#
#     def GotFocus(self):
#         '-no docstring-'
#         #return 
#
#     def LostFocus(self):
#         '-no docstring-'
#         #return 
#
#     def Click(self):
#         '-no docstring-'
#         #return 
#
#     def DblClick(self):
#         '-no docstring-'
#         #return Cancel
#
#     def MouseDown(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseMove(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def MouseUp(self):
#         '-no docstring-'
#         #return Button, Shift, X, Y
#
#     def KeyDown(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def KeyPress(self):
#         '-no docstring-'
#         #return KeyAscii
#
#     def KeyUp(self):
#         '-no docstring-'
#         #return KeyCode, Shift
#
#     def Dirty(self):
#         '-no docstring-'
#         #return Cancel
#
#     def Undo(self):
#         '-no docstring-'
#         #return Cancel
#

__all__ = [
    '_Control', 'vbKeyF15', 'acPropCatOther',
    'acCmdSubdatasheetRemove', 'DispObjectFrameEvents',
    'acSpreadsheetTypeExcel3', 'acCmdPivotAutoStdDev',
    'acCmdApplyAutoFormat25', 'acCmdPivotDropAreas',
    '_OptionButtonInOption', 'acCmdEditTriggers',
    'acCmdViewShowPaneSQL', 'acCmdQueryTypeDelete',
    'acPRPSEnvMonarch', 'DB_SEC_READDEF', '_CustomControl',
    'A_PRINTALL', 'acColorIndexMaroon', 'LB_GETVALUE',
    'acSelectRecord', 'acViewPivotChart', 'acCmdMacroConditions',
    'AcPrintRange', 'DispEdgeEvents', 'AllDatabaseDiagrams',
    'acEffectChisel', 'acLBGetColumnWidth', '_ChildLabel',
    'AcPrintColor', 'acCmdWebPageProperties', 'acCmdSaveAsIDC',
    'DB_MEMO', 'acCmdImportAttachHTML', 'acOptionButton',
    'AcDisplayAsHyperlink', 'acBoundObjectFrame', 'vbKeyMenu',
    'acCmdPivotShowTop5', 'acPRBNAuto', 'AcSplitFormOrientation',
    'A_OBJECTVERB', 'DispChildLabelEvents', 'ChartAxisCollection',
    'vbKeyNumpad1', 'DATA_ERRCONTINUE', 'vbKey8', 'acOLEUpdate',
    'acFormatXLSX', 'acCmdViewTableColumnNames', 'vbKeySubtract',
    'acCmdRunMacro', 'V_STRING', 'acApplyFilter',
    'acGroupLevel1Header', 'DB_LANG_GENERAL', 'acDisableScript',
    'acDown', 'acCmdQueryTypeAppend', 'acCmdReportView',
    'A_TOOLBAR_YES', 'acCmdVerticalSpacingIncrease',
    'acCmdSubformPivotChartView', 'acPRPSESheet', 'WebServices',
    'acWebUserGroupName', 'AcWindowMode', 'AcImeSentenceMode',
    'acCmdNewObjectBlankFormWeb', 'vbKeyRButton',
    'acCmdDiagramLayoutDiagram', 'acColorIndexWhite', 'DB_LONG',
    'acApplyServerFilter', 'acCmdLayoutInsertRowBelow',
    'acCmdAutoCorrect', 'A_PROMPT', 'DB_LANG_NORWDAN',
    'acPRPSEnvItaly', 'acMenuUngray', 'acDataForm', 'acPRPSEnvDL',
    'acCmdHideColumns', 'A_FORMATRTF', 'acCmdAnswerWizard',
    '_Report2', 'DispRectangleEvents', 'acWebUserName',
    '_RecordsetEvents', 'acSendModule', 'acImportSharePointList',
    'acCmdNewObjectNavigationTopLeftWeb', 'acSysCmdGetObjectState',
    'acColorIndexBlue', '_AddTileUIReceiver', 'acLoaded',
    'ImportExportSpecification', 'acMarkerPlus', 'DB_DESCENDING',
    'acNumber', 'acCmdGoForward', 'DB_SEC_CREATE',
    'acCmdDiagramNewLabel', 'AcDataAccessPageView',
    '_SectionInReportEvents', 'acChartArea',
    'acCmdDataAccessPageBrowse', 'acPRBNSmallFmt', 'acDataTable',
    'acCmdReportHdrFtr', 'acCmdExit', '_OptionGroup',
    'acDefViewPivotTable', 'acCmdTileHorizontally', 'acDashTypeDash',
    'acPRBNCassette', 'DispPageBreakEvents', 'acPageFooter',
    'acCmdManageTableEvents', 'acFormatXPS', 'acCmdCut',
    'acCmdClearHyperlink', 'acCmdNewObjectView', 'acCmdFilterMenu',
    'AcFormView', 'acCmdAddFromOutlook', 'acCmdHideTable',
    'SharedResources', 'acPRPS11x17', 'A_PREVIOUS', 'acCmdQuickPrint',
    'acCmdViewVerifySQL', 'MacroError', 'acCurViewPivotChart',
    'acCmdInsertPivotTable', '_CustomControlInReportEvents',
    'A_IMPORT', 'acMiddleButton', 'acCmdImportAttachXML',
    'acChartBarClustered', 'acOLEInsertObjDlg', 'acImeModeOn',
    'acFormPivotTable', 'acToggleButton', 'acCmdDiscardChanges',
    'A_SELECTALLRECORDS_V2', 'acCmdUserAndGroupAccounts',
    '_PaletteButton', 'acDatabaseProperties', 'ChartSeries',
    'acColorIndexTeal', 'acAggregateMaximum',
    'acCmdDiagramAddRelatedTables', 'acCmdArrangeIconsByModified',
    'acCmdViewGrid', 'acOLEEither', 'DB_SEC_MOD_READDEF',
    'acCmdTransparentBorder', 'DB_RELATIONUNIQUE',
    'DELETE_USER_CANCEL', 'vbKeyE', 'acOutputStoredProcedure',
    'acImportHTML', 'CurrentData', 'acSysCmdAccessDir',
    'acSpreadsheetTypeExcel97', 'SharedResource', 'PageBreak',
    'acWebUserGroupID', 'vbKey2', 'acCmdModifySharePointList',
    'A_DRAFT', 'acCmdApplyAutoFormat2', 'acCmdImport',
    'acSecMacWriteDef', 'acCmdWindowSplit', 'acCmdRunOpenMacro',
    'acCmdVisualBasicEditor', 'acCmdPivotTableExpandIndicators',
    'acCmdCompatCheckDatabase', 'acCmdPivotAutoVar',
    '_DesignerReceiver', 'AcImeMode', '_DispControlInReportEvents',
    'acPRPSFanfoldStdGerman', 'acExportFixed',
    'acCmdCompileAllModules', 'OptionButton',
    'acCmdNewObjectDataAccessPage', 'vbKeyF7', 'DependencyInfo',
    'acCmdNewObjectNavigationLeftWeb', '_ReportEvents2', 'vbKeyI',
    'acCmdAutoFormat', 'acCmdLinkTables',
    'ImportExportSpecifications', 'acSpreadsheetTypeExcel8',
    'acPRBNUpper', 'acOLECreateNew', 'acCmdPivotTablePercentRowTotal',
    'AcFormatConditionOperator', 'DispEmptyCellEvents', 'acAddress',
    'DB_DENYWRITE', 'vbKeyRight', 'A_TOOLBAR_WHERE_APPROP',
    'acCmdChangeToLabel', 'acDataAccessPageBrowse', 'AcLayoutType',
    'vbKeyW', 'acCmdPivotTableSubtotal',
    'acCmdRemoveFilterFromCurrentColumn', 'DB_SEC_DELETE',
    'acCmdPivotTablePromote', 'acCmdResolveConflicts',
    'SYSCMD_CLEARSTATUS', 'vbKey6', 'acCmdApplyAutoFormat4',
    'acCmdWindowCascade', 'DB_LANG_SPANISH',
    'acCmdLayoutGridlinesBottom', 'acCmdLayoutInsertColumnRight',
    'acCmdPivotShowBottom1', 'acStructureAndData',
    'acCmdShowLogicCatalog', 'acCmdQueryTypeSelect', 'Children',
    'acOLEUpdateManual', 'acCmdCreateShortcut', 'acPRBNTractor',
    'acSendReport', 'acChartAreaStacked', 'AcFilterType',
    'acCmdSaveRecord', 'DB_SEC_FRMRPT_EXECUTE', 'DB_CONSISTENT',
    'DB_SORTCYRILLIC', 'acCmdDatabaseProperties', 'acPRPSB4',
    'acPropertyCaption', 'DispToggleButtonEvents',
    'acCmdHorizontalSpacingDecrease', 'acCmdCopy',
    'acCmdApplyAutoFormat11', 'AcLegendPosition', '_TempVar',
    'acMenuCheck', 'acPRPSEnvB6', 'acCmdDeleteSharePointList',
    'acCmdZoom150', 'DB_SINGLE', 'acAnywhere', 'DB_FREELOCKS',
    'acCmdQueryTypeUpdate', 'acCmdDeleteGroup', 'vbKeyM', 'acPercent',
    'acCmdPivotExpand', 'acPropCatEvent', 'AcPrintObjQuality',
    'acToolbarNo', 'acDatasheetOnTop', 'acExportStoredProcedure',
    'acChartColumnClustered', 'acCmdApplyAutoFormat5',
    'acCmdOpenStartPage', 'DB_QDDL', 'vbKeyP', 'acCmdDocSize',
    'acCmdGoContinue', 'acEdit', 'acGreaterThanOrEqual',
    'acSpreadsheetTypeLotusWK1', 'acCmdNewObjectNavigationTopLeft',
    'AllViews', 'vbKeyNumpad5', 'acNewDatabaseFormatAccess2000',
    'acImeModeAlphaFull', 'vbKeyF3', 'vbKey1', 'acFormatPDF',
    'DB_QSELECT', 'acCmdArrangeIconsAuto',
    'acCmdDiagramDeleteRelationship', 'vbKeyNumlock',
    'acChartScatter', 'acChartLineStacked', '_DataAccessPage',
    'vbKeyF4', 'acCmdInsertObject', 'AcWebUserDisplay',
    'acCmdNewObjectNavigationTopRightWeb', 'acCmdViewSmallIcons',
    'DB_UPDATABLEFIELD', 'DB_LANG_ICELANDIC', 'acCmdPreviewTwoPages',
    'acCmdInsertMovieFromFile', 'Page',
    'acCmdNewObjectBlankReportWeb', 'acCmdShowDatePicker',
    'DB_QAPPEND', 'acExportQualityPrint', 'vbKeyF5', 'acPRORPortrait',
    'acCmdOLEDDELinks', 'acCmdAlignCenter', 'acCmdViewRuler',
    'acCmdAlignRight', 'acCmdPivotShowTop25Percent', 'acPropertyLeft',
    'acCmdZoom100', 'acCmdSyncWebApplication', 'DB_SEC_READSEC',
    'AdditionalData', 'acCmdBookmarksToggle', 'acCmdSelectEntireRow',
    'acCmdClose', 'vbKeySnapshot', 'acCmdPivotShowTop2Percent',
    'acQuitPrompt', 'acCmdApplyDefault', 'vbKeyHome',
    '_AccessProperty', 'acToolbarYes', 'acCmdInsertProcedure',
    'acCmdViewTableUserView', 'acCmdMoreWindows',
    'acCmdRecordsGoToLast', 'acCmdPivotTablePercentColumnTotal',
    '_TextBoxEvents', 'acCmdViewLargeIcons', 'A_CURRENT',
    'acCmdDeleteTable', 'acCmdQueryTypeCrosstab', 'acCustomControl',
    'acCmdWorkgroupAdministrator', 'acPRDPVertical', 'acLinkFixed',
    'acCmdSaveSelectionAsNewDataType', 'acHidden', 'acCmdCallStack',
    'acSeparatorCharactersSystemSeparator', 'acDisplayedValue',
    'acOLENone', 'acRefresh', 'acCmdReset',
    'acCmdNewObjectDesignTable', 'acCtrlMask', 'DB_VERSION10',
    'DB_SORTPDXSWE', 'Printer', 'DB_SEC_FRMRPT_READDEF',
    'acCmdStopLoadingPage', 'acCmdCreateToolbarFromMacro',
    'acGridlinesVert', 'acPRPSEnvC65', 'Form', 'acRunFromServer',
    'AcChartType', 'AcPrintQuality', 'acOLEPasteSpecialDlg',
    'acCmdAboutMicrosoftAccess', 'acCmdRemoveFilterSort', 'acLeft',
    'acCmdVerticalSpacingMakeEqual', 'TempVar', 'acSecModWriteDef',
    'vbKeyU', 'acCmdInsertSpreadsheet', 'acCmdStartupProperties',
    'acCmdSizeToFitForm', 'acCmdCompatCheckCurrentObject',
    'acCmdApplyAutoFormat20', 'acCmdLayoutMergeCells', 'acFormatSNP',
    'acMarkerDiamond', 'AllModules', 'DispTabControlEvents',
    'acCmdNewObjectMacroWeb', 'acTabCtl', '_SubFormEvents',
    'DB_SORTNORWDAN', 'acPRPSFanfoldUS', '_Line', 'acWindowNormal',
    'acCmdDiagramModifyUserDefinedView', '_FormatCondition',
    '_ReturnVar', 'OLE_CLOSED', 'V_CURRENCY',
    'acCmdViewTableColumnProperties', 'acDeleteOK',
    'acCmdServerProperties', 'A_HIDDEN', 'acAxisUnitsBillions',
    '_Rectangle', 'vbKeyMButton', 'AcFormatBarLimits',
    'acCmdSaveAsQuery', 'DependencyObjects',
    'DispCustomControlInReportEvents', 'acCheckBox', 'acGreaterThan',
    'DB_SORTPDXNOR', 'AcTransformXMLScriptOption',
    'acCmdPivotShowBottom2Percent', '_PaletteButtonEvents',
    'A_FORMATTXT', 'acCmdAnchorStretchDownRight', 'acCmdSnapToGrid',
    'acDataQuery', 'acRightButton', 'acRight', 'acPRBNEnvManual',
    'A_PREVIEW', 'acCmdMicrosoftOnTheWeb', 'acReport', 'acScrollAuto',
    'acOLEPaste', '_WebOptions', 'Screen', 'acChartPareto',
    'AllTables', 'A_DIALOG', 'acColorIndexSilver', 'acModule',
    'acFileFormatAccess2000', 'DB_SEC_WRITESEC', 'acSysCmdRuntime',
    'acChartLine', 'vbKeyExecute',
    'acCmdDataAccessPageFieldListRefresh', 'acHeader',
    'acTrendlineMovingAverage', 'acCmdCompileLoadedModules',
    'acCmdModifySharePointListPermissions', 'acCmdViewTables',
    'acCmdNewObjectReport', 'acCmdInsertUnboundSection',
    '_Attachment', 'DB_OLE', 'WizHook',
    'acCmdImportAttachSharePointList', 'vbKey0', 'DB_LANG_SWEDFIN',
    'DB_SEC_INSERTDATA', 'acCmdViewShowPaneDiagram',
    'acStoredProcedure', 'SYSCMD_SETSTATUS', 'acCmdParameterInfo',
    'acCmdSetNextStatement', 'AccessObjectProperties',
    'acCmdLayoutPreview', 'AcView', 'acLBGetRowCount', 'Set',
    '_CurrentProject', 'vbKeyPrint', 'acDefViewContinuous',
    'acCmdStepToCursor', 'DB_SEC_MAC_WRITEDEF', 'acGridlinesHoriz',
    'acCmdFieldList', '_SmartTagProperties', 'acCmdToggleFilter',
    'DB_LANG_CYRILLIC', 'acCmdExportdBase',
    'acCmdInsertNavigationButton', 'acEntire', 'acChartRadar',
    '_LocalVar', 'acCmdApplyAutoFormat15', 'acSysCmdClearHelpTopic',
    'AcMissingDataPolicy', 'acCmdDatasheetView',
    'acCmdAddNamedDataMacro', 'vbKeyZ', 'acOLEVerbHide',
    'acCmdHidePane', 'acChartRadarFilled', 'acCommandButton',
    'acTrendlineNone', 'acCmdExportText', 'acCmdWordMailMerge',
    'acCmdApplyAutoFormat22', 'acResourceImage', 'acCmdSave',
    'acLeftButton', 'AcExportXMLSchemaFormat', 'acCmdViewForms',
    'AcBrowseToObjectType', 'vbKeyD', 'acCmdBookmarksClearAll',
    'acSecFrmRptWriteDef', 'acWebUserLoginName', '_MacroError',
    'acCmdDropSQLDatabase', 'A_READONLY', 'acCmdDesignView',
    'acCmdShowColumnHistory', 'acPages', 'Pages',
    'AcSplitFormPrinting', 'AcSplitFormDatasheet',
    'acCmdGroupByTable', 'A_HIGH', 'acLast',
    'acCmdPublishFixedFormat', 'acCmdMicrosoftScriptEditor',
    'WSParameters', 'acCmdNewObjectDatasheetFormWeb', 'vbKeyF14',
    'acPRPSNote', 'SubReport', 'acCmdApplyAutoFormat13', 'acAltMask',
    '_ToggleButtonEvents', 'acCmdRename', 'AcCursorOnHover',
    'acPRPSStatement', 'acPRPSEnvB5', 'acFileFormatAccess2',
    'acDisplayAsHyperlinkAlways', 'acCmdControlMarginsMedium',
    'Library', 'acCmdPaste', 'DB_CURRENCY', 'AcColorIndex',
    'acCmdAlignmentAndSizing', '_Form2', 'AcExportQuality',
    'acCmdPivotShowTop10', 'acSendTable', 'acCmdPivotTableView',
    'OLE_SAVED', 'acCmdSaveAsOutlookContact', 'acPlotAsInterpolated',
    'acCmdInsertLookupField', 'acCmdExportXML', 'acColorIndexFuschia',
    'A_SELECTRECORD', '_Image', 'acCmdFavoritesOpen',
    'acStructureOnly', 'acCmdAnchorStretchAcross',
    'AcWebBrowserState', 'LocalVar', 'acCmdNewObjectPivotTable',
    'acCmdCloseWindow', 'acCmdEditWatch', 'DB_VERSION20',
    '_LabelEvents', 'acCmdSaveAsASP', 'DB_SORTICELANDIC',
    'DB_FIXEDFIELD', '_Form', 'acCmdPivotTableMoveToColumnArea',
    '_NavigationButton', 'DispSubReportEvents', 'acLabel',
    'acCmdSpelling', 'acViewDesign', 'acCmdToggleBreakpoint',
    'acSendDataAccessPage', 'acChartLineStacked100',
    'acOutputDataAccessPage', 'DB_SQLPASSTHROUGH', '_SmartTagAction',
    'acDefault', 'SYSCMD_ACCESSVER', 'acLegendPositionLeft',
    'acCurViewDatasheet', 'acAxisUnitsHundredThousands',
    'acFormatXLS', '_TabControlEvents', 'acDateGroupNone',
    'DispSectionInReportEvents', 'acCmdSelectAllRecords', 'SmartTags',
    'acSecFrmRptReadDef', 'OLE_CHANGED', 'acAttachment',
    'acTrendlinePower', 'acCmdOptions', 'DispLabelEvents',
    'acOLEActivateManual', 'acActiveDataObject', 'acRectangle',
    'DB_OPTIONINIPATH', 'acCmdShowNextStatement', 'acPrevious',
    'acAdd', 'acCmdCompileAndSaveAllModules', 'DB_FORWARDONLY',
    'acCmdRecoverDesignMaster', 'acCmdSubformInNewWindow',
    'acCmdAddDataMacroBeforeDelete', 'acMacro', 'acSaveNo',
    'acCmdFilterByForm', 'acCmdAddDataMacroAfterInsert',
    'acCmdToolbarControlProperties', 'acChartFunnel',
    'DB_LANG_TURKISH', 'DispOptionButtonEvents', 'A_DOWN',
    'acCmdNewObjectBlankForm', 'acNext', 'acCmdNewGroup',
    'acCmdClearAll', 'vbKeyTab', 'acCmdNewObjectNavigationLeft',
    'acFormDS', 'LB_INITIALIZE', 'acExportQualityScreen',
    'acCmdHorizontalSpacingIncrease', 'acOLERenamed', 'acFormatHTML',
    'acCmdAlignBottom', 'A_EXPORTDELIM', '_ReportEvents',
    'acCmdOLEObjectConvert', 'acCmdPivotChartUndo',
    'acCmdRelationships', 'acCmdApplyAutoFormat8', 'DispImageEvents',
    'acAxisUnitsTenBillions', 'acAxisUnitsThousands', 'vbKeyJ',
    'acPRBNMiddle', 'acCmdDiagramViewPageBreaks', 'acExport',
    'acAggregateCount', '_ComboBoxEvents', 'acCmdImportAttachExcel',
    'DB_OPEN_TABLE', 'acCmdPageHdrFtr', 'A_FORMATXLS', 'vbKeyLButton',
    '_EmptyCell', 'acSelection', 'acCmdAppMinimize',
    'DB_SYSTEMOBJECT', 'acCmdPivotShowTop5Percent', 'acChartArc',
    'acStart', 'acCmdTabularLayout', 'acCurViewReportBrowse',
    'vbKeyDown', 'acCmdCloseDatabase', 'DB_RELATIONLEFT',
    '_ToggleButtonInOption', 'acCmdSelectAll', 'OBJSTATE_OPEN',
    'acObjStateNew', 'acCmdNewObjectFunction', 'acCmdPivotShowTop25',
    'acFileFormatAccess2002', 'acChartBarStacked100', 'vbKeyNumpad7',
    'acOLESaved', 'acCmdTableNames', 'acPRPSFanfoldLglGerman',
    '_OptionButtonEvents', 'acCmdDocMove', 'acCmdZoom25',
    'acNewDatabaseFormatUserDefault', 'A_MODULE',
    'acCmdNewObjectDesignReport', 'acCmdNewObjectLabelsReport',
    'acAxisUnitsHundredMillions', 'DB_SORTPDXINTL',
    'acCmdRemoveAllSorts', 'acOLELinked', 'DispOptionGroupEvents',
    'acCmdStepInto', 'Entity', '_ControlInReportEvents',
    'OBJSTATE_DIRTY', 'acServerView', 'DB_RELATIONINHERITED',
    'acCmdFilterExcludingSelection', '_ChartAxis',
    'AcFormatConditionType', 'acAggregateNone',
    'acCmdLayoutGridlinesNone', 'acBrowseToReport',
    'FormatConditions', 'A_UNDO', 'AcPrintPaperSize',
    'acGridlinesBothV2', 'acLegendPositionRight',
    'acCmdFieldTemplates', 'vbKeyNumpad2', 'acScrollYes',
    'DB_LANG_POLISH', 'acSpreadsheetTypeExcel4', 'A_FORM',
    'acCmdApplyAutoFormat10', 'acPRPSEnvC3', 'acCmdPasteSpecial',
    'acCmdDeleteTableColumn', 'acTextFormatPlain', 'GroupLevel',
    'acCmdTableAddTable', '_ChildLabelEvents', 'acAggregateSum',
    'acCmdBackup', 'DispAttachmentEvents', 'DispTextBoxEvents',
    'acCmdViewMacros', 'DB_APPENDONLY', 'acCmdUpsizingWizard',
    'acCmdEditRelationship', 'acCmdPivotTableShowAsNormal',
    'acCmdPivotTableMoveToFilterArea', 'DB_RELATIONUPDATECASCADE',
    'acCmdLineUpIcons', 'vbKeyG', 'acCmdRowHeight',
    'acTextFormatHTMLRichText', 'acPRPSExecutive', 'acSendQuery',
    'acCmdNewObjectContinuousFormWeb', 'ChartAxis', 'acPRPSTabloid',
    'acDoNotPlot', 'acCmdDeleteWatch', 'A_REPORT', 'acViewPivotTable',
    'acGridlinesBoth', 'typelib_path', 'A_MEDIUM', 'acPlotAsZero',
    'acCmdConvertLinkedTableToLocal', 'acPRORLandscape',
    '_SmartTagProperty', 'ProcKind', 'acPage', 'vbKeyNumpad4',
    'A_ANYWHERE', 'acCmdNewObjectNavigationTopWeb',
    'DB_SORTUNDEFINED', 'acVerticalAnchorBottom',
    'acCmdPivotShowBottom25Percent', 'acCmdZoom1000', 'SubForm',
    'acVertical', 'DB_DENYREAD', 'acADP', 'acSysCmdUpdateMeter',
    'Hyperlink', 'Modules', 'acFormatIIS',
    'acCmdPartialReplicaWizard', 'DB_QSPTBULK', 'Control',
    'acLBClose', 'A_DESIGN', 'acCmdViewViews', 'acExportReport',
    'acObjStateDirty', 'acCmdFind', 'acColorIndexDarkBlue',
    'acCmdNewObjectNavigationTopTopWeb', 'acCmdControlPaddingWide',
    'vbKeyF12', 'acCmdDiscardChangesAndRefresh', '_RectangleEvents',
    'AllReports', 'acEffectEtched', 'vbKeyControl', 'acCmdDemote',
    'acCmdExportSnapShot', 'acCmdImportAttachParadox',
    'acCmdSubformDatasheetView', 'acCmdObjBrwShowHiddenMembers',
    'acCmdLayoutSplitColumnCell', 'acCmdArrangeIconsByName',
    'acCmdDateAndTime', 'acCmdStackedLayout', 'DB_SEC_NOACCESS',
    'vbKeyX', 'acCmdInsertFile', 'acFormatXLSB', 'DispSectionEvents',
    'acCmdShowTable', 'acCmdBackgroundPicture',
    'acCmdPivotTableUngroupItems', 'acCmdTestValidationRules',
    '_PageHdrFtrInReportEvents', 'acDatasheetAllowEdits',
    'acDisplayAsPaperclip', 'A_EDIT', 'V_SINGLE',
    'acChartColumnStacked', 'acCmdSelectEntireLayout',
    'vbKeyPageDown', 'acCmdPivotTableDemote', 'acCmdDatabaseSplitter',
    'acCmdIndent', 'acCmdDiagramAutosizeSelectedTables',
    'vbKeyCapital', 'OLE_RELEASE', 'acCurrent', 'acCmdPivotCollapse',
    'acCmdExportSharePointList', 'A_TABLE', 'Get',
    'acCmdFindNextWordUnderCursor',
    'acCmdCreateShortcutMenuFromMacro', 'acImeModeOff', '_LocalVars',
    'acCmdImportAttachLotus', '_SubReport',
    'acCmdLayoutInsertColumnLeft', 'acSeparatorCharactersSemiColon',
    'DB_LANG_CZECH', 'SmartTagAction', 'acChartBubble',
    'acCmdNewObjectPivotChart', 'acCmdNewObjectAutoForm',
    'acPRDPSimplex', 'acHorizontalAnchorBoth',
    'acCmdEncryptDecryptDatabase', 'vbKeyO', 'acChartBarStacked',
    'acSendNoObject', 'acCmdModifySharePointListWorkflow',
    'acCmdRemove', 'acCmdRemoveAllFilters',
    'acCmdPivotTableHideDetails', 'acCmdNewObjectClassModule',
    'AcSeparatorCharacters', 'acPageHeader', 'SmartTag',
    'acCmdConditionalFormatting', 'LB_GETCOLUMNWIDTH', 'acIcon',
    'acCmdPivotAutoStdDevP', 'acCmdAutoDial',
    'acCmdApplyAutoFormat23', 'acExportQuery', 'vbKeyH',
    'acImeModeNoControl', 'acPropCatData', 'acCmdPivotAutoMin',
    'acChartAreaStacked100', 'vbKeyCancel', 'acDataStoredProcedure',
    'acOLEVerbInPlaceActivate', 'acCmdNewObjectDesignQuery',
    'acCmdIndexes', 'acCmdControlPaddingNone', 'V_NULL',
    'acCmdViewModules', 'DispPageHdrFtrInReportEvents',
    'acCmdApplyFilterSort', 'acCmdSynchronizeNow',
    'acSeparatorCharactersComma', 'acLine', 'acPRPSLetter',
    'acDefViewDatasheet', 'A_FIRST', 'EmptyCell', 'AcPrintPaperBin',
    'vbKeyL', 'AcExportXMLObjectType', 'acCmdViewFunctions',
    'ComboBox', 'acPRDPHorizontal', 'acCmdLinkedTableManager',
    'acCmdExportParadox', 'acPRPSQuarto', 'acImeModeAlpha',
    'acCmdPreviewEightPages', '_Label', 'acPRPSFolio', 'AcObjectType',
    '_OptionButton', '_ObjectFrameEvents', 'acOLEUpdateAutomatic',
    'vbKeyQ', 'acUnintialized', 'Image', 'acCmdAlignToTallest',
    'DB_SORTDUTCH', 'acCmdDataOutline', 'acCmdExportRTF', 'A_COPY',
    'A_START', 'acFormatRTF', 'acDataBar', 'DB_SEC_MOD_WRITEDEF',
    '_CheckBoxInOptionEvents', 'acCmdHorizontalSpacingMakeEqual',
    'acPRPQMedium', 'acViewLayout', 'Line', 'A_DELETE',
    'acCmdPivotTableFilterBySelection', 'acSpreadsheetTypeLotusWJ2',
    'acCmdNewObjectDiagram', 'acAggregateCountDistinct',
    '_CurrentData', 'acPRPQDraft', 'DB_SEC_WRITEDEF', 'A_EXIT',
    'acCmdClearItemDefaults', 'DB_LANG_HUNGARIAN',
    'acCmdSubformPivotTableView', 'acPRPSEnv9', 'AcTextFormat',
    'LB_END', 'acCmdSortDescending', 'acCmdPivotChartDrillOut',
    '_Form3', 'acCmdSingleStep', 'acShiftMask', 'acCmdPivotShowTop1',
    'acDisplayAsHyperlinkOnScreenOnly', 'acCmdViewList',
    'acCmdOpenSearchPage', 'acAxisUnitsTrillions', 'acSecMacExecute',
    'ReportOldV10', 'acPRPSLedger', 'acPRPSA5', 'DB_TABLE',
    'acCmdChangeToOptionButton', '_ItemsSelected', 'Reports',
    'AcControlType', 'acPRHorizontalColumnLayout',
    'acCmdPivotTableMoveToDetailArea', 'acCmdNewObjectQueryWeb',
    'Label', 'acCmdPivotDelete', 'A_ATTACH', '_Edge',
    'acCmdAlignLeft', 'acLessThan', 'acOptionGroup',
    'acCmdRemoveTable', 'acCmdOpenURL', 'acCmdRenameGroup',
    'acHorizontalAnchorLeft', 'acNormal', 'acCmdNewObjectQuery',
    'acDraft', 'acCmdOutputToText', 'acCmdOfficeClipboard',
    'DB_SORTHEBREW', 'LB_OPEN', 'ListBox', 'acFilterByForm',
    'DATA_ERRADDED', '_Combobox', 'acCmdFitToWindow',
    'acCmdRepairDatabase', 'AcPrintOrientation', 'DB_DATE',
    'acPrimaryAxis', 'DB_SORTCZECH', 'acOutputFunction',
    'acMenuVer1X', 'acDatasheetOnRight', 'acCmdExportLotus',
    'acCmdSizeToNarrowest', 'acCmdAnalyzeTable', 'A_ADD',
    'acCmdPivotChartDrillInto', 'DB_RELATIONDELETECASCADE',
    'acCmdLayoutGridlinesOutline', 'acMarkerLongDash',
    'A_RECORDSMENU', 'acCmdAppMove', 'DB_SEC_MAC_EXECUTE',
    '_AccessField', 'DispCustomControlEvents', '_Report3',
    'acExcludePrimaryKeyAndIndexes', 'AcResourceType', 'AllObjects',
    'acViewReport', '_TabControl', 'acCmdReferences',
    'acSpreadsheetTypeLotusWK4', 'acCmdInsertActiveXControl',
    'acCmdBookmarksNext', 'DispIvyChartEvents', 'acSecModReadDef',
    '__ControlInReportEvents', 'A_NEWREC', 'LB_GETFORMAT', 'vbKey4',
    'acPRPSDSheet', 'acCmdNewObjectMacro', 'acCmdOpenTable',
    '_ToggleButton', 'acPropCatNA', 'acPRPSEnv14', 'Operation',
    'acNotEqual', 'DB_SORTARABIC', 'vbKeyInsert', 'AllMacros',
    'acCmdFilterBySelection', 'acColorIndexBrightGreen',
    'Application', 'DispListBoxEvents', 'acCmdApplyAutoFormat1',
    'TextBox', 'DB_ATTACHEDTABLE', 'acCmdLayoutView',
    'acCmdShowMessageBar', 'acEffectNormal', 'acExportFunction',
    'acCmdQueryGroupBy', 'AcCurrentView', 'AcImportXMLOption',
    'acPRBNLargeCapacity', 'DispCheckBoxEvents', 'acFilterAdvanced',
    'acCmdRedo', 'DB_SORTGREEK', 'acEmptyCell',
    'acCmdApplyAutoFormat6', 'DB_SORTSWEDFIN', 'acNavigationButton',
    'DB_SORTTURKISH', 'vbKeyF13', 'acCmdRefreshSharePointList',
    'acTrendlineLogarithmic', 'acCmdImportAttachdBase',
    'AcShowToolbar', 'acDetail', 'acCmdChangeToListBox',
    'acCmdAlignToGrid', '_Report', 'AcOutputObjectType',
    'acCmdOpenHyperlink', 'acCmdZoom200', 'acCmdQueryTypeSQLUnion',
    'acDefViewReportBrowse', 'acCmdObjBrwFindWholeWordOnly',
    'acAxisUnitsMillions', 'acCmdSelectEntireColumn', 'CommandButton',
    'acCmdBookmarksPrevious', 'DB_SEC_WRITEOWNER', 'acCopy', 'V_DATE',
    'acCmdColumnWidth', 'acLiveReportSource', 'acPreview',
    'acFormAdd', 'acCmdPasteAppend', 'acFooter', 'acComboBox',
    'vbKeyShift', 'acLBEnd', 'acOLECreateEmbed', 'vbKeyN',
    'acCmdDiagramRecalculatePageBreaks', 'acCmdApplyAutoFormat9',
    'acPropertyWidth', 'acExpression', 'acSendForm', 'acCmdViewCode',
    'acCmdControlMarginsNarrow', 'acCmdSQLView',
    '_ToggleButtonInOptionEvents', 'A_LOW', 'acDataServerView',
    'acDashTypeSolid', 'acCmdLayoutGridlinesTop', 'DataAccessPages',
    'acTableDataMacro', 'acOLECopy', 'acColorIndexRed', 'vbKeyEnd',
    'vbKeyS', 'acOutputModule', 'acCmdPrint', 'vbKeyA',
    'acImeModeHiragana', 'acImeModeHangulFull', 'acCmdInsertLogo',
    'acCmdMacroAllActions', 'DB_ENCRYPT', 'acCmdViewDataAccessPages',
    'acCmdViewTableNameOnly', 'acChartPie', 'acCmdApplyAutoFormat21',
    'SmartTagProperty', 'acCmdNewObjectForm', 'AcTrendlineOptions',
    'acPRBNEnvelope', 'acCmdZoomBox', 'AcOpenDataMode', 'vbKey9',
    'DB_BOOLEAN', 'acCmdQueryTypeMakeTable', 'acSearchAll',
    'acSubAddress', 'acCmdBringToFront', 'acGridlinesNone',
    'acFunction', 'acObjectUpdate', 'acLinkHTML',
    'acCmdSaveDatabaseAsNewTemplatePart', 'acPropCatLayout',
    'acCmdNewObjectNavigationRight', 'acPRPQHigh', 'AllForms',
    'acCmdSaveAsHTML', 'acCmdAddDataMacroAfterDelete',
    'acExportTable', 'Proc', 'acTrendlineExponential',
    'acCmdRecordsGoToFirst', 'acCmdLayoutGridlinesCrossHatch',
    'acCmdPageSetup', 'acCmdDiagramShowRelationshipLabels',
    'acCmdMoveColumnCellUp', 'acDelete', 'A_NEW', '_Printer',
    'acCmdToggleOffline', 'DB_QACTION', 'AccessObject',
    'acCmdPivotTableMoveToRowArea', 'acPageBreak', 'References',
    'acCmdCloseAll', 'acCmdPivotShowBottom1Percent', 'acCmdRestore',
    'acCmdPivotTableExportToExcel', 'acLBOpen',
    'acCmdCompactDatabase', 'FormOldV10', 'acCmdSynchronize',
    'acAppendData', 'acLayoutNone', 'PaletteButton',
    'acCmdQuickWatch', 'acCmdQueryAddToOutput', 'A_QUERY',
    'acCmdClearGrid', 'acCmdManageAttachments', 'WebService',
    'acPRPSA4', 'DefaultWebOptions', 'acCmdPrimaryKey',
    'AcNewDatabaseFormat', 'acCmdAnalyzePerformance', 'acPrompt',
    '_DependencyInfo', 'acColorIndexOlive', 'A_EDITMENU',
    'acCmdAnchorBottomLeft', 'acCmdPasteAsHyperlink',
    'acCmdViewObjectDependencies', 'acCmdSwitchboardManager',
    'acImeSentenceModeConversation', 'SYSCMD_REMOVEMETER',
    'acSelectAllRecords', 'acAxisUnitsNone', 'AcDefReportView',
    'DB_QUERYDEF', 'acWebUserEmail', 'vbKeySpace', '_Dummy',
    'acPRPSEnvC6', 'DispSubFormEvents', 'DB_QSQLPASSTHROUGH',
    'DB_QSETOPERATION', 'acCmdRecordsGoToNext', 'DispLineEvents',
    'acCmdLayoutSplitRowCell', 'acPropertyBackColor', 'vbKeyF1',
    'acCmdPageProperties', 'acCmdApplyAutoFormat7', 'ReturnVars',
    'DispCommandButtonEvents', 'acOLEUpdateFrozen', 'A_SAVERECORD',
    'acDefViewPivotChart', 'vbKeyF16', 'acChart',
    'AcExportXMLEncoding', 'acImportDelim',
    'acCmdNewObjectStoredProcedure', 'acCmdNewObjectContinuousForm',
    'CTRL_MASK', 'acCmdDeleteQueryColumn', 'acSysCmdAccessVer',
    'acDateGroupQuarter', 'acMarkerCircle', 'acDataErrContinue',
    '_Checkbox', 'AllStoredProcedures', 'acCmdAnchorTopRight',
    'CodeProject', 'acCmdUnfreezeAllColumns', 'acCmdSizeToFit',
    'acOLEClose', 'acFieldValue', 'acCmdSetControlDefaults',
    '_PageEvents', 'acCmdNewObjectModalForm', 'acCmdMacroNames',
    'AcFileFormat', 'A_REFRESH', 'acCmdPreviewTwelvePages',
    'acCmdAddDataMacroBeforeChange', 'DB_SEC_FULLACCESS',
    'acCmdInsertTitle', 'acUp', 'acCmdPivotShowBottom5',
    '_SqmProxyReceiver', 'AcSpreadSheetType', 'acCmdWorkflowTasks',
    'acLegendPositionBottom', 'acAggregateMinimum', 'ObjectFrame',
    'acEnableScript', 'A_SELECTALLRECORDS', 'acWebUserID',
    'vbKeyNumpad9', 'acFormatASP', 'vbKeyEscape', 'acColorIndexAqua',
    'acCmdInsertRows', 'acPRPSEnv11', 'acAggregateAverage',
    'TempVars', '_TempVars', 'acCursorOnHoverDefault',
    'acCmdToggleCacheListData', 'acCmdProcedureDefinition',
    'acCmdViewDiagrams', 'acOLEEmbedded', 'acSysCmdInitMeter',
    '_BoundObjectFrameEvents', 'acCmdDataAccessPageAddToPage',
    'AcModuleType', 'TabControl', 'acCmdImportAttachOutlook',
    'DB_ATTACHEXCLUSIVE', 'acServerFilterByForm', 'acPRBNLargeFmt',
    'vbKeyNumpad6', 'acCmdAlignToShortest', 'acFormEdit',
    'acCmdPivotTablePercentGrandTotal', 'A_UNDOFIELD',
    'acEdgeBrowser', 'SYSCMD_GETOBJECTSTATE', '_ChartSeries',
    'acCmdSelectRecord', '_IvyChart', 'Edge',
    'acCmdApplyAutoFormat14', 'acCmdGroupControls', 'acMedium',
    'ALT_MASK', 'acMenuVer70', 'DB_SORTGENERAL', 'vbKeyF2',
    'acCmdListConstants', 'acCmdPrintPreview', 'acCmdQuickInfo',
    'acCmdViewTableKeys', 'acCmdSizeToWidest', 'LEFT_BUTTON',
    'acCmdRefresh', 'ChartSeriesCollection', 'acCmdPromote',
    'acPRPSEnvPersonal', 'AcFindMatch',
    'acImeSentenceModePhrasePredict', 'acImeSentenceModeNone',
    '_WizHook', 'acCmdInsertSubdatasheet', 'vbKeyF',
    'acCmdSavedImports', '_ImageEvents', 'acDialog', 'DB_PRIMARY',
    'acCmdPivotTableShowDetails', 'Controls', 'AcCommand',
    'acCmdFindNext', 'acDisplayAsIcon', 'acDateGroupMonth',
    'acGridOnly', 'AccessObjectProperty', 'NavigationControl',
    'acCmdSend', '_ObjectFrame', 'DispWebBrowserControlEvents',
    'acViewSql', 'acObject', 'acFormBar', 'acSavePrompt',
    'acOLESizeClip', 'acUndo', 'A_ALL',
    'acSeparatorCharactersNewLine', 'DoCmd', 'AcDataTransferType',
    'acCmdOutdent', '_WebBrowserControl', 'WebBrowserControl',
    'A_NORMAL', 'DATA_ERRDISPLAY', '_AdditionalData',
    'acCmdEditingAllowed', 'acSpreadsheetTypeExcel5', 'acQuery',
    'acCmdReplace', 'acCmdSaveModuleAsText', 'acCmdDeleteTab',
    'acExportAllTableAndFieldProperties', 'acPRPSEnvB4', 'A_CUT',
    'SYSCMD_CLEARHELPTOPIC', 'acCmdCopyHyperlink', 'A_IMPORTFIXED',
    'acCmdAppRestore', 'V_EMPTY', 'acHigh', 'acVerticalAnchorBoth',
    'AcSendObjectType', 'acLBInitialize', 'AcWebUserGroupsDisplay',
    'acFieldHasFocus', 'acCmdRecordsGoToPrevious', 'LB_GETROWCOUNT',
    'acExportForm', 'acOLEActivate', 'acCmdPivotShowAll',
    'acCmdWindowArrangeIcons', 'acOLEVerbShow', 'acCmdCompleteWord',
    'acPRPSEnvC5', 'acVerticalAnchorTop', 'acCmdNewObjectDesignForm',
    'acCmdNewDatabase', 'acAutomatic', 'acPersistReportML',
    'acCmdSpeech', 'DB_SEC_REPLACEDATA', 'vbKeyF6',
    'DB_SEC_FRMRPT_WRITEDEF', 'acOutputReport', 'acCmdSelectForm',
    'acCmdZoom75', 'AcDefView', 'acCmdInvokeBuilder',
    'acSysCmdRemoveMeter', 'acLBGetFormat',
    'acCmdLayoutGridlinesVertical', '_CustomControlInReport',
    'DB_AUTOINCRFIELD', 'AcPrintItemLayout', 'OBJSTATE_NEW',
    'acImeSentenceModePluralClause', 'DB_INCONSISTENT',
    'A_OBJECTUPDATE', 'acCmdFindPrevWordUnderCursor', 'DB_QMAKETABLE',
    'DB_OPEN_SNAPSHOT', '__Help', 'AcMarkerType', 'A_ENTIRE',
    '_PageHdrFtrInReport', 'acCmdLayoutGridlinesBoth',
    'acCmdChangeToCheckBox', 'DB_DOUBLE', 'acOLECreateLink',
    '_AutoCorrect', 'acCloseServerFilterWindow', 'acExportMerge',
    'SmartTagActions', 'AcNavigationSpan', '_Page',
    'acCmdDiagramNewTable', 'BoundObjectFrame',
    'acCmdControlMarginsWide', 'A_SELECTION', 'acChartWordCloud',
    'acCmdMakeMDEFile', 'acCmdApplyAutoFormat18',
    'acDatasheetOnBottom', 'acCmdPivotChartSortAscByTotal',
    'acLoading', 'DB_LANG_GREEK', 'acFormReadOnly', 'acFormatDAP',
    'acSubform', 'AcHorizontalAnchor', 'acCmdFavoritesAddTo',
    'acMenuUncheck', 'acCmdInsertTableColumn', 'acOutputQuery',
    'acCmdSaveAs', 'acCmdTableCustomView', 'acCmdZoom50',
    'acCmdApplyAutoFormat3', 'acPRCMColor', 'WSParameter',
    'acCmdImportAttachODBC', 'acCmdExportODBC', 'acPRPS10x14',
    'DB_BYTE', 'acExit', 'acCmdPublishDefaults', 'vbKeyB',
    'acToolbarWhereApprop', 'acCmdLoadFromQuery', 'acPropertyEnabled',
    '_SmartTags', 'DispBoundObjectFrameEvents', 'acScreenTip',
    'A_LAST', 'DB_RELATIONRIGHT', 'acOLEChanged', 'acPromptScript',
    'acCmdExportFixedFormat', 'AcRecord', 'AcAggregateType',
    'acSecondaryAxis', 'acCmdControlPaddingMedium',
    'acPropertyHeight', 'vbKeyR', 'acFormatTXT', 'acObjStateOpen',
    'acNull', 'FormatCondition', 'acCmdControlMarginsNone', 'A_FILE',
    'acNew', '_ListBoxEvents', 'acOLECreateFromFile',
    'acGroupLevel2Footer', 'acDatasheetOnLeft',
    'acCmdNewObjectNavigationTopTop', 'acOLEVerbOpen', 'acNewRec',
    'vbKeyPageUp', 'acChartWaterfall', 'acCmdNewObjectSplitForm',
    'acCmdAddToNewGroup', 'DB_LONGBINARY', 'acLink',
    'acSysCmdIniFile', 'acCmdPasteFormatting', 'DB_NONULLS',
    'acDashTypeDashDotDot', 'acCmdUndo', 'acOutputForm',
    'vbKeyNumpad8', 'acCmdAdvancedFilterSort', 'DB_HIDDENOBJECT',
    'acMarkerShortDash', '_LineEvents', 'acCmdPivotAutoVarP',
    'acCmdStartNewWorkflow', 'acSchemaNone', 'A_PAGES',
    'acCmdPivotShowTop1Percent', 'acCmdAddInManager', 'A_PASTE',
    'acPRBNManual', 'acAxisRangeAuto', 'acScrollNo',
    'acCmdObjBrwHelp', 'A_SELECTRECORD_V2', 'A_SAVEFORM',
    'acCmdFormView', 'acLinkSharePointList', 'acPRBNFormSource',
    'acHorizontal', 'acMarkerNone', 'acCmdDelete',
    'acCmdModifySharePointListAlerts', '_References_Events',
    'acPropertyLocked', 'acFormOnly', 'acCmdPivotAutoCount',
    'acCmdTabControlPageOrder', 'acCmdPivotTableClearCustomOrdering',
    'DB_SEC_DBCREATE', 'acDefViewSplitForm', 'acCmdEditHyperlink',
    'acCmdPageNumber', 'A_EXPORTFIXED', 'acAll', 'A_MENU_VER20',
    'A_IMPORTDELIM', 'AcValueAxis', '_DependencyObjects',
    'acImeModeHangul', '_Section', 'acAxisUnitsTenThousands',
    'acCmdRefreshPage', 'DB_DECRYPT', 'LB_CLOSE', 'A_TOOLBAR_NO',
    'vbKeyF8', 'acCmdChangeToComboBox', 'acCmdBackgroundSound',
    'FormOld', 'Module', 'acCmdApplyAutoFormat19',
    'acCmdMacroArguments', 'acCmdRenameColumn',
    'acCmdShowAllRelationships', 'acCmdPreviewFourPages',
    'acCmdDebugWindow', 'vbKeyNumpad0', 'acCmdRemoveFromLayout',
    'Entities', 'acCmdShowEnvelope', 'acEmbedSchema',
    'acPRCMMonochrome', 'acSave', 'MIDDLE_BUTTON', 'Operations',
    'acOLEDisplayContent', 'acCmdExportExcel',
    'acCmdVerticalSpacingDecrease', 'acCmdPublishDatabase',
    'acAxisUnitsTenMillions', 'acSaveYes', 'AllQueries',
    'acEffectSunken', 'acCmdOutputToRTF', 'DB_LANG_HEBREW',
    'vbKeyNumpad3', 'DB_SORTSPANISH', 'vbKeyF11',
    'acCmdNewObjectAutoReport', 'vbKeyV', 'acEditMenu',
    'acCmdWebTheme', 'vbKeyDecimal', 'acCmdExport',
    'acCmdPivotShowBottom25', 'acCmdObjectBrowser', 'LocalVars',
    '_GroupLevel', 'acCmdManageReplies', 'Forms', 'DB_FAILONERROR',
    'acCmdTransparentBackground', 'acDataErrDisplay',
    'acNewDatabaseFormatAccess2007', '_ReturnVars', 'acChartDoughnut',
    'acImage', 'acOLEFetchVerbs', 'acCmdLayoutGridlinesHorizontal',
    'acFullAddress', '_FormEvents', 'acSecMacReadDef', 'acCmdZoom500',
    'acRecordsMenu', 'acCmdUserLevelSecurityWizard', 'CustomControl',
    'acCmdPivotChartType', 'acCmdDataAccessPageDesignView',
    '_ChartValues', 'vbKeyReturn', 'acCmdExportHTML',
    'acCmdSortingAndGrouping', 'acCmdConvertMacrosToVisualBasic',
    'acColorIndexViolet', 'RIGHT_BUTTON', 'DB_LANG_DUTCH',
    'acCmdDeletePage', 'acCmdSetCaption', '_SubForm', 'A_SAVEFORMAS',
    'acTrendlinePolynomial', 'DataAccessPage', 'acNavigationControl',
    'DB_ATTACHEDODBC', 'acChartColumnStacked100', 'acDataAccessPage',
    'acCmdQueryParameters', 'acCmdShowOnlyWebToolbar',
    'DB_SORTHUNGARIAN', 'acCut', 'DB_QUPDATE', 'acCmdFormatCells',
    'acCmdSaveLayout', 'acCmdStepOut', 'AcDateGroupType',
    'acMenuGray', 'acQuitSaveAll', 'acCmdAppMaximize',
    'acCmdPivotShowBottom10', 'acCmdTabOrder', 'acCmdRun',
    'acCmdEditListItems', 'AcHyperlinkPart', 'A_DELETE_V2',
    'acCmdSelectDataAccessPage', 'acCmdChangeToCommandButton',
    'acCmdOpenDatabase', 'vbKeyF9', 'acCmdConvertDatabase',
    'acImeModeKatakanaHalf', 'acCmdFindPrevious',
    'acCmdViewStoredProcedures', 'acCmdStepOver',
    'acFileFormatAccess2007', 'acEqual', 'acCmdNewObjectModule',
    'DispNavigationControlEvents', 'acOLEVerbPrimary',
    'acCmdPivotChartMultiplePlots', 'acCmdCopyDatabaseFile', 'A_GOTO',
    'acPrintAll', 'acObjectVerb', 'acCmdSubdatasheetCollapseAll',
    'acCmdJoinProperties', 'acCmdObjBrwViewDefinition',
    'acPropertyVisible', 'AcAxisUnits', 'acCmdTransferSQLDatabase',
    'acCmdDeleteRows', 'A_MACRO', 'acLayoutTabular',
    'DB_OPEN_DYNASET', 'CheckBox', '_Textbox',
    'acDisplayAsHyperlinkIfHyperlink', 'vbKeyDelete', 'acOLESizeZoom',
    'DB_QCROSSTAB', 'acCmdPrintSelection', 'acPRPSEnv10',
    'acComplete', 'acOutputTable', 'acLBGetValue', 'acPRPSLegal',
    'AcCloseSave', 'acCmdDeleteRecord', 'acGroupLevel1Footer',
    'acAxisUnitsPercentage', 'DB_LANG_ARABIC', 'acCloseFilterWindow',
    'acDefViewPreview', 'acCmdOutputToExcel',
    'acCmdNewObjectDatasheetForm', 'vbKeyAdd',
    'DispNavigationButtonEvents', 'acHorizontalAnchorRight',
    'acSysCmdClearStatus', 'acCmdPivotChartShowLegend',
    'DB_SEC_DBOPEN', 'DB_VARIABLEFIELD', 'vbKeyDivide',
    '_SubReportEvents', 'acCmdNewObjectAutoReportWeb',
    'acCmdOpenNewHyperlink', 'DB_TEXT', 'Properties',
    'NavigationButton', 'vbKeyBack', 'Reference', 'acDefViewSingle',
    'acCurViewFormBrowse', '_CommandButtonEvents',
    '_OptionButtonInOptionEvents', 'acShowAllRecords',
    'acSpreadsheetTypeLotusWK3', 'acCmdViewReports', 'AcProperty',
    'acSysCmdGetWorkgroupFile', 'DB_SEC_MAC_READDEF', 'acMarkerX',
    'acCmdControlPaddingNarrow', 'SHIFT_MASK', 'A_EXPORT',
    'DB_READONLY', 'acCmdPivotShowBottom2', 'acCmdDocRestore',
    'acCmdQueryTypeSQLDataDefinition', 'acCmdExportAccess',
    'acCmdDiagramLayoutSelection', 'acOLEActivateDoubleClick',
    'DB_PROHIBITNULL', 'AllFunctions', 'acCmdDocMinimize',
    'acPRPSA4Small', 'A_MENU_VER1X', 'AcDisplayAs',
    'acCurViewPreview', 'acTable', 'acCmdShowMembers',
    'acCmdPivotTablePercentParentColumnItem',
    'acSpreadsheetTypeExcel7', 'acDeleteCancel', 'acPRBNLower',
    'acMarkerAsterisk', 'acCmdSaveAsTemplate', 'acDataErrAdded',
    'acViewPreview', '_CommandButton', '_Application', 'acPRPSCSheet',
    'Section', 'vbKeyMultiply', 'ChartValues', 'AcDataObjectType',
    'acColorIndexGray', 'AcExportXMLOtherFlags', 'acSaveForm',
    'acDesign', 'acCmdPivotShowBottom10Percent', 'acImeModeDisable',
    'acCursorOnHoverHyperlinkHand', '_PageBreak', 'acCmdWindowUnhide',
    'vbKeyHelp', 'acCmdSubformDatasheet', 'CurrentProject',
    'acCmdAnchorTopLeft', 'AcPictureCaptionArrangement', 'vbKey3',
    'vbKeyUp', 'acOLESizeAutoSize', 'ReturnVar', 'acDashTypeDot',
    'CodeData', 'acCmdAnchorBottomStretchAcross', 'acDateGroupYear',
    'acDataAccessPageDesign', 'acGroupLevel2Header', 'acGoTo',
    'acColorIndexBlack', 'acCmdPreviewOnePage',
    'acCmdPivotChartByRowByColumn', 'acPRPSEnv12',
    'SYSCMD_UPDATEMETER', 'acCmdWebPagePreview',
    'acCmdCreateMenuFromMacro', 'acCmdProperties', 'Let', 'vbKey5',
    'acCmdPivotAutoMax', '_ListBox', 'DB_LANG_NORDIC', 'acImport',
    'acCmdObjBrwGroupMembers', 'DB_BINARY', 'DispPaletteButtonEvents',
    'acDeleteUserCancel', 'acCmdConnection', 'acCmdInsertPicture',
    'acCmdCalculatedColumn', 'acServerFilter', 'acSecFrmRptExecute',
    'acCmdMaximiumRecords', 'acCmdZoom10', 'Chart',
    'acCmdSubformFormView', 'DB_SEC_DBEXCLUSIVE', 'acCmdEnd',
    'acCmdPivotShowBottom5Percent', 'AutoCorrect',
    'acCurViewPivotTable', 'acCmdInsertQueryColumn',
    'acCmdBrowseSharePointList', 'AcTextTransferType',
    'acCmdNewObjectNavigationTop', '_CheckBoxEvents', 'Rectangle',
    'acListBox', 'acCmdArrangeIconsByCreated', 'acQuitSaveNone',
    'acFirst', 'acCmdCreateRelationship', 'acMarkerSquare',
    'acCmdDuplicate', 'acCmdQueryTotals', 'acCmdPivotShowBottomOther',
    'acCmdHyperlinkDisplayText', 'acAxisRangeFixed', 'acSchemaXSD',
    'acCmdClearAllBreakpoints', 'acColorIndexGreen', 'acLinkDelim',
    'vbKeyLeft', 'AcDashType', 'acSysCmdCompile', 'acPropertyValue',
    'DB_SEC_DELETEDATA', 'acLow', 'acCmdAddDataMacroAfterUpdate',
    'acLayoutStacked', 'acCmdInsertFileIntoModule',
    'acOLESizeStretch', '_DefaultWebOptions', 'TypeLib', 'A_FORMDS',
    'acChartBoxWhisker', 'acDataFunction',
    'acCmdPrepareDatabaseForWeb', 'acBrowseToForm', 'Project',
    'acCmdChangeToImage', 'acCmdViewFieldList',
    'acCmdArrangeIconsByType', 'acCmdGoBack', 'acBetween',
    'vbKeySelect', 'acCmdPivotShowTopOther', '_DummyEvents',
    'acFileFormatAccess97', 'acCmdOLEObjectDefaultVerb',
    'acDisplayText', '_OptionGroupEvents', 'acImeModeKatakana',
    'AcFormOpenDataMode', 'acCmdNewObjectNavigationTopRight',
    'A_ICON', 'acCmdFreezeColumn', 'acWebBrowser', 'V_INTEGER',
    'acFormPropertySettings', 'acCmdSavedExports',
    'acPRVerticalColumnLayout', 'A_NEXT', 'acCmdPivotAutoFilter',
    'acCmdUserAndGroupPermissions', 'acCmdChangeToToggleButton',
    'vbKeyC', 'DB_RELATIONDONTENFORCE', 'acUTF16',
    'acLessThanOrEqual', 'acExportDelim',
    'acSpreadsheetTypeExcel12Xml', 'acSaveFormAs',
    'acCmdLayoutInsertRowAbove', 'acPRPSB5', 'acCmdDocMaximize',
    'acPropertyForeColor', 'acCmdInsertPage', 'OptionGroup',
    'acCmdSendToBack', 'AcPrintDuplex', 'acMenuVer20', 'acTextBox',
    'acCmdUnhideColumns', 'acCmdInsertHyperlink', 'acCmdPivotRefresh',
    'acCmdPrintRelationships', 'AcWebBrowserScrollBars',
    'ToggleButton', 'acOLEActivateGetFocus',
    'acCmdSubdatasheetExpandAll', 'acCmdAlignTop',
    'acCmdPivotChartSortDescByTotal', 'RefKind',
    'acCmdNewObjectBlankReport', 'acStandardModule', 'SYSCMD_INIFILE',
    'acCmdTileVertically', 'acCmdImportAttachText',
    'acCmdApplyAutoFormat17', 'acCurViewLayout', 'acExportServerView',
    'acOLEDisplayIcon', 'acSysCmdProfile', 'AccessField',
    'acCmdRegisterActiveXControls', 'SYSCMD_INITMETER',
    'acImportFixed', 'ChartValuesCollection', 'acBottom',
    'acCmdToolbarsCustomize', '_SectionInReport', 'acCmdAlignMiddle',
    'AcProjectType', 'acCmdViewShowPaneGrid', 'ReportOld',
    'acCmdLastPosition', 'acCmdRefreshData', 'acCmdDesignObject',
    'acColorIndexYellow', 'A_OBJECT', 'DispComboBoxEvents',
    'V_DOUBLE', 'acCmdAddWatch', 'acUTF8',
    'acCmdPivotChartMultiplePlotsUnifiedScale', 'acCmdFont',
    'DB_ATTACHSAVEPWD', 'acCmdSizeToGrid', 'acSaveRecord', 'acMDB',
    'acEffectShadow', 'acCmdFormHdrFtr', 'DB_INTEGER', 'Printers',
    'acCmdHideMessageBar', 'Class', 'acCurViewDesign',
    'acCmdApplyAutoFormat16', 'acLegendPositionTop',
    'acCmdUngroupControls', 'acCmdViewQueries', 'AcSysCmdAction',
    'DB_UNIQUE', 'OLE_RENAMED', 'acCmdInsertLookupColumn',
    'acClassModule', 'acFileFormatAccess95', 'acCmdCreateReplica',
    'acCmdPivotTableCreateCalcTotal', 'Attachment', 'vbKeyClear',
    'acCmdMicrosoftAccessHelpTopics', 'acCmdChangeToTextBox',
    'vbKeyPause', 'acSpreadsheetTypeExcel9', 'acCmdAppSize',
    'DB_SORTPOLISH', 'acCmdSharePointSiteRecycleBin',
    'acCmdSetDatabasePassword', 'acDataReport', 'acAxisUnitsHundreds',
    'SYSCMD_ACCESSDIR', 'acCmdRecordsGoToNew',
    'acCmdPivotTableGroupItems', 'acCmdNewObjectTable', 'acPRPQLow',
    'acOLEVerbInPlaceUIActivate', 'acInteractive', '_Hyperlink',
    'acCmdQueryTypeSQLPassThrough', 'acCmdAnchorStretchDownAcross',
    'A_UP', 'AcSection', 'acOutputServerView', 'acCmdViewDetails',
    'A_SAVE', 'Report', 'acDateGroupDay',
    'AcSharePointListTransferType', '_References',
    'acDashTypeDashDot', 'acDatasheetReadOnly', '_BoundObjectFrame',
    'vbKeySeparator', 'acCmdSortAscending', 'acForm',
    '_PageBreakEvents', 'acSpreadsheetTypeExcel12', 'acResourceTheme',
    'acTop', 'acCmdShareOnSharePoint', 'DELETE_CANCEL', 'acGeneral',
    'acLBGetColumnCount', 'acPRPSA3', 'acCmdPivotAutoAverage',
    'acNoPictureCaption', 'acNewDatabaseFormatAccess2002',
    'acCmdZoomSelection', 'acCmdImportAttachAccess',
    'AllDataAccessPages', 'acObjectFrame', 'acCmdPivotAutoSum',
    'acDisplayAsImageIcon', 'acMarkerTriangle', 'acFilterNormal',
    'DispPageEvents', 'acPaste', 'vbKey7', 'acPRPSEnvC4',
    'acCmdPivotTableRemove', 'AcFindField', 'acFormPivotChart',
    '_SmartTagActions', 'acNotBetween', 'SYSCMD_RUNTIME',
    'acCmdPivotTablePercentParentRowItem', 'SmartTagProperties',
    'acChartCombo', 'acViewNormal', '_CheckBoxInOption',
    'acOLEClosed', 'acSysCmdSetStatus', 'DB_SEC_RETRIEVEDATA',
    'acCmdMoveColumnCellDown', 'acLayout',
    'acCmdShowDirectRelationships', 'AcQuitOption',
    'acCmdApplyAutoFormat12', 'acCmdSaveAllModules', 'acPRPSUser',
    'acFile', 'acCmdNewObjectAutoFormWeb', 'acCmdApplyAutoFormat24',
    'acPRPSLetterSmall', 'acCmdSelectReport', 'acCmdDataEntry',
    'acCmdSaveAsReport', '_NavigationControl', 'acCmdInsertChart',
    'acCmdServerFilterByForm', 'acCmdViewToolbox',
    'acCmdNewObjectNavigationRightWeb', 'acCmdSaveAsDataAccessPage',
    'LB_GETCOLUMNCOUNT', 'acCmdPivotChartView', 'vbKeyT',
    'WebOptions', 'DB_IGNORENULL', 'AcAxisRange',
    'acCmdAnchorBottomRight', 'A_EXPORTMERGE', 'acReadOnly',
    '_SectionEvents', 'acCmdAnchorStretchDown',
    'acCmdCollectDataViaEmail', 'acCmdPivotShowTop2', '_FormEvents2',
    'V_LONG', 'acOLEDelete', 'acExportHTML', 'AcVerticalAnchor',
    'acCmdPivotTableCreateCalcField', 'acCmdPivotShowTop10Percent',
    'acEffectRaised', 'DB_QDELETE', 'vbKeyF10', 'vbKeyK',
    'AcSearchDirection', '_SmartTag', 'acCmdDocumenter',
    'DB_VERSION11', 'vbKeyY', 'acDiagram', 'acPropertyTop',
    '_CustomControlEvents', 'acCmdWindowHide', 'A_FORMBAR',
    'DELETE_OK', 'acCmdControlWizardsToggle', 'acTrendlineLinear',
    'acAxisUnitsHundredBillions'
]

_check_version('1.4.9', 1736709024.644870)

